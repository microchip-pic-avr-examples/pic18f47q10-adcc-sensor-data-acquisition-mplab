

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 07 21:12:12 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	text90,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	text92,global,reloc=2,class=CODE,delta=1
   107                           	psect	text93,global,reloc=2,class=CODE,delta=1
   108                           	psect	text94,global,reloc=2,class=CODE,delta=1
   109                           	psect	text95,global,reloc=2,class=CODE,delta=1
   110                           	psect	text96,global,reloc=2,class=CODE,delta=1
   111                           	psect	text97,global,reloc=2,class=CODE,delta=1
   112                           	psect	text98,global,reloc=2,class=CODE,delta=1
   113                           	psect	text99,global,reloc=2,class=CODE,delta=1
   114                           	psect	text100,global,reloc=2,class=CODE,delta=1
   115                           	psect	text101,global,reloc=2,class=CODE,delta=1
   116                           	psect	text102,global,reloc=2,class=CODE,delta=1
   117                           	psect	text103,global,reloc=2,class=CODE,delta=1
   118                           	psect	text104,global,reloc=2,class=CODE,delta=1
   119                           	psect	text105,global,reloc=2,class=CODE,delta=1
   120                           	psect	text106,global,reloc=2,class=CODE,delta=1
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   122                           	psect	text107,global,reloc=2,class=CODE,delta=1
   123                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   124                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   125                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   126                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   127  0000                     
   128                           ; Version 2.30
   129                           ; Generated 02/06/2020 GMT
   130                           ; 
   131                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   132                           ; All rights reserved.
   133                           ; 
   134                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   135                           ; 
   136                           ; Redistribution and use in source and binary forms, with or without modification, are
   137                           ; permitted provided that the following conditions are met:
   138                           ; 
   139                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   140                           ;        conditions and the following disclaimer.
   141                           ; 
   142                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   143                           ;        of conditions and the following disclaimer in the documentation and/or other
   144                           ;        materials provided with the distribution.
   145                           ; 
   146                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   147                           ;        software without specific prior written permission.
   148                           ; 
   149                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   150                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   151                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   152                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   153                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   154                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   155                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   156                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   157                           ; 
   158                           ; 
   159                           ; Code-generator required, PIC18F47Q10 Definitions
   160                           ; 
   161                           ; SFR Addresses
   162  0000                     
   163 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
   164  0000                     
   165 ;; Function _EUSART1_is_tx_done is unused but had its address taken
   166  0000                     
   167                           	psect	mediumconst
   168  00FEB2                     __pmediumconst:
   169                           	callstack 0
   170  00FEB2  00                 	db	0
   171  00FEB3                     _uart:
   172                           	callstack 0
   173  00FEB3  FC                 	db	low _EUSART1_Read
   174  00FEB4  25                 	db	high _EUSART1_Read
   175  00FEB5  01                 	db	low (_EUSART1_Read shr (0+16))
   176  00FEB6  9E                 	db	low _EUSART1_Write
   177  00FEB7  25                 	db	high _EUSART1_Write
   178  00FEB8  01                 	db	low (_EUSART1_Write shr (0+16))
   179  00FEB9  00                 	db	0
   180  00FEBA  00                 	db	0
   181  00FEBB  00                 	db	0
   182  00FEBC  DE                 	db	low _EUSART1_is_rx_ready
   183  00FEBD  2E                 	db	high _EUSART1_is_rx_ready
   184  00FEBE  01                 	db	low (_EUSART1_is_rx_ready shr (0+16))
   185  00FEBF  90                 	db	low _EUSART1_SetTxInterruptHandler
   186  00FEC0  2F                 	db	high _EUSART1_SetTxInterruptHandler
   187  00FEC1  01                 	db	low (_EUSART1_SetTxInterruptHandler shr (0+16))
   188  00FEC2  6A                 	db	low _EUSART1_Receive_ISR
   189  00FEC3  1E                 	db	high _EUSART1_Receive_ISR
   190  00FEC4  01                 	db	low (_EUSART1_Receive_ISR shr (0+16))
   191  00FEC5  9E                 	db	low _EUSART1_SetRxInterruptHandler
   192  00FEC6  2F                 	db	high _EUSART1_SetRxInterruptHandler
   193  00FEC7  01                 	db	low (_EUSART1_SetRxInterruptHandler shr (0+16))
   194  00FEC8  00                 	db	0
   195  00FEC9  00                 	db	0
   196  00FECA  00                 	db	0
   197  00FECB  1E                 	db	low _EUSART1_Transmit_ISR
   198  00FECC  29                 	db	high _EUSART1_Transmit_ISR
   199  00FECD  01                 	db	low (_EUSART1_Transmit_ISR shr (0+16))
   200  00FECE  82                 	db	low _EUSART1_Initialize
   201  00FECF  20                 	db	high _EUSART1_Initialize
   202  00FED0  01                 	db	low (_EUSART1_Initialize shr (0+16))
   203  00FED1                     __end_of_uart:
   204                           	callstack 0
   205  00FED1                     _cmd_name:
   206                           	callstack 0
   207  00FED1  53                 	db	83
   208  00FED2  4E                 	db	78
   209  00FED3  2C                 	db	44
   210  00FED4  42                 	db	66
   211  00FED5  4C                 	db	76
   212  00FED6  45                 	db	69
   213  00FED7  32                 	db	50
   214  00FED8  43                 	db	67
   215  00FED9  6C                 	db	108
   216  00FEDA  69                 	db	105
   217  00FEDB  63                 	db	99
   218  00FEDC  6B                 	db	107
   219  00FEDD  0D                 	db	13
   220  00FEDE  0A                 	db	10
   221  00FEDF  00                 	db	0
   222  00FEE0                     __end_of_cmd_name:
   223                           	callstack 0
   224  00FEE0                     _cmd_serialized_name:
   225                           	callstack 0
   226  00FEE0  53                 	db	83
   227  00FEE1  2D                 	db	45
   228  00FEE2  2C                 	db	44
   229  00FEE3  42                 	db	66
   230  00FEE4  4C                 	db	76
   231  00FEE5  45                 	db	69
   232  00FEE6  32                 	db	50
   233  00FEE7  43                 	db	67
   234  00FEE8  6C                 	db	108
   235  00FEE9  69                 	db	105
   236  00FEEA  63                 	db	99
   237  00FEEB  6B                 	db	107
   238  00FEEC  0D                 	db	13
   239  00FEED  0A                 	db	10
   240  00FEEE  00                 	db	0
   241  00FEEF                     __end_of_cmd_serialized_name:
   242                           	callstack 0
   243  00FEEF                     _resp_conn_param:
   244                           	callstack 0
   245  00FEEF  43                 	db	67
   246  00FEF0  6F                 	db	111
   247  00FEF1  6E                 	db	110
   248  00FEF2  6E                 	db	110
   249  00FEF3  50                 	db	80
   250  00FEF4  61                 	db	97
   251  00FEF5  72                 	db	114
   252  00FEF6  61                 	db	97
   253  00FEF7  6D                 	db	109
   254  00FEF8  00                 	db	0
   255  00FEF9                     __end_of_resp_conn_param:
   256                           	callstack 0
   257  00FEF9                     _resp_AOK:
   258                           	callstack 0
   259  00FEF9  41                 	db	65
   260  00FEFA  4F                 	db	79
   261  00FEFB  4B                 	db	75
   262  00FEFC  00                 	db	0
   263  00FEFD                     __end_of_resp_AOK:
   264                           	callstack 0
   265  00FEFD                     _resp_cmd:
   266                           	callstack 0
   267  00FEFD  43                 	db	67
   268  00FEFE  4D                 	db	77
   269  00FEFF  44                 	db	68
   270  00FF00  00                 	db	0
   271  00FF01                     __end_of_resp_cmd:
   272                           	callstack 0
   273  00FF01                     _cmd_advertise:
   274                           	callstack 0
   275  00FF01  41                 	db	65
   276  00FF02  0D                 	db	13
   277  00FF03  0A                 	db	10
   278  00FF04  00                 	db	0
   279  00FF05                     __end_of_cmd_advertise:
   280                           	callstack 0
   281  00FF05                     _resp_conn_notification:
   282                           	callstack 0
   283  00FF05  57                 	db	87
   284  00FF06  43                 	db	67
   285  00FF07  00                 	db	0
   286  00FF08                     __end_of_resp_conn_notification:
   287                           	callstack 0
   288  00FF08                     _cmd_adc_read:
   289                           	callstack 0
   290  00FF08  50                 	db	80
   291  00FF09  43                 	db	67
   292  00FF0A  2C                 	db	44
   293  00FF0B  30                 	db	48
   294  00FF0C  31                 	db	49
   295  00FF0D  32                 	db	50
   296  00FF0E  33                 	db	51
   297  00FF0F  34                 	db	52
   298  00FF10  35                 	db	53
   299  00FF11  36                 	db	54
   300  00FF12  37                 	db	55
   301  00FF13  30                 	db	48
   302  00FF14  31                 	db	49
   303  00FF15  32                 	db	50
   304  00FF16  33                 	db	51
   305  00FF17  34                 	db	52
   306  00FF18  35                 	db	53
   307  00FF19  36                 	db	54
   308  00FF1A  37                 	db	55
   309  00FF1B  38                 	db	56
   310  00FF1C  39                 	db	57
   311  00FF1D  41                 	db	65
   312  00FF1E  42                 	db	66
   313  00FF1F  43                 	db	67
   314  00FF20  44                 	db	68
   315  00FF21  45                 	db	69
   316  00FF22  46                 	db	70
   317  00FF23  38                 	db	56
   318  00FF24  39                 	db	57
   319  00FF25  41                 	db	65
   320  00FF26  42                 	db	66
   321  00FF27  43                 	db	67
   322  00FF28  44                 	db	68
   323  00FF29  45                 	db	69
   324  00FF2A  46                 	db	70
   325  00FF2B  2C                 	db	44
   326  00FF2C  32                 	db	50
   327  00FF2D  30                 	db	48
   328  00FF2E  2C                 	db	44
   329  00FF2F  30                 	db	48
   330  00FF30  38                 	db	56
   331  00FF31  0D                 	db	13
   332  00FF32  0A                 	db	10
   333  00FF33  00                 	db	0
   334  00FF34                     __end_of_cmd_adc_read:
   335                           	callstack 0
   336  00FF34                     _cmd_adc_write:
   337                           	callstack 0
   338  00FF34  50                 	db	80
   339  00FF35  43                 	db	67
   340  00FF36  2C                 	db	44
   341  00FF37  30                 	db	48
   342  00FF38  31                 	db	49
   343  00FF39  32                 	db	50
   344  00FF3A  33                 	db	51
   345  00FF3B  30                 	db	48
   346  00FF3C  31                 	db	49
   347  00FF3D  32                 	db	50
   348  00FF3E  33                 	db	51
   349  00FF3F  34                 	db	52
   350  00FF40  35                 	db	53
   351  00FF41  36                 	db	54
   352  00FF42  37                 	db	55
   353  00FF43  34                 	db	52
   354  00FF44  35                 	db	53
   355  00FF45  36                 	db	54
   356  00FF46  37                 	db	55
   357  00FF47  38                 	db	56
   358  00FF48  39                 	db	57
   359  00FF49  41                 	db	65
   360  00FF4A  42                 	db	66
   361  00FF4B  38                 	db	56
   362  00FF4C  39                 	db	57
   363  00FF4D  41                 	db	65
   364  00FF4E  42                 	db	66
   365  00FF4F  43                 	db	67
   366  00FF50  44                 	db	68
   367  00FF51  45                 	db	69
   368  00FF52  46                 	db	70
   369  00FF53  43                 	db	67
   370  00FF54  44                 	db	68
   371  00FF55  45                 	db	69
   372  00FF56  46                 	db	70
   373  00FF57  2C                 	db	44
   374  00FF58  30                 	db	48
   375  00FF59  38                 	db	56
   376  00FF5A  2C                 	db	44
   377  00FF5B  30                 	db	48
   378  00FF5C  38                 	db	56
   379  00FF5D  0D                 	db	13
   380  00FF5E  0A                 	db	10
   381  00FF5F  00                 	db	0
   382  00FF60                     __end_of_cmd_adc_write:
   383                           	callstack 0
   384  00FF60                     _cmd_adc_value_send:
   385                           	callstack 0
   386  00FF60  53                 	db	83
   387  00FF61  55                 	db	85
   388  00FF62  57                 	db	87
   389  00FF63  2C                 	db	44
   390  00FF64  30                 	db	48
   391  00FF65  31                 	db	49
   392  00FF66  32                 	db	50
   393  00FF67  33                 	db	51
   394  00FF68  34                 	db	52
   395  00FF69  35                 	db	53
   396  00FF6A  36                 	db	54
   397  00FF6B  37                 	db	55
   398  00FF6C  30                 	db	48
   399  00FF6D  31                 	db	49
   400  00FF6E  32                 	db	50
   401  00FF6F  33                 	db	51
   402  00FF70  34                 	db	52
   403  00FF71  35                 	db	53
   404  00FF72  36                 	db	54
   405  00FF73  37                 	db	55
   406  00FF74  38                 	db	56
   407  00FF75  39                 	db	57
   408  00FF76  41                 	db	65
   409  00FF77  42                 	db	66
   410  00FF78  43                 	db	67
   411  00FF79  44                 	db	68
   412  00FF7A  45                 	db	69
   413  00FF7B  46                 	db	70
   414  00FF7C  38                 	db	56
   415  00FF7D  39                 	db	57
   416  00FF7E  41                 	db	65
   417  00FF7F  42                 	db	66
   418  00FF80  43                 	db	67
   419  00FF81  44                 	db	68
   420  00FF82  45                 	db	69
   421  00FF83  46                 	db	70
   422  00FF84  2C                 	db	44
   423  00FF85  00                 	db	0
   424  00FF86                     __end_of_cmd_adc_value_send:
   425                           	callstack 0
   426  00FF86                     _cmd_UUID:
   427                           	callstack 0
   428  00FF86  50                 	db	80
   429  00FF87  53                 	db	83
   430  00FF88  2C                 	db	44
   431  00FF89  30                 	db	48
   432  00FF8A  30                 	db	48
   433  00FF8B  31                 	db	49
   434  00FF8C  31                 	db	49
   435  00FF8D  32                 	db	50
   436  00FF8E  32                 	db	50
   437  00FF8F  33                 	db	51
   438  00FF90  33                 	db	51
   439  00FF91  34                 	db	52
   440  00FF92  34                 	db	52
   441  00FF93  35                 	db	53
   442  00FF94  35                 	db	53
   443  00FF95  36                 	db	54
   444  00FF96  36                 	db	54
   445  00FF97  37                 	db	55
   446  00FF98  37                 	db	55
   447  00FF99  38                 	db	56
   448  00FF9A  38                 	db	56
   449  00FF9B  39                 	db	57
   450  00FF9C  39                 	db	57
   451  00FF9D  41                 	db	65
   452  00FF9E  41                 	db	65
   453  00FF9F  42                 	db	66
   454  00FFA0  42                 	db	66
   455  00FFA1  43                 	db	67
   456  00FFA2  43                 	db	67
   457  00FFA3  44                 	db	68
   458  00FFA4  44                 	db	68
   459  00FFA5  45                 	db	69
   460  00FFA6  45                 	db	69
   461  00FFA7  46                 	db	70
   462  00FFA8  46                 	db	70
   463  00FFA9  0D                 	db	13
   464  00FFAA  0A                 	db	10
   465  00FFAB  00                 	db	0
   466  00FFAC                     __end_of_cmd_UUID:
   467                           	callstack 0
   468  00FFAC                     _resp_conn_end:
   469                           	callstack 0
   470  00FFAC  43                 	db	67
   471  00FFAD  6F                 	db	111
   472  00FFAE  6E                 	db	110
   473  00FFAF  6E                 	db	110
   474  00FFB0  65                 	db	101
   475  00FFB1  63                 	db	99
   476  00FFB2  74                 	db	116
   477  00FFB3  69                 	db	105
   478  00FFB4  6F                 	db	111
   479  00FFB5  6E                 	db	110
   480  00FFB6  20                 	db	32
   481  00FFB7  45                 	db	69
   482  00FFB8  6E                 	db	110
   483  00FFB9  64                 	db	100
   484  00FFBA  00                 	db	0
   485  00FFBB                     __end_of_resp_conn_end:
   486                           	callstack 0
   487  00FFBB                     _cmd_peripheral:
   488                           	callstack 0
   489  00FFBB  53                 	db	83
   490  00FFBC  52                 	db	82
   491  00FFBD  2C                 	db	44
   492  00FFBE  32                 	db	50
   493  00FFBF  30                 	db	48
   494  00FFC0  30                 	db	48
   495  00FFC1  30                 	db	48
   496  00FFC2  30                 	db	48
   497  00FFC3  30                 	db	48
   498  00FFC4  30                 	db	48
   499  00FFC5  30                 	db	48
   500  00FFC6  0D                 	db	13
   501  00FFC7  0A                 	db	10
   502  00FFC8  00                 	db	0
   503  00FFC9                     __end_of_cmd_peripheral:
   504                           	callstack 0
   505  00FFC9                     _cmd_userdefineprofile:
   506                           	callstack 0
   507  00FFC9  53                 	db	83
   508  00FFCA  53                 	db	83
   509  00FFCB  2C                 	db	44
   510  00FFCC  30                 	db	48
   511  00FFCD  30                 	db	48
   512  00FFCE  30                 	db	48
   513  00FFCF  30                 	db	48
   514  00FFD0  30                 	db	48
   515  00FFD1  30                 	db	48
   516  00FFD2  30                 	db	48
   517  00FFD3  31                 	db	49
   518  00FFD4  0D                 	db	13
   519  00FFD5  0A                 	db	10
   520  00FFD6  00                 	db	0
   521  00FFD7                     __end_of_cmd_userdefineprofile:
   522                           	callstack 0
   523  00FFD7                     _resp_conn:
   524                           	callstack 0
   525  00FFD7  43                 	db	67
   526  00FFD8  6F                 	db	111
   527  00FFD9  6E                 	db	110
   528  00FFDA  6E                 	db	110
   529  00FFDB  65                 	db	101
   530  00FFDC  63                 	db	99
   531  00FFDD  74                 	db	116
   532  00FFDE  65                 	db	101
   533  00FFDF  64                 	db	100
   534  00FFE0  00                 	db	0
   535  00FFE1                     __end_of_resp_conn:
   536                           	callstack 0
   537  00FFE1                     _cmd_factoryreset:
   538                           	callstack 0
   539  00FFE1  53                 	db	83
   540  00FFE2  46                 	db	70
   541  00FFE3  2C                 	db	44
   542  00FFE4  31                 	db	49
   543  00FFE5  0D                 	db	13
   544  00FFE6  0A                 	db	10
   545  00FFE7  00                 	db	0
   546  00FFE8                     __end_of_cmd_factoryreset:
   547                           	callstack 0
   548  00FFE8                     _cmd_reboot:
   549                           	callstack 0
   550  00FFE8  52                 	db	82
   551  00FFE9  2C                 	db	44
   552  00FFEA  31                 	db	49
   553  00FFEB  0D                 	db	13
   554  00FFEC  0A                 	db	10
   555  00FFED  00                 	db	0
   556  00FFEE                     __end_of_cmd_reboot:
   557                           	callstack 0
   558  00FFEE                     _cmd_cleanprivateservice:
   559                           	callstack 0
   560  00FFEE  50                 	db	80
   561  00FFEF  5A                 	db	90
   562  00FFF0  0D                 	db	13
   563  00FFF1  0A                 	db	10
   564  00FFF2  00                 	db	0
   565  00FFF3                     __end_of_cmd_cleanprivateservice:
   566                           	callstack 0
   567  00FFF3                     _resp_conn_data:
   568                           	callstack 0
   569  00FFF3  57                 	db	87
   570  00FFF4  56                 	db	86
   571  00FFF5  00                 	db	0
   572  00FFF6                     __end_of_resp_conn_data:
   573                           	callstack 0
   574  00FFF6                     STR_1:
   575  00FFF6  25                 	db	37
   576  00FFF7  30                 	db	48	;'0'
   577  00FFF8  32                 	db	50	;'2'
   578  00FFF9  58                 	db	88	;'X'
   579  00FFFA  00                 	db	0
   580  00FFFB                     STR_3:
   581  00FFFB  0D                 	db	13
   582  00FFFC  0A                 	db	10
   583  00FFFD  00                 	db	0
   584  00FFFE  00                 	db	0	; dummy byte at the end
   585  0000                     
   586                           	psect	nvBANK0
   587  0000E2                     __pnvBANK0:
   588                           	callstack 0
   589  0000E2                     _TMR1_InterruptHandler:
   590                           	callstack 0
   591  0000E2                     	ds	3
   592  0000E5                     _TMR0_InterruptHandler:
   593                           	callstack 0
   594  0000E5                     	ds	3
   595  0000E8                     _ADCC_ADTI_InterruptHandler:
   596                           	callstack 0
   597  0000E8                     	ds	3
   598  0000EB                     _EUSART1_ErrorHandler:
   599                           	callstack 0
   600  0000EB                     	ds	3
   601  0000EE                     _EUSART1_OverrunErrorHandler:
   602                           	callstack 0
   603  0000EE                     	ds	3
   604  0000F1                     _EUSART1_FramingErrorHandler:
   605                           	callstack 0
   606  0000F1                     	ds	3
   607  0000F4                     _EUSART1_RxDefaultInterruptHandler:
   608                           	callstack 0
   609  0000F4                     	ds	3
   610  0000F7                     _EUSART1_TxDefaultInterruptHandler:
   611                           	callstack 0
   612  0000F7                     	ds	3
   613  0000FA                     _timer1ReloadVal:
   614                           	callstack 0
   615  0000FA                     	ds	2
   616  0000FC                     _eusart1TxBufferRemaining:
   617                           	callstack 0
   618  0000FC                     	ds	1
   619  0000                     _RC2PPS	set	3828
   620  0000                     _RX1PPS	set	3760
   621  0000                     _PIR7bits	set	3788
   622  0000                     _PMD5	set	3809
   623  0000                     _PMD4	set	3808
   624  0000                     _PMD3	set	3807
   625  0000                     _PMD2	set	3806
   626  0000                     _PMD1	set	3805
   627  0000                     _PMD0	set	3804
   628  0000                     _OSCTUNE	set	3800
   629  0000                     _OSCFRQ	set	3801
   630  0000                     _OSCEN	set	3799
   631  0000                     _OSCCON3	set	3797
   632  0000                     _OSCCON1	set	3795
   633  0000                     _PIR4bits	set	3785
   634  0000                     _PIE4bits	set	3777
   635  0000                     _PIR1bits	set	3782
   636  0000                     _PIE1bits	set	3774
   637  0000                     _PIR3bits	set	3784
   638  0000                     _PIR0bits	set	3781
   639  0000                     _PIE0bits	set	3773
   640  0000                     _PIE3bits	set	3776
   641  0000                     _ADCON1bits	set	3924
   642  0000                     _ADPREVL	set	3932
   643  0000                     _ADPREVH	set	3933
   644  0000                     _ADCON2bits	set	3925
   645  0000                     _ADCON3bits	set	3926
   646  0000                     _ADRESL	set	3934
   647  0000                     _ADRESH	set	3935
   648  0000                     _ADCON0bits	set	3931
   649  0000                     _ADACQ	set	3927
   650  0000                     _ADCON0	set	3931
   651  0000                     _ADCLK	set	3922
   652  0000                     _ADACT	set	3921
   653  0000                     _ADREF	set	3923
   654  0000                     _ADCON3	set	3926
   655  0000                     _ADCON2	set	3925
   656  0000                     _ADCON1	set	3924
   657  0000                     _ADPRE	set	3929
   658  0000                     _ADCAP	set	3928
   659  0000                     _ADPCH	set	3930
   660  0000                     _INLVLE	set	3877
   661  0000                     _INLVLD	set	3869
   662  0000                     _INLVLC	set	3864
   663  0000                     _INLVLB	set	3856
   664  0000                     _INLVLA	set	3848
   665  0000                     _SLRCONE	set	3878
   666  0000                     _SLRCOND	set	3870
   667  0000                     _SLRCONC	set	3865
   668  0000                     _SLRCONB	set	3857
   669  0000                     _SLRCONA	set	3849
   670  0000                     _ODCOND	set	3871
   671  0000                     _ODCONC	set	3866
   672  0000                     _ODCONB	set	3858
   673  0000                     _ODCONA	set	3850
   674  0000                     _ODCONE	set	3879
   675  0000                     _WPUC	set	3867
   676  0000                     _WPUA	set	3851
   677  0000                     _WPUB	set	3859
   678  0000                     _WPUE	set	3880
   679  0000                     _WPUD	set	3872
   680  0000                     _ANSELA	set	3852
   681  0000                     _ANSELE	set	3881
   682  0000                     _ANSELB	set	3860
   683  0000                     _ANSELC	set	3868
   684  0000                     _ANSELD	set	3873
   685  0000                     _SCANCON0bits	set	3914
   686  0000                     _SCANTRIG	set	3915
   687  0000                     _SCANHADRL	set	3911
   688  0000                     _SCANHADRH	set	3912
   689  0000                     _SCANHADRU	set	3913
   690  0000                     _SCANLADRL	set	3908
   691  0000                     _SCANLADRH	set	3909
   692  0000                     _SCANLADRU	set	3910
   693  0000                     _SCANCON0	set	3914
   694  0000                     _NVMDAT	set	3964
   695  0000                     _LATDbits	set	3973
   696  0000                     _NVMCON0	set	3967
   697  0000                     _PORTAbits	set	3980
   698  0000                     _LATAbits	set	3970
   699  0000                     _NVMCON2	set	3969
   700  0000                     _NVMCON0bits	set	3967
   701  0000                     _NVMDATL	set	3964
   702  0000                     _NVMDATH	set	3965
   703  0000                     _NVMCON1bits	set	3968
   704  0000                     _NVMADRL	set	3961
   705  0000                     _NVMADRH	set	3962
   706  0000                     _NVMADRU	set	3963
   707  0000                     _TABLAT	set	4085
   708  0000                     _TBLPTRL	set	4086
   709  0000                     _TBLPTRH	set	4087
   710  0000                     _TBLPTRU	set	4088
   711  0000                     _T1GCONbits	set	4047
   712  0000                     _T1CONbits	set	4046
   713  0000                     _T1CON	set	4046
   714  0000                     _TMR1L	set	4044
   715  0000                     _TMR1H	set	4045
   716  0000                     _T1CLK	set	4049
   717  0000                     _T1GATE	set	4048
   718  0000                     _T1GCON	set	4047
   719  0000                     _T0CON0bits	set	4052
   720  0000                     _T0CON0	set	4052
   721  0000                     _TMR0L	set	4050
   722  0000                     _TMR0H	set	4051
   723  0000                     _T0CON1	set	4053
   724  0000                     _ADERRL	set	3945
   725  0000                     _ADERRH	set	3946
   726  0000                     _ADFLTRL	set	3949
   727  0000                     _ADFLTRH	set	3950
   728  0000                     _ADSTATbits	set	3936
   729  0000                     _ADACCL	set	3947
   730  0000                     _ADACCH	set	3948
   731  0000                     _ADCNT	set	3938
   732  0000                     _ADSTAT	set	3936
   733  0000                     _ADRPT	set	3937
   734  0000                     _ADSTPTH	set	3940
   735  0000                     _ADSTPTL	set	3939
   736  0000                     _ADUTHH	set	3944
   737  0000                     _ADUTHL	set	3943
   738  0000                     _ADLTHH	set	3942
   739  0000                     _ADLTHL	set	3941
   740  0000                     _TRISD	set	3978
   741  0000                     _TRISC	set	3977
   742  0000                     _TRISB	set	3976
   743  0000                     _TRISA	set	3975
   744  0000                     _TRISE	set	3979
   745  0000                     _LATC	set	3972
   746  0000                     _LATB	set	3971
   747  0000                     _LATA	set	3970
   748  0000                     _LATD	set	3973
   749  0000                     _LATE	set	3974
   750  0000                     _CRCDATL	set	3951
   751  0000                     _CRCDATH	set	3952
   752  0000                     _CRCCON0bits	set	3959
   753  0000                     _CRCCON1bits	set	3960
   754  0000                     _CRCXORL	set	3957
   755  0000                     _CRCXORH	set	3958
   756  0000                     _CRCACCH	set	3954
   757  0000                     _CRCACCL	set	3953
   758  0000                     _CRCCON1	set	3960
   759  0000                     _CRCCON0	set	3959
   760  0000                     _INTCONbits	set	4082
   761  0000                     _RC1REG	set	3992
   762  0000                     _RC1STAbits	set	3996
   763  0000                     _TX1REG	set	3993
   764  0000                     _TX1STAbits	set	3997
   765  0000                     _SP1BRGH	set	3995
   766  0000                     _SP1BRGL	set	3994
   767  0000                     _TX1STA	set	3997
   768  0000                     _RC1STA	set	3996
   769  0000                     _BAUD1CON	set	3998
   770                           
   771                           ; #config settings
   772                           
   773                           	psect	cinit
   774  012C62                     __pcinit:
   775                           	callstack 0
   776  012C62                     start_initialization:
   777                           	callstack 0
   778  012C62                     __initialization:
   779                           	callstack 0
   780                           
   781                           ; Clear objects allocated to BANK1 (64 bytes)
   782  012C62  EE01  F000         	lfsr	0,__pbssBANK1
   783  012C66  0E40               	movlw	64
   784  012C68                     clear_0:
   785  012C68  6AEE               	clrf	postinc0,c
   786  012C6A  06E8               	decf	wreg,f,c
   787  012C6C  E1FD               	bnz	clear_0
   788                           
   789                           ; Clear objects allocated to BANK0 (79 bytes)
   790  012C6E  EE00  F060         	lfsr	0,__pbssBANK0
   791  012C72  0E4F               	movlw	79
   792  012C74                     clear_1:
   793  012C74  6AEE               	clrf	postinc0,c
   794  012C76  06E8               	decf	wreg,f,c
   795  012C78  E1FD               	bnz	clear_1
   796                           
   797                           ; Clear objects allocated to COMRAM (6 bytes)
   798  012C7A  6A58               	clrf	(__pbssCOMRAM+5)& (0+255),c
   799  012C7C  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
   800  012C7E  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   801  012C80  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   802  012C82  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   803  012C84  6A53               	clrf	__pbssCOMRAM& (0+255),c
   804  012C86                     end_of_initialization:
   805                           	callstack 0
   806  012C86                     __end_of__initialization:
   807                           	callstack 0
   808  012C86  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   809  012C88  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   810  012C8A  0100               	movlb	0
   811  012C8C  EF72  F095         	goto	_main	;jump to C main() function
   812                           
   813                           	psect	bssCOMRAM
   814  000053                     __pbssCOMRAM:
   815                           	callstack 0
   816  000053                     _currentAdcValuePtr:
   817                           	callstack 0
   818  000053                     	ds	2
   819  000055                     _eusart1RxTail:
   820                           	callstack 0
   821  000055                     	ds	1
   822  000056                     _eusart1RxHead:
   823                           	callstack 0
   824  000056                     	ds	1
   825  000057                     _eusart1TxTail:
   826                           	callstack 0
   827  000057                     	ds	1
   828  000058                     _eusart1TxHead:
   829                           	callstack 0
   830  000058                     	ds	1
   831                           
   832                           	psect	bssBANK0
   833  000060                     __pbssBANK0:
   834                           	callstack 0
   835  000060                     _eusart1RxStatusBuffer:
   836                           	callstack 0
   837  000060                     	ds	8
   838  000068                     _eusart1RxBuffer:
   839                           	callstack 0
   840  000068                     	ds	8
   841  000070                     _eusart1TxBuffer:
   842                           	callstack 0
   843  000070                     	ds	8
   844  000078                     _nout:
   845                           	callstack 0
   846  000078                     	ds	2
   847  00007A                     _width:
   848                           	callstack 0
   849  00007A                     	ds	2
   850  00007C                     _prec:
   851                           	callstack 0
   852  00007C                     	ds	2
   853  00007E                     _flags:
   854                           	callstack 0
   855  00007E                     	ds	2
   856  000080                     _crcValBurst:
   857                           	callstack 0
   858  000080                     	ds	2
   859  000082                     _crcValPeek:
   860                           	callstack 0
   861  000082                     	ds	2
   862  000084                     _flashCrcErrorStatus:
   863                           	callstack 0
   864  000084                     	ds	1
   865  000085                     _tmr0InterruptFlag:
   866                           	callstack 0
   867  000085                     	ds	1
   868  000086                     _isCRCPeekEnabled:
   869                           	callstack 0
   870  000086                     	ds	1
   871  000087                     _burstMode:
   872                           	callstack 0
   873  000087                     	ds	1
   874  000088                     _adcReadyFlag:
   875                           	callstack 0
   876  000088                     	ds	1
   877  000089                     _connection_status:
   878                           	callstack 0
   879  000089                     	ds	1
   880  00008A                     _eusart1RxLastError:
   881                           	callstack 0
   882  00008A                     	ds	1
   883  00008B                     _eusart1RxCount:
   884                           	callstack 0
   885  00008B                     	ds	1
   886  00008C                     _dbuf:
   887                           	callstack 0
   888  00008C                     	ds	32
   889  0000AC                     _crcObj:
   890                           	callstack 0
   891  0000AC                     	ds	3
   892                           
   893                           	psect	bssBANK1
   894  000100                     __pbssBANK1:
   895                           	callstack 0
   896  000100                     _buf:
   897                           	callstack 0
   898  000100                     	ds	64
   899                           
   900                           	psect	cstackBANK1
   901  000140                     __pcstackBANK1:
   902                           	callstack 0
   903  000140                     processADCCommand@dataRead:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x0
   907  000140                     	ds	2
   908  000142                     processADCCommand@dataRead_2152:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x2
   912  000142                     	ds	2
   913  000144                     processADCCommand@data:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x4
   917  000144                     	ds	2
   918  000146                     processADCCommand@lcurrentAdcValuePtr:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x6
   922  000146                     	ds	2
   923                           
   924                           	psect	cstackBANK0
   925  0000AF                     __pcstackBANK0:
   926                           	callstack 0
   927  0000AF                     ??_vfpfcnvrt:
   928                           
   929                           ; 1 bytes @ 0x0
   930  0000AF                     	ds	4
   931  0000B3                     vfpfcnvrt@llu:
   932                           	callstack 0
   933                           
   934                           ; 8 bytes @ 0x4
   935  0000B3                     	ds	8
   936  0000BB                     vfpfcnvrt@c:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0xC
   940  0000BB                     	ds	1
   941  0000BC                     vfpfcnvrt@done:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0xD
   945  0000BC                     	ds	2
   946  0000BE                     _vfpfcnvrt$2798:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0xF
   950  0000BE                     	ds	2
   951  0000C0                     ?_vfprintf:
   952                           	callstack 0
   953  0000C0                     vfprintf@fp:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x11
   957  0000C0                     	ds	2
   958  0000C2                     vfprintf@fmt:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x13
   962  0000C2                     	ds	2
   963  0000C4                     vfprintf@ap:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x15
   967  0000C4                     	ds	2
   968  0000C6                     ?_sprintf:
   969                           	callstack 0
   970  0000C6                     sprintf@s:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x17
   974  0000C6                     	ds	2
   975  0000C8                     sprintf@fmt:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x19
   979  0000C8                     	ds	6
   980  0000CE                     sprintf@ap:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x1F
   984  0000CE                     	ds	2
   985  0000D0                     sprintf@f:
   986                           	callstack 0
   987                           
   988                           ; 6 bytes @ 0x21
   989  0000D0                     	ds	6
   990  0000D6                     sendADCCValueBLE@adcValue:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x27
   994  0000D6                     	ds	2
   995  0000D8                     ??_sendADCCValueBLE:
   996                           
   997                           ; 1 bytes @ 0x29
   998  0000D8                     	ds	2
   999  0000DA                     sendADCCValueBLE@result:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x2B
  1003  0000DA                     	ds	2
  1004  0000DC                     ??_processADCCommand:
  1005                           
  1006                           ; 1 bytes @ 0x2D
  1007  0000DC                     	ds	2
  1008  0000DE                     ApplicationTask@connection_data:
  1009                           	callstack 0
  1010                           
  1011                           ; 1 bytes @ 0x2F
  1012  0000DE                     	ds	1
  1013  0000DF                     ApplicationTask@connection_end:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x30
  1017  0000DF                     	ds	1
  1018  0000E0                     ApplicationTask@adcValue:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x31
  1022  0000E0                     	ds	2
  1023                           
  1024                           	psect	cstackCOMRAM
  1025  000001                     __pcstackCOMRAM:
  1026                           	callstack 0
  1027  000001                     i2TMR1_WriteTimer@timerVal:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x0
  1031  000001                     	ds	2
  1032  000003                     ??_INTERRUPT_InterruptManager:
  1033  000003                     
  1034                           ; 1 bytes @ 0x2
  1035  000003                     	ds	4
  1036  000007                     ??_CRC_Initialize:
  1037  000007                     ?_strlen:
  1038                           	callstack 0
  1039  000007                     ?_strcmp:
  1040                           	callstack 0
  1041  000007                     ?_strncmp:
  1042                           	callstack 0
  1043  000007                     ?_isupper:
  1044                           	callstack 0
  1045  000007                     ?_isalpha:
  1046                           	callstack 0
  1047  000007                     ?_isdigit:
  1048                           	callstack 0
  1049  000007                     ?_isspace:
  1050                           	callstack 0
  1051  000007                     ?_islower:
  1052                           	callstack 0
  1053  000007                     ?_CRC_ReverseValue:
  1054                           	callstack 0
  1055  000007                     ?_ADCC_GetConversionResult:
  1056                           	callstack 0
  1057  000007                     ?_ADCC_GetFilterValue:
  1058                           	callstack 0
  1059  000007                     ?_FLASH_ReadWord:
  1060                           	callstack 0
  1061  000007                     ?___wmul:
  1062                           	callstack 0
  1063  000007                     ?___xxtofl:
  1064                           	callstack 0
  1065  000007                     EUSART1_Read@readValue:
  1066                           	callstack 0
  1067  000007                     EUSART1_Write@txData:
  1068                           	callstack 0
  1069  000007                     _CRC_SCAN_HasScanCompleted$852:
  1070                           	callstack 0
  1071  000007                     TMR0_WriteTimer@timerVal:
  1072                           	callstack 0
  1073  000007                     getHexValue@hexvalue:
  1074                           	callstack 0
  1075  000007                     ADCCSetSensorPin@adcPin:
  1076                           	callstack 0
  1077  000007                     CRC_ReverseValue@crc:
  1078                           	callstack 0
  1079  000007                     TMR1_WriteTimer@timerVal:
  1080                           	callstack 0
  1081  000007                     DATAEE_WriteByte@bAdd:
  1082                           	callstack 0
  1083  000007                     DATAEE_ReadByte@bAdd:
  1084                           	callstack 0
  1085  000007                     ___wmul@multiplier:
  1086                           	callstack 0
  1087  000007                     isalpha@c:
  1088                           	callstack 0
  1089  000007                     isdigit@c:
  1090                           	callstack 0
  1091  000007                     isspace@c:
  1092                           	callstack 0
  1093  000007                     isupper@c:
  1094                           	callstack 0
  1095  000007                     strcmp@l:
  1096                           	callstack 0
  1097  000007                     strlen@s:
  1098                           	callstack 0
  1099  000007                     strncmp@_l:
  1100                           	callstack 0
  1101  000007                     islower@c:
  1102                           	callstack 0
  1103  000007                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1104                           	callstack 0
  1105  000007                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1106                           	callstack 0
  1107  000007                     EUSART1_SetErrorHandler@interruptHandler:
  1108                           	callstack 0
  1109  000007                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1110                           	callstack 0
  1111  000007                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1112                           	callstack 0
  1113  000007                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  1114                           	callstack 0
  1115  000007                     TMR0_SetInterruptHandler@InterruptHandler:
  1116                           	callstack 0
  1117  000007                     TMR1_SetInterruptHandler@InterruptHandler:
  1118                           	callstack 0
  1119  000007                     CRC_SCAN_SetAddressLimit@startAddr:
  1120                           	callstack 0
  1121  000007                     FLASH_ReadWord@flashAddr:
  1122                           	callstack 0
  1123  000007                     FLASH_EraseBlock@flashAddr:
  1124                           	callstack 0
  1125  000007                     ___xxtofl@val:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x6
  1129  000007                     	ds	1
  1130  000008                     ??_BLE2ClickGetstr:
  1131  000008                     putch@txData:
  1132                           	callstack 0
  1133  000008                     CRC_SCAN_HasScanCompleted@status:
  1134                           	callstack 0
  1135  000008                     BLE2_SendByte@byte:
  1136                           	callstack 0
  1137  000008                     getHexValue@x:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x7
  1141  000008                     	ds	1
  1142  000009                     ??_isupper:
  1143  000009                     ??_isalpha:
  1144  000009                     ??_isdigit:
  1145  000009                     ??_isspace:
  1146  000009                     ??_islower:
  1147  000009                     ??_CRC_ReverseValue:
  1148  000009                     ??_ADCC_GetConversionResult:
  1149  000009                     ??_ADCC_GetFilterValue:
  1150  000009                     ??_getADCMode:
  1151  000009                     ??_getADCCharacteristic:
  1152  000009                     ?_readChecksum:
  1153                           	callstack 0
  1154  000009                     ?_readDataPtr:
  1155                           	callstack 0
  1156  000009                     DATAEE_WriteByte@bData:
  1157                           	callstack 0
  1158  000009                     ___wmul@multiplicand:
  1159                           	callstack 0
  1160  000009                     fputc@c:
  1161                           	callstack 0
  1162  000009                     strcmp@r:
  1163                           	callstack 0
  1164  000009                     strlen@a:
  1165                           	callstack 0
  1166  000009                     strncmp@_r:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x8
  1170  000009                     	ds	1
  1171  00000A                     ??_TMR1_Initialize:
  1172  00000A                     DATAEE_WriteByte@GIEBitValue:
  1173                           	callstack 0
  1174  00000A                     CRC_ReverseValue@reverse:
  1175                           	callstack 0
  1176  00000A                     BLE2ClickGetstr@i:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x9
  1180  00000A                     	ds	1
  1181  00000B                     ??_readChecksum:
  1182  00000B                     ??_readDataPtr:
  1183  00000B                     ??_strcmp:
  1184  00000B                     ??_FLASH_ReadWord:
  1185  00000B                     ??___xxtofl:
  1186  00000B                     FLASH_EraseBlock@GIEBitValue:
  1187                           	callstack 0
  1188  00000B                     getADCMode@num:
  1189                           	callstack 0
  1190  00000B                     getADCCharacteristic@num:
  1191                           	callstack 0
  1192  00000B                     BLE2_SendBuffer@buffer:
  1193                           	callstack 0
  1194  00000B                     writeChecksum@checksum:
  1195                           	callstack 0
  1196  00000B                     writeDataPtr@dataPtr:
  1197                           	callstack 0
  1198  00000B                     ___wmul@product:
  1199                           	callstack 0
  1200  00000B                     fputc@fp:
  1201                           	callstack 0
  1202  00000B                     strncmp@n:
  1203                           	callstack 0
  1204  00000B                     CRC_SCAN_SetAddressLimit@endAddr:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0xA
  1208  00000B                     	ds	1
  1209  00000C                     CRC_ReverseValue@mask:
  1210                           	callstack 0
  1211  00000C                     _getADCMode$2132:
  1212                           	callstack 0
  1213  00000C                     _getADCCharacteristic$2136:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0xB
  1217  00000C                     	ds	1
  1218  00000D                     ??_strncmp:
  1219  00000D                     ??_fputc:
  1220  00000D                     ?_toupper:
  1221                           	callstack 0
  1222  00000D                     BLE2_SendBuffer@length:
  1223                           	callstack 0
  1224  00000D                     readChecksum@checkSumHighByte:
  1225                           	callstack 0
  1226  00000D                     readDataPtr@addressHighByte:
  1227                           	callstack 0
  1228  00000D                     _isspace$2843:
  1229                           	callstack 0
  1230  00000D                     toupper@c:
  1231                           	callstack 0
  1232  00000D                     FLASHWriteWordSingle@flashAddr:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0xC
  1236  00000D                     	ds	1
  1237  00000E                     ?_atoi:
  1238                           	callstack 0
  1239  00000E                     ?_CRC_CalculatedResultGet:
  1240                           	callstack 0
  1241  00000E                     getADCMode@ch:
  1242                           	callstack 0
  1243  00000E                     getADCCharacteristic@ch:
  1244                           	callstack 0
  1245  00000E                     readChecksum@checkSumLowByte:
  1246                           	callstack 0
  1247  00000E                     readDataPtr@addressLowByte:
  1248                           	callstack 0
  1249  00000E                     CRC_CalculatedResultGet@xorValue:
  1250                           	callstack 0
  1251  00000E                     BLE2_SendString@command:
  1252                           	callstack 0
  1253  00000E                     atoi@s:
  1254                           	callstack 0
  1255  00000E                     strncmp@l:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0xD
  1259  00000E                     	ds	1
  1260  00000F                     ??_toupper:
  1261  00000F                     ?_getADCCommand:
  1262                           	callstack 0
  1263  00000F                     ___xxtofl@sign:
  1264                           	callstack 0
  1265                           
  1266                           ; 1 bytes @ 0xE
  1267  00000F                     	ds	1
  1268  000010                     ??_atoi:
  1269  000010                     ??_CRC_CalculatedResultGet:
  1270  000010                     ___xxtofl@exp:
  1271                           	callstack 0
  1272  000010                     strncmp@r:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0xF
  1276  000010                     	ds	1
  1277  000011                     getADCCommand@data:
  1278                           	callstack 0
  1279  000011                     FLASHWriteWordSingle@word:
  1280                           	callstack 0
  1281  000011                     ___xxtofl@arg:
  1282                           	callstack 0
  1283                           
  1284                           ; 4 bytes @ 0x10
  1285  000011                     	ds	1
  1286  000012                     fputs@s:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x11
  1290  000012                     	ds	1
  1291  000013                     CRC_CalculatedResultGet@mask:
  1292                           	callstack 0
  1293  000013                     FLASHWriteWordSingle@data_check:
  1294                           	callstack 0
  1295  000013                     _toupper$2902:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x12
  1299  000013                     	ds	1
  1300  000014                     atoi@neg:
  1301                           	callstack 0
  1302  000014                     fputs@fp:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x13
  1306  000014                     	ds	1
  1307  000015                     ?___fldiv:
  1308                           	callstack 0
  1309  000015                     CRC_CalculatedResultGet@reverse:
  1310                           	callstack 0
  1311  000015                     FLASHWriteWordSingle@GIEBitValue:
  1312                           	callstack 0
  1313  000015                     ___fldiv@b:
  1314                           	callstack 0
  1315                           
  1316                           ; 4 bytes @ 0x14
  1317  000015                     	ds	1
  1318  000016                     fputs@c:
  1319                           	callstack 0
  1320  000016                     CRC_CalculatedResultGet@result:
  1321                           	callstack 0
  1322  000016                     LogDataToPFM@adcValue:
  1323                           	callstack 0
  1324  000016                     _atoi$2816:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0x15
  1328  000016                     	ds	1
  1329  000017                     fputs@i:
  1330                           	callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x16
  1333  000017                     	ds	1
  1334  000018                     _atoi$2818:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x17
  1338  000018                     	ds	1
  1339  000019                     ?_pad:
  1340                           	callstack 0
  1341  000019                     pad@fp:
  1342                           	callstack 0
  1343  000019                     ___fldiv@a:
  1344                           	callstack 0
  1345                           
  1346                           ; 4 bytes @ 0x18
  1347  000019                     	ds	1
  1348  00001A                     _atoi$2817:
  1349                           	callstack 0
  1350                           
  1351                           ; 1 bytes @ 0x19
  1352  00001A                     	ds	1
  1353  00001B                     pad@buf:
  1354                           	callstack 0
  1355  00001B                     atoi@n:
  1356                           	callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x1A
  1359  00001B                     	ds	2
  1360  00001D                     ??___fldiv:
  1361  00001D                     pad@p:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x1C
  1365  00001D                     	ds	2
  1366  00001F                     ??_pad:
  1367                           
  1368                           ; 1 bytes @ 0x1E
  1369  00001F                     	ds	1
  1370  000020                     pad@i:
  1371                           	callstack 0
  1372                           
  1373                           ; 2 bytes @ 0x1F
  1374  000020                     	ds	1
  1375  000021                     ___fldiv@rem:
  1376                           	callstack 0
  1377                           
  1378                           ; 4 bytes @ 0x20
  1379  000021                     	ds	1
  1380  000022                     pad@w:
  1381                           	callstack 0
  1382                           
  1383                           ; 2 bytes @ 0x21
  1384  000022                     	ds	2
  1385  000024                     ?_xtoa:
  1386                           	callstack 0
  1387  000024                     xtoa@fp:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x23
  1391  000024                     	ds	1
  1392  000025                     ___fldiv@sign:
  1393                           	callstack 0
  1394                           
  1395                           ; 1 bytes @ 0x24
  1396  000025                     	ds	1
  1397  000026                     ___fldiv@new_exp:
  1398                           	callstack 0
  1399  000026                     xtoa@d:
  1400                           	callstack 0
  1401                           
  1402                           ; 8 bytes @ 0x25
  1403  000026                     	ds	2
  1404  000028                     ___fldiv@grs:
  1405                           	callstack 0
  1406                           
  1407                           ; 4 bytes @ 0x27
  1408  000028                     	ds	4
  1409  00002C                     ___fldiv@bexp:
  1410                           	callstack 0
  1411                           
  1412                           ; 1 bytes @ 0x2B
  1413  00002C                     	ds	1
  1414  00002D                     ___fldiv@aexp:
  1415                           	callstack 0
  1416                           
  1417                           ; 1 bytes @ 0x2C
  1418  00002D                     	ds	1
  1419  00002E                     ?___flmul:
  1420                           	callstack 0
  1421  00002E                     xtoa@x:
  1422                           	callstack 0
  1423  00002E                     ___flmul@b:
  1424                           	callstack 0
  1425                           
  1426                           ; 4 bytes @ 0x2D
  1427  00002E                     	ds	1
  1428  00002F                     ??_xtoa:
  1429                           
  1430                           ; 1 bytes @ 0x2E
  1431  00002F                     	ds	3
  1432  000032                     ___flmul@a:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x31
  1436  000032                     	ds	4
  1437  000036                     ??___flmul:
  1438                           
  1439                           ; 1 bytes @ 0x35
  1440  000036                     	ds	1
  1441  000037                     _xtoa$2782:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x36
  1445  000037                     	ds	2
  1446  000039                     _xtoa$2783:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x38
  1450  000039                     	ds	1
  1451  00003A                     ___flmul@sign:
  1452                           	callstack 0
  1453                           
  1454                           ; 1 bytes @ 0x39
  1455  00003A                     	ds	1
  1456  00003B                     ___flmul@aexp:
  1457                           	callstack 0
  1458  00003B                     xtoa@p:
  1459                           	callstack 0
  1460                           
  1461                           ; 2 bytes @ 0x3A
  1462  00003B                     	ds	1
  1463  00003C                     ___flmul@grs:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x3B
  1467  00003C                     	ds	1
  1468  00003D                     xtoa@w:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x3C
  1472  00003D                     	ds	2
  1473  00003F                     xtoa@n:
  1474                           	callstack 0
  1475                           
  1476                           ; 8 bytes @ 0x3E
  1477  00003F                     	ds	1
  1478  000040                     ___flmul@bexp:
  1479                           	callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x3F
  1482  000040                     	ds	1
  1483  000041                     ___flmul@prod:
  1484                           	callstack 0
  1485                           
  1486                           ; 4 bytes @ 0x40
  1487  000041                     	ds	4
  1488  000045                     ___flmul@temp:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x44
  1492  000045                     	ds	2
  1493  000047                     ?___fltol:
  1494                           	callstack 0
  1495  000047                     xtoa@i:
  1496                           	callstack 0
  1497  000047                     ___fltol@f1:
  1498                           	callstack 0
  1499                           
  1500                           ; 4 bytes @ 0x46
  1501  000047                     	ds	2
  1502  000049                     xtoa@c:
  1503                           	callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x48
  1506  000049                     	ds	2
  1507  00004B                     ??___fltol:
  1508  00004B                     ?_vfpfcnvrt:
  1509                           	callstack 0
  1510  00004B                     vfpfcnvrt@fp:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x4A
  1514  00004B                     	ds	2
  1515  00004D                     vfpfcnvrt@fmt:
  1516                           	callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x4C
  1519  00004D                     	ds	2
  1520  00004F                     ___fltol@sign1:
  1521                           	callstack 0
  1522  00004F                     vfpfcnvrt@ap:
  1523                           	callstack 0
  1524                           
  1525                           ; 2 bytes @ 0x4E
  1526  00004F                     	ds	1
  1527  000050                     ___fltol@exp1:
  1528                           	callstack 0
  1529                           
  1530                           ; 1 bytes @ 0x4F
  1531  000050                     	ds	1
  1532  000051                     vfprintf@cfmt:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0x50
  1536  000051                     	ds	2
  1537  000053                     
  1538                           ; 1 bytes @ 0x52
  1539 ;;
  1540 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1541 ;;
  1542 ;; *************** function _main *****************
  1543 ;; Defined at:
  1544 ;;		line 52 in file "main.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels required when called:   16
  1564 ;; This function calls:
  1565 ;;		_ADCC_SetADTIInterruptHandler
  1566 ;;		_ApplicationTask
  1567 ;;		_InitialSetup
  1568 ;;		_SYSTEM_Initialize
  1569 ;;		_TMR0_SetInterruptHandler
  1570 ;; This function is called by:
  1571 ;;		Startup code after reset
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text0
  1576  012AE4                     __ptext0:
  1577                           	callstack 0
  1578  012AE4                     _main:
  1579                           	callstack 15
  1580  012AE4                     
  1581                           ;main.c: 55:     SYSTEM_Initialize();
  1582  012AE4  ECEE  F096         	call	_SYSTEM_Initialize	;wreg free
  1583  012AE8                     
  1584                           ;main.c: 62:     (INTCONbits.GIE = 1);
  1585  012AE8  8EF2               	bsf	242,7,c	;volatile
  1586  012AEA                     
  1587                           ;main.c: 68:     (INTCONbits.PEIE = 1);
  1588  012AEA  8CF2               	bsf	242,6,c	;volatile
  1589                           
  1590                           ;main.c: 74:      TMR0_SetInterruptHandler(TMR0_UserInterruptHandler);
  1591  012AEC  0E30               	movlw	low _TMR0_UserInterruptHandler
  1592  012AEE  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1593  012AF0  0E30               	movlw	high _TMR0_UserInterruptHandler
  1594  012AF2  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1595  012AF4  0E01               	movlw	low (_TMR0_UserInterruptHandler shr (0+16))
  1596  012AF6  6E09               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)^0,c
  1597  012AF8  ECC1  F097         	call	_TMR0_SetInterruptHandler	;wreg free
  1598                           
  1599                           ;main.c: 75:      ADCC_SetADTIInterruptHandler(ADCC_UserInterruptHandler);
  1600  012AFC  0E38               	movlw	low _ADCC_UserInterruptHandler
  1601  012AFE  6E07               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
  1602  012B00  0E30               	movlw	high _ADCC_UserInterruptHandler
  1603  012B02  6E08               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
  1604  012B04  0E01               	movlw	low (_ADCC_UserInterruptHandler shr (0+16))
  1605  012B06  6E09               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
  1606  012B08  ECEB  F097         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  1607  012B0C                     
  1608                           ;main.c: 77:     InitialSetup();
  1609  012B0C  ECF3  F08F         	call	_InitialSetup	;wreg free
  1610  012B10                     l7301:
  1611                           
  1612                           ;main.c: 79:     {;main.c: 81:         ApplicationTask();
  1613  012B10  EC15  F082         	call	_ApplicationTask	;wreg free
  1614  012B14  EF88  F095         	goto	l7301
  1615  012B18  EF91  F000         	goto	start
  1616  012B1C                     __end_of_main:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _SYSTEM_Initialize *****************
  1620 ;; Defined at:
  1621 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1639 ;;Total ram usage:        0 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    6
  1642 ;; This function calls:
  1643 ;;		_ADCC_Initialize
  1644 ;;		_CRC_Initialize
  1645 ;;		_EUSART1_Initialize
  1646 ;;		_INTERRUPT_Initialize
  1647 ;;		_OSCILLATOR_Initialize
  1648 ;;		_PIN_MANAGER_Initialize
  1649 ;;		_PMD_Initialize
  1650 ;;		_TMR0_Initialize
  1651 ;;		_TMR1_Initialize
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text1
  1658  012DDC                     __ptext1:
  1659                           	callstack 0
  1660  012DDC                     _SYSTEM_Initialize:
  1661                           	callstack 24
  1662  012DDC                     
  1663                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1664  012DDC  EC26  F098         	call	_INTERRUPT_Initialize	;wreg free
  1665  012DE0                     
  1666                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1667  012DE0  EC55  F097         	call	_PMD_Initialize	;wreg free
  1668  012DE4                     
  1669                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1670  012DE4  EC12  F091         	call	_PIN_MANAGER_Initialize	;wreg free
  1671  012DE8                     
  1672                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1673  012DE8  EC63  F097         	call	_OSCILLATOR_Initialize	;wreg free
  1674  012DEC                     
  1675                           ;mcc_generated_files/mcc.c: 56:     CRC_Initialize();
  1676  012DEC  EC2A  F093         	call	_CRC_Initialize	;wreg free
  1677  012DF0                     
  1678                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  1679  012DF0  EC3A  F092         	call	_ADCC_Initialize	;wreg free
  1680  012DF4                     
  1681                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  1682  012DF4  EC48  F094         	call	_TMR1_Initialize	;wreg free
  1683  012DF8                     
  1684                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  1685  012DF8  ECB2  F096         	call	_TMR0_Initialize	;wreg free
  1686  012DFC                     
  1687                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  1688  012DFC  EC41  F090         	call	_EUSART1_Initialize	;wreg free
  1689  012E00  0012               	return		;funcret
  1690  012E02                     __end_of_SYSTEM_Initialize:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _TMR1_Initialize *****************
  1694 ;; Defined at:
  1695 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1711 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;Total ram usage:        2 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    5
  1716 ;; This function calls:
  1717 ;;		_TMR1_SetInterruptHandler
  1718 ;; This function is called by:
  1719 ;;		_SYSTEM_Initialize
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text2
  1724  012890                     __ptext2:
  1725                           	callstack 0
  1726  012890                     _TMR1_Initialize:
  1727                           	callstack 24
  1728  012890                     
  1729                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1730  012890  0E00               	movlw	0
  1731  012892  6ECF               	movwf	207,c	;volatile
  1732                           
  1733                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  1734  012894  0E00               	movlw	0
  1735  012896  6ED0               	movwf	208,c	;volatile
  1736                           
  1737                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  1738  012898  0E04               	movlw	4
  1739  01289A  6ED1               	movwf	209,c	;volatile
  1740                           
  1741                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xF0;
  1742  01289C  0EF0               	movlw	240
  1743  01289E  6ECD               	movwf	205,c	;volatile
  1744                           
  1745                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xDD;
  1746  0128A0  0EDD               	movlw	221
  1747  0128A2  6ECC               	movwf	204,c	;volatile
  1748  0128A4                     
  1749                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  1750  0128A4  010E               	movlb	14	; () banked
  1751  0128A6  91C9               	bcf	201,0,b	;volatile
  1752  0128A8                     
  1753                           ; BSR set to: 14
  1754                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1755  0128A8  50CC               	movf	204,w,c	;volatile
  1756  0128AA  CFCD F00A          	movff	4045,??_TMR1_Initialize	;volatile
  1757  0128AE  6A0B               	clrf	(??_TMR1_Initialize+1)^0,c
  1758  0128B0  C00A  F00B         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  1759  0128B4  6A0A               	clrf	??_TMR1_Initialize^0,c
  1760  0128B6  100A               	iorwf	??_TMR1_Initialize^0,w,c
  1761  0128B8  0100               	movlb	0	; () banked
  1762  0128BA  6FFA               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  1763  0128BC  500B               	movf	(??_TMR1_Initialize+1)^0,w,c
  1764  0128BE  6FFB               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  1765  0128C0                     
  1766                           ; BSR set to: 0
  1767                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  1768  0128C0  010E               	movlb	14	; () banked
  1769  0128C2  81C1               	bsf	193,0,b	;volatile
  1770  0128C4                     
  1771                           ; BSR set to: 14
  1772                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1773  0128C4  0E64               	movlw	low _TMR1_DefaultInterruptHandler
  1774  0128C6  6E07               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1775  0128C8  0E30               	movlw	high _TMR1_DefaultInterruptHandler
  1776  0128CA  6E08               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1777  0128CC  0E01               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
  1778  0128CE  6E09               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)^0,c
  1779  0128D0  ECBA  F097         	call	_TMR1_SetInterruptHandler	;wreg free
  1780  0128D4                     
  1781                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x31;
  1782  0128D4  0E31               	movlw	49
  1783  0128D6  6ECE               	movwf	206,c	;volatile
  1784  0128D8  0012               	return		;funcret
  1785  0128DA                     __end_of_TMR1_Initialize:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function _TMR1_SetInterruptHandler *****************
  1789 ;; Defined at:
  1790 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  InterruptHan    3    6[COMRAM] PTR FTN()void 
  1793 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, status,2, status,0
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1805 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1808 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1809 ;;Total ram usage:        3 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    4
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_TMR1_Initialize
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text3
  1820  012F74                     __ptext3:
  1821                           	callstack 0
  1822  012F74                     _TMR1_SetInterruptHandler:
  1823                           	callstack 24
  1824  012F74                     
  1825                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  1826  012F74  C007  F0E2         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1827  012F78  C008  F0E3         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1828  012F7C  C009  F0E4         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
  1829  012F80  0012               	return		;funcret
  1830  012F82                     __end_of_TMR1_SetInterruptHandler:
  1831                           	callstack 0
  1832                           
  1833 ;; *************** function _TMR0_Initialize *****************
  1834 ;; Defined at:
  1835 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;Total ram usage:        0 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    5
  1856 ;; This function calls:
  1857 ;;		_TMR0_SetInterruptHandler
  1858 ;; This function is called by:
  1859 ;;		_SYSTEM_Initialize
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text4
  1864  012D64                     __ptext4:
  1865                           	callstack 0
  1866  012D64                     _TMR0_Initialize:
  1867                           	callstack 24
  1868  012D64                     
  1869                           ;mcc_generated_files/tmr0.c: 67:     T0CON1 = 0x4C;
  1870  012D64  0E4C               	movlw	76
  1871  012D66  6ED5               	movwf	213,c	;volatile
  1872                           
  1873                           ;mcc_generated_files/tmr0.c: 70:     TMR0H = 0xF3;
  1874  012D68  0EF3               	movlw	243
  1875  012D6A  6ED3               	movwf	211,c	;volatile
  1876                           
  1877                           ;mcc_generated_files/tmr0.c: 73:     TMR0L = 0x00;
  1878  012D6C  0E00               	movlw	0
  1879  012D6E  6ED2               	movwf	210,c	;volatile
  1880  012D70                     
  1881                           ;mcc_generated_files/tmr0.c: 76:     PIR0bits.TMR0IF = 0;
  1882  012D70  010E               	movlb	14	; () banked
  1883  012D72  9BC5               	bcf	197,5,b	;volatile
  1884  012D74                     
  1885                           ; BSR set to: 14
  1886                           ;mcc_generated_files/tmr0.c: 79:     PIE0bits.TMR0IE = 1;
  1887  012D74  8BBD               	bsf	189,5,b	;volatile
  1888  012D76                     
  1889                           ; BSR set to: 14
  1890                           ;mcc_generated_files/tmr0.c: 82:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1891  012D76  0E66               	movlw	low _TMR0_DefaultInterruptHandler
  1892  012D78  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1893  012D7A  0E30               	movlw	high _TMR0_DefaultInterruptHandler
  1894  012D7C  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1895  012D7E  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  1896  012D80  6E09               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)^0,c
  1897  012D82  ECC1  F097         	call	_TMR0_SetInterruptHandler	;wreg free
  1898  012D86                     
  1899                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x8F;
  1900  012D86  0E8F               	movlw	143
  1901  012D88  6ED4               	movwf	212,c	;volatile
  1902  012D8A  0012               	return		;funcret
  1903  012D8C                     __end_of_TMR0_Initialize:
  1904                           	callstack 0
  1905                           
  1906 ;; *************** function _TMR0_SetInterruptHandler *****************
  1907 ;; Defined at:
  1908 ;;		line 135 in file "mcc_generated_files/tmr0.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  InterruptHan    3    6[COMRAM] PTR FTN()void 
  1911 ;;		 -> TMR0_UserInterruptHandler(1), TMR0_DefaultInterruptHandler(1), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1923 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;Total ram usage:        3 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    4
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_TMR0_Initialize
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text5
  1939  012F82                     __ptext5:
  1940                           	callstack 0
  1941  012F82                     _TMR0_SetInterruptHandler:
  1942                           	callstack 26
  1943  012F82                     
  1944                           ;mcc_generated_files/tmr0.c: 136:     TMR0_InterruptHandler = InterruptHandler;
  1945  012F82  C007  F0E5         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1946  012F86  C008  F0E6         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1947  012F8A  C009  F0E7         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  1948  012F8E  0012               	return		;funcret
  1949  012F90                     __end_of_TMR0_SetInterruptHandler:
  1950                           	callstack 0
  1951                           
  1952 ;; *************** function _PMD_Initialize *****************
  1953 ;; Defined at:
  1954 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    4
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_SYSTEM_Initialize
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text6
  1983  012EAA                     __ptext6:
  1984                           	callstack 0
  1985  012EAA                     _PMD_Initialize:
  1986                           	callstack 25
  1987  012EAA                     
  1988                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  1989  012EAA  0E00               	movlw	0
  1990  012EAC  010E               	movlb	14	; () banked
  1991  012EAE  6FDC               	movwf	220,b	;volatile
  1992                           
  1993                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  1994  012EB0  0E00               	movlw	0
  1995  012EB2  6FDD               	movwf	221,b	;volatile
  1996                           
  1997                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  1998  012EB4  0E00               	movlw	0
  1999  012EB6  6FDE               	movwf	222,b	;volatile
  2000                           
  2001                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  2002  012EB8  0E00               	movlw	0
  2003  012EBA  6FDF               	movwf	223,b	;volatile
  2004                           
  2005                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  2006  012EBC  0E00               	movlw	0
  2007  012EBE  6FE0               	movwf	224,b	;volatile
  2008                           
  2009                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  2010  012EC0  0E00               	movlw	0
  2011  012EC2  6FE1               	movwf	225,b	;volatile
  2012  012EC4                     
  2013                           ; BSR set to: 14
  2014  012EC4  0012               	return		;funcret
  2015  012EC6                     __end_of_PMD_Initialize:
  2016                           	callstack 0
  2017                           
  2018 ;; *************** function _PIN_MANAGER_Initialize *****************
  2019 ;; Defined at:
  2020 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2038 ;;Total ram usage:        0 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    4
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_SYSTEM_Initialize
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text7
  2049  012224                     __ptext7:
  2050                           	callstack 0
  2051  012224                     _PIN_MANAGER_Initialize:
  2052                           	callstack 25
  2053  012224                     
  2054                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2055  012224  0E00               	movlw	0
  2056  012226  6E86               	movwf	134,c	;volatile
  2057                           
  2058                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2059  012228  0E00               	movlw	0
  2060  01222A  6E85               	movwf	133,c	;volatile
  2061                           
  2062                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2063  01222C  0E00               	movlw	0
  2064  01222E  6E82               	movwf	130,c	;volatile
  2065                           
  2066                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2067  012230  0E00               	movlw	0
  2068  012232  6E83               	movwf	131,c	;volatile
  2069                           
  2070                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2071  012234  0E00               	movlw	0
  2072  012236  6E84               	movwf	132,c	;volatile
  2073                           
  2074                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2075  012238  0E07               	movlw	7
  2076  01223A  6E8B               	movwf	139,c	;volatile
  2077                           
  2078                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x77;
  2079  01223C  0E77               	movlw	119
  2080  01223E  6E87               	movwf	135,c	;volatile
  2081  012240                     
  2082                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  2083  012240  6888               	setf	136,c	;volatile
  2084                           
  2085                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFB;
  2086  012242  0EFB               	movlw	251
  2087  012244  6E89               	movwf	137,c	;volatile
  2088                           
  2089                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xDF;
  2090  012246  0EDF               	movlw	223
  2091  012248  6E8A               	movwf	138,c	;volatile
  2092                           
  2093                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xDF;
  2094  01224A  0EDF               	movlw	223
  2095  01224C  010F               	movlb	15	; () banked
  2096  01224E  6F21               	movwf	33,b	;volatile
  2097                           
  2098                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xD3;
  2099  012250  0ED3               	movlw	211
  2100  012252  6F1C               	movwf	28,b	;volatile
  2101  012254                     
  2102                           ; BSR set to: 15
  2103                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  2104  012254  6914               	setf	20,b	;volatile
  2105                           
  2106                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  2107  012256  0E07               	movlw	7
  2108  012258  6F29               	movwf	41,b	;volatile
  2109                           
  2110                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x76;
  2111  01225A  0E76               	movlw	118
  2112  01225C  6F0C               	movwf	12,b	;volatile
  2113                           
  2114                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  2115  01225E  0E00               	movlw	0
  2116  012260  6F20               	movwf	32,b	;volatile
  2117                           
  2118                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  2119  012262  0E00               	movlw	0
  2120  012264  6F28               	movwf	40,b	;volatile
  2121                           
  2122                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  2123  012266  0E00               	movlw	0
  2124  012268  6F13               	movwf	19,b	;volatile
  2125                           
  2126                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  2127  01226A  0E00               	movlw	0
  2128  01226C  6F0B               	movwf	11,b	;volatile
  2129                           
  2130                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  2131  01226E  0E00               	movlw	0
  2132  012270  6F1B               	movwf	27,b	;volatile
  2133                           
  2134                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  2135  012272  0E00               	movlw	0
  2136  012274  6F27               	movwf	39,b	;volatile
  2137                           
  2138                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  2139  012276  0E00               	movlw	0
  2140  012278  6F0A               	movwf	10,b	;volatile
  2141                           
  2142                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  2143  01227A  0E00               	movlw	0
  2144  01227C  6F12               	movwf	18,b	;volatile
  2145                           
  2146                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  2147  01227E  0E00               	movlw	0
  2148  012280  6F1A               	movwf	26,b	;volatile
  2149                           
  2150                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  2151  012282  0E00               	movlw	0
  2152  012284  6F1F               	movwf	31,b	;volatile
  2153  012286                     
  2154                           ; BSR set to: 15
  2155                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  2156  012286  6909               	setf	9,b	;volatile
  2157  012288                     
  2158                           ; BSR set to: 15
  2159                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  2160  012288  6911               	setf	17,b	;volatile
  2161  01228A                     
  2162                           ; BSR set to: 15
  2163                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  2164  01228A  6919               	setf	25,b	;volatile
  2165  01228C                     
  2166                           ; BSR set to: 15
  2167                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  2168  01228C  691E               	setf	30,b	;volatile
  2169                           
  2170                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  2171  01228E  0E07               	movlw	7
  2172  012290  6F26               	movwf	38,b	;volatile
  2173  012292                     
  2174                           ; BSR set to: 15
  2175                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  2176  012292  6908               	setf	8,b	;volatile
  2177  012294                     
  2178                           ; BSR set to: 15
  2179                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  2180  012294  6910               	setf	16,b	;volatile
  2181  012296                     
  2182                           ; BSR set to: 15
  2183                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  2184  012296  6918               	setf	24,b	;volatile
  2185  012298                     
  2186                           ; BSR set to: 15
  2187                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  2188  012298  691D               	setf	29,b	;volatile
  2189                           
  2190                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  2191  01229A  0E0F               	movlw	15
  2192  01229C  6F25               	movwf	37,b	;volatile
  2193                           
  2194                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x13;
  2195  01229E  0E13               	movlw	19
  2196  0122A0  010E               	movlb	14	; () banked
  2197  0122A2  6FB0               	movwf	176,b	;volatile
  2198                           
  2199                           ;mcc_generated_files/pin_manager.c: 128:     RC2PPS = 0x09;
  2200  0122A4  0E09               	movlw	9
  2201  0122A6  6FF4               	movwf	244,b	;volatile
  2202  0122A8                     
  2203                           ; BSR set to: 14
  2204  0122A8  0012               	return		;funcret
  2205  0122AA                     __end_of_PIN_MANAGER_Initialize:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _OSCILLATOR_Initialize *****************
  2209 ;; Defined at:
  2210 ;;		line 63 in file "mcc_generated_files/mcc.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    4
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_SYSTEM_Initialize
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text8
  2239  012EC6                     __ptext8:
  2240                           	callstack 0
  2241  012EC6                     _OSCILLATOR_Initialize:
  2242                           	callstack 25
  2243  012EC6                     
  2244                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  2245  012EC6  0E60               	movlw	96
  2246  012EC8  010E               	movlb	14	; () banked
  2247  012ECA  6FD3               	movwf	211,b	;volatile
  2248                           
  2249                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  2250  012ECC  0E00               	movlw	0
  2251  012ECE  6FD5               	movwf	213,b	;volatile
  2252                           
  2253                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  2254  012ED0  0E00               	movlw	0
  2255  012ED2  6FD7               	movwf	215,b	;volatile
  2256                           
  2257                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x08;
  2258  012ED4  0E08               	movlw	8
  2259  012ED6  6FD9               	movwf	217,b	;volatile
  2260                           
  2261                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  2262  012ED8  0E00               	movlw	0
  2263  012EDA  6FD8               	movwf	216,b	;volatile
  2264  012EDC                     
  2265                           ; BSR set to: 14
  2266  012EDC  0012               	return		;funcret
  2267  012EDE                     __end_of_OSCILLATOR_Initialize:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function _INTERRUPT_Initialize *****************
  2271 ;; Defined at:
  2272 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		None
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    4
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_SYSTEM_Initialize
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text9
  2301  01304C                     __ptext9:
  2302                           	callstack 0
  2303  01304C                     _INTERRUPT_Initialize:
  2304                           	callstack 25
  2305  01304C                     
  2306                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2307  01304C  9AF2               	bcf	242,5,c	;volatile
  2308  01304E  0012               	return		;funcret
  2309  013050                     __end_of_INTERRUPT_Initialize:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _EUSART1_Initialize *****************
  2313 ;; Defined at:
  2314 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    5
  2335 ;; This function calls:
  2336 ;;		_EUSART1_SetErrorHandler
  2337 ;;		_EUSART1_SetFramingErrorHandler
  2338 ;;		_EUSART1_SetOverrunErrorHandler
  2339 ;;		_EUSART1_SetRxInterruptHandler
  2340 ;;		_EUSART1_SetTxInterruptHandler
  2341 ;; This function is called by:
  2342 ;;		_SYSTEM_Initialize
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text10
  2347  012082                     __ptext10:
  2348                           	callstack 0
  2349  012082                     _EUSART1_Initialize:
  2350                           	callstack 24
  2351  012082                     
  2352                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  2353  012082  010E               	movlb	14	; () banked
  2354  012084  9BC0               	bcf	192,5,b	;volatile
  2355  012086                     
  2356                           ; BSR set to: 14
  2357                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2358  012086  0E6A               	movlw	low _EUSART1_Receive_ISR
  2359  012088  6E07               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2360  01208A  0E1E               	movlw	high _EUSART1_Receive_ISR
  2361  01208C  6E08               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2362  01208E  0E01               	movlw	low (_EUSART1_Receive_ISR shr (0+16))
  2363  012090  6E09               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+2)^0,c
  2364  012092  ECCF  F097         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2365  012096                     
  2366                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  2367  012096  010E               	movlb	14	; () banked
  2368  012098  99C0               	bcf	192,4,b	;volatile
  2369                           
  2370                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2371  01209A  0E1E               	movlw	low _EUSART1_Transmit_ISR
  2372  01209C  6E07               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  2373  01209E  0E29               	movlw	high _EUSART1_Transmit_ISR
  2374  0120A0  6E08               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  2375  0120A2  0E01               	movlw	low (_EUSART1_Transmit_ISR shr (0+16))
  2376  0120A4  6E09               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+2)^0,c
  2377  0120A6  ECC8  F097         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2378  0120AA                     
  2379                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  2380  0120AA  0E08               	movlw	8
  2381  0120AC  6E9E               	movwf	158,c	;volatile
  2382  0120AE                     
  2383                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  2384  0120AE  0E90               	movlw	144
  2385  0120B0  6E9C               	movwf	156,c	;volatile
  2386  0120B2                     
  2387                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  2388  0120B2  0E24               	movlw	36
  2389  0120B4  6E9D               	movwf	157,c	;volatile
  2390  0120B6                     
  2391                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x8A;
  2392  0120B6  0E8A               	movlw	138
  2393  0120B8  6E9A               	movwf	154,c	;volatile
  2394  0120BA                     
  2395                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
  2396  0120BA  0E00               	movlw	0
  2397  0120BC  6E9B               	movwf	155,c	;volatile
  2398  0120BE                     
  2399                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2400  0120BE  0E68               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2401  0120C0  6E07               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2402  0120C2  0E30               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2403  0120C4  6E08               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2404  0120C6  0E01               	movlw	low (_EUSART1_DefaultFramingErrorHandler shr (0+16))
  2405  0120C8  6E09               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  2406  0120CA  ECDD  F097         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2407  0120CE                     
  2408                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2409  0120CE  0E40               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2410  0120D0  6E07               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2411  0120D2  0E30               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2412  0120D4  6E08               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2413  0120D6  0E01               	movlw	low (_EUSART1_DefaultOverrunErrorHandler shr (0+16))
  2414  0120D8  6E09               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  2415  0120DA  ECD6  F097         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2416  0120DE                     
  2417                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2418  0120DE  0E46               	movlw	low _EUSART1_DefaultErrorHandler
  2419  0120E0  6E07               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2420  0120E2  0E30               	movlw	high _EUSART1_DefaultErrorHandler
  2421  0120E4  6E08               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2422  0120E6  0E01               	movlw	low (_EUSART1_DefaultErrorHandler shr (0+16))
  2423  0120E8  6E09               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)^0,c
  2424  0120EA  ECE4  F097         	call	_EUSART1_SetErrorHandler	;wreg free
  2425                           
  2426                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2427  0120EE  0E00               	movlw	0
  2428  0120F0  0100               	movlb	0	; () banked
  2429  0120F2  6F8A               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2430                           
  2431                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2432  0120F4  0E00               	movlw	0
  2433  0120F6  6E58               	movwf	_eusart1TxHead^0,c	;volatile
  2434                           
  2435                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2436  0120F8  0E00               	movlw	0
  2437  0120FA  6E57               	movwf	_eusart1TxTail^0,c	;volatile
  2438                           
  2439                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2440  0120FC  0E08               	movlw	8
  2441  0120FE  6FFC               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  2442                           
  2443                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2444  012100  0E00               	movlw	0
  2445  012102  6E56               	movwf	_eusart1RxHead^0,c	;volatile
  2446                           
  2447                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2448  012104  0E00               	movlw	0
  2449  012106  6E55               	movwf	_eusart1RxTail^0,c	;volatile
  2450                           
  2451                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2452  012108  0E00               	movlw	0
  2453  01210A  6F8B               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2454  01210C                     
  2455                           ; BSR set to: 0
  2456                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  2457  01210C  010E               	movlb	14	; () banked
  2458  01210E  8BC0               	bsf	192,5,b	;volatile
  2459  012110                     
  2460                           ; BSR set to: 14
  2461  012110  0012               	return		;funcret
  2462  012112                     __end_of_EUSART1_Initialize:
  2463                           	callstack 0
  2464                           
  2465 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2466 ;; Defined at:
  2467 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  interruptHan    3    6[COMRAM] PTR FTN()void 
  2470 ;;		 -> EUSART1_Transmit_ISR(1), 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2482 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2485 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;Total ram usage:        3 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    4
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_EUSART1_Initialize
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text11
  2497  012F90                     __ptext11:
  2498                           	callstack 0
  2499  012F90                     _EUSART1_SetTxInterruptHandler:
  2500                           	callstack 24
  2501  012F90                     
  2502                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2503  012F90  C007  F0F7         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2504  012F94  C008  F0F8         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2505  012F98  C009  F0F9         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+2,_EUSART1_TxDefaultInterruptHandl
      +                          er+2
  2506  012F9C  0012               	return		;funcret
  2507  012F9E                     __end_of_EUSART1_SetTxInterruptHandler:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2511 ;; Defined at:
  2512 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  interruptHan    3    6[COMRAM] PTR FTN()void 
  2515 ;;		 -> EUSART1_Receive_ISR(1), 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2527 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;Total ram usage:        3 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    4
  2534 ;; This function calls:
  2535 ;;		Nothing
  2536 ;; This function is called by:
  2537 ;;		_EUSART1_Initialize
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text12
  2542  012F9E                     __ptext12:
  2543                           	callstack 0
  2544  012F9E                     _EUSART1_SetRxInterruptHandler:
  2545                           	callstack 24
  2546  012F9E                     
  2547                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2548  012F9E  C007  F0F4         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2549  012FA2  C008  F0F5         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2550  012FA6  C009  F0F6         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+2,_EUSART1_RxDefaultInterruptHandl
      +                          er+2
  2551  012FAA  0012               	return		;funcret
  2552  012FAC                     __end_of_EUSART1_SetRxInterruptHandler:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2556 ;; Defined at:
  2557 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  interruptHan    3    6[COMRAM] PTR FTN()void 
  2560 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2572 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;Total ram usage:        3 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    4
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_EUSART1_Initialize
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text13
  2587  012FAC                     __ptext13:
  2588                           	callstack 0
  2589  012FAC                     _EUSART1_SetOverrunErrorHandler:
  2590                           	callstack 24
  2591  012FAC                     
  2592                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  2593  012FAC  C007  F0EE         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2594  012FB0  C008  F0EF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2595  012FB4  C009  F0F0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
  2596  012FB8  0012               	return		;funcret
  2597  012FBA                     __end_of_EUSART1_SetOverrunErrorHandler:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2601 ;; Defined at:
  2602 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  interruptHan    3    6[COMRAM] PTR FTN()void 
  2605 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2617 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;Total ram usage:        3 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    4
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_EUSART1_Initialize
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text14
  2632  012FBA                     __ptext14:
  2633                           	callstack 0
  2634  012FBA                     _EUSART1_SetFramingErrorHandler:
  2635                           	callstack 24
  2636  012FBA                     
  2637                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  2638  012FBA  C007  F0F1         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2639  012FBE  C008  F0F2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2640  012FC2  C009  F0F3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
  2641  012FC6  0012               	return		;funcret
  2642  012FC8                     __end_of_EUSART1_SetFramingErrorHandler:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function _EUSART1_SetErrorHandler *****************
  2646 ;; Defined at:
  2647 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  interruptHan    3    6[COMRAM] PTR FTN()void 
  2650 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2662 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2666 ;;Total ram usage:        3 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    4
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_EUSART1_Initialize
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text15
  2677  012FC8                     __ptext15:
  2678                           	callstack 0
  2679  012FC8                     _EUSART1_SetErrorHandler:
  2680                           	callstack 24
  2681  012FC8                     
  2682                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  2683  012FC8  C007  F0EB         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2684  012FCC  C008  F0EC         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2685  012FD0  C009  F0ED         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
  2686  012FD4  0012               	return		;funcret
  2687  012FD6                     __end_of_EUSART1_SetErrorHandler:
  2688                           	callstack 0
  2689                           
  2690 ;; *************** function _CRC_Initialize *****************
  2691 ;; Defined at:
  2692 ;;		line 76 in file "mcc_generated_files/crc.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  seed            2    0        unsigned short 
  2697 ;;  poly            2    0        unsigned short 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2708 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2709 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2710 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;Total ram usage:        5 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    4
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_SYSTEM_Initialize
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text16
  2722  012654                     __ptext16:
  2723                           	callstack 0
  2724  012654                     _CRC_Initialize:
  2725                           	callstack 25
  2726  012654                     
  2727                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
  2728  012654  0E80               	movlw	128
  2729  012656  6E77               	movwf	119,c	;volatile
  2730  012658                     
  2731                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (15 << 4) | (15);
  2732  012658  6878               	setf	120,c	;volatile
  2733                           
  2734                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
  2735  01265A  0E00               	movlw	0
  2736  01265C  6E71               	movwf	113,c	;volatile
  2737                           
  2738                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
  2739  01265E  0E00               	movlw	0
  2740  012660  6E72               	movwf	114,c	;volatile
  2741                           
  2742                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x81;
  2743  012662  0E81               	movlw	129
  2744  012664  010F               	movlb	15	; () banked
  2745  012666  6F4A               	movwf	74,b	;volatile
  2746                           
  2747                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
  2748  012668  0E00               	movlw	0
  2749  01266A  6F46               	movwf	70,b	;volatile
  2750                           
  2751                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
  2752  01266C  0E00               	movlw	0
  2753  01266E  6F45               	movwf	69,b	;volatile
  2754                           
  2755                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
  2756  012670  0E00               	movlw	0
  2757  012672  6F44               	movwf	68,b	;volatile
  2758                           
  2759                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
  2760  012674  0E3F               	movlw	63
  2761  012676  6F49               	movwf	73,b	;volatile
  2762  012678                     
  2763                           ; BSR set to: 15
  2764                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
  2765  012678  6948               	setf	72,b	;volatile
  2766  01267A                     
  2767                           ; BSR set to: 15
  2768                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
  2769  01267A  6947               	setf	71,b	;volatile
  2770                           
  2771                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
  2772  01267C  0E00               	movlw	0
  2773  01267E  6F4B               	movwf	75,b	;volatile
  2774                           
  2775                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
  2776  012680  0E80               	movlw	128
  2777  012682  6E76               	movwf	118,c	;volatile
  2778  012684                     
  2779                           ; BSR set to: 15
  2780                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
  2781  012684  0E05               	movlw	5
  2782  012686  6E75               	movwf	117,c	;volatile
  2783                           
  2784                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
  2785  012688  0E00               	movlw	0
  2786  01268A  6E72               	movwf	114,c	;volatile
  2787  01268C                     
  2788                           ; BSR set to: 15
  2789                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
  2790  01268C  0E00               	movlw	0
  2791  01268E  6E71               	movwf	113,c	;volatile
  2792  012690                     
  2793                           ; BSR set to: 15
  2794                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
  2795  012690  3878               	swapf	120,w,c	;volatile
  2796  012692  0B0F               	andlw	15
  2797  012694  6E07               	movwf	??_CRC_Initialize^0,c
  2798  012696  2807               	incf	??_CRC_Initialize^0,w,c
  2799  012698  0100               	movlb	0	; () banked
  2800  01269A  6FAC               	movwf	_crcObj& (0+255),b
  2801  01269C                     
  2802                           ; BSR set to: 0
  2803                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
  2804  01269C  5078               	movf	120,w,c	;volatile
  2805  01269E  0B0F               	andlw	15
  2806  0126A0  6E07               	movwf	??_CRC_Initialize^0,c
  2807  0126A2  2807               	incf	??_CRC_Initialize^0,w,c
  2808  0126A4  6FAD               	movwf	(_crcObj+1)& (0+255),b
  2809  0126A6                     
  2810                           ; BSR set to: 0
  2811  0126A6  0012               	return		;funcret
  2812  0126A8                     __end_of_CRC_Initialize:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _ADCC_Initialize *****************
  2816 ;; Defined at:
  2817 ;;		line 64 in file "mcc_generated_files/adcc.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2835 ;;Total ram usage:        0 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:    5
  2838 ;; This function calls:
  2839 ;;		_ADCC_SetADTIInterruptHandler
  2840 ;; This function is called by:
  2841 ;;		_SYSTEM_Initialize
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text17
  2846  012474                     __ptext17:
  2847                           	callstack 0
  2848  012474                     _ADCC_Initialize:
  2849                           	callstack 24
  2850  012474                     
  2851                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  2852  012474  0E00               	movlw	0
  2853  012476  6E65               	movwf	101,c	;volatile
  2854                           
  2855                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  2856  012478  0E00               	movlw	0
  2857  01247A  6E66               	movwf	102,c	;volatile
  2858                           
  2859                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  2860  01247C  0E00               	movlw	0
  2861  01247E  6E67               	movwf	103,c	;volatile
  2862                           
  2863                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  2864  012480  0E00               	movlw	0
  2865  012482  6E68               	movwf	104,c	;volatile
  2866                           
  2867                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  2868  012484  0E00               	movlw	0
  2869  012486  6E63               	movwf	99,c	;volatile
  2870                           
  2871                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  2872  012488  0E00               	movlw	0
  2873  01248A  6E64               	movwf	100,c	;volatile
  2874                           
  2875                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x20;
  2876  01248C  0E20               	movlw	32
  2877  01248E  6E61               	movwf	97,c	;volatile
  2878                           
  2879                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  2880  012490  0E00               	movlw	0
  2881  012492  010F               	movlb	15	; () banked
  2882  012494  6F5A               	movwf	90,b	;volatile
  2883                           
  2884                           ;mcc_generated_files/adcc.c: 84:     ADCAP = 0x00;
  2885  012496  0E00               	movlw	0
  2886  012498  6F58               	movwf	88,b	;volatile
  2887                           
  2888                           ;mcc_generated_files/adcc.c: 86:     ADPRE = 0x00;
  2889  01249A  0E00               	movlw	0
  2890  01249C  6F59               	movwf	89,b	;volatile
  2891                           
  2892                           ;mcc_generated_files/adcc.c: 88:     ADCON1 = 0x00;
  2893  01249E  0E00               	movlw	0
  2894  0124A0  6F54               	movwf	84,b	;volatile
  2895                           
  2896                           ;mcc_generated_files/adcc.c: 90:     ADCON2 = 0x53;
  2897  0124A2  0E53               	movlw	83
  2898  0124A4  6F55               	movwf	85,b	;volatile
  2899                           
  2900                           ;mcc_generated_files/adcc.c: 92:     ADCON3 = 0x07;
  2901  0124A6  0E07               	movlw	7
  2902  0124A8  6F56               	movwf	86,b	;volatile
  2903                           
  2904                           ;mcc_generated_files/adcc.c: 94:     ADSTAT = 0x00;
  2905  0124AA  0E00               	movlw	0
  2906  0124AC  6E60               	movwf	96,c	;volatile
  2907                           
  2908                           ;mcc_generated_files/adcc.c: 96:     ADREF = 0x00;
  2909  0124AE  0E00               	movlw	0
  2910  0124B0  6F53               	movwf	83,b	;volatile
  2911                           
  2912                           ;mcc_generated_files/adcc.c: 98:     ADACT = 0x03;
  2913  0124B2  0E03               	movlw	3
  2914  0124B4  6F51               	movwf	81,b	;volatile
  2915                           
  2916                           ;mcc_generated_files/adcc.c: 100:     ADCLK = 0x3F;
  2917  0124B6  0E3F               	movlw	63
  2918  0124B8  6F52               	movwf	82,b	;volatile
  2919                           
  2920                           ;mcc_generated_files/adcc.c: 102:     ADCON0 = 0x84;
  2921  0124BA  0E84               	movlw	132
  2922  0124BC  6F5B               	movwf	91,b	;volatile
  2923                           
  2924                           ;mcc_generated_files/adcc.c: 104:     ADACQ = 0x00;
  2925  0124BE  0E00               	movlw	0
  2926  0124C0  6F57               	movwf	87,b	;volatile
  2927  0124C2                     
  2928                           ; BSR set to: 15
  2929                           ;mcc_generated_files/adcc.c: 108:     PIR1bits.ADTIF = 0;
  2930  0124C2  010E               	movlb	14	; () banked
  2931  0124C4  93C6               	bcf	198,1,b	;volatile
  2932  0124C6                     
  2933                           ; BSR set to: 14
  2934                           ;mcc_generated_files/adcc.c: 110:     PIE1bits.ADTIE = 1;
  2935  0124C6  83BE               	bsf	190,1,b	;volatile
  2936  0124C8                     
  2937                           ; BSR set to: 14
  2938                           ;mcc_generated_files/adcc.c: 112:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  2939  0124C8  0E6A               	movlw	low _ADCC_DefaultInterruptHandler
  2940  0124CA  6E07               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler^0,c
  2941  0124CC  0E30               	movlw	high _ADCC_DefaultInterruptHandler
  2942  0124CE  6E08               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)^0,c
  2943  0124D0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
  2944  0124D2  6E09               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)^0,c
  2945  0124D4  ECEB  F097         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2946  0124D8  0012               	return		;funcret
  2947  0124DA                     __end_of_ADCC_Initialize:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
  2951 ;; Defined at:
  2952 ;;		line 309 in file "mcc_generated_files/adcc.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  InterruptHan    3    6[COMRAM] PTR FTN()void 
  2955 ;;		 -> ADCC_UserInterruptHandler(1), ADCC_DefaultInterruptHandler(1), 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2967 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;Total ram usage:        3 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    4
  2974 ;; This function calls:
  2975 ;;		Nothing
  2976 ;; This function is called by:
  2977 ;;		_ADCC_Initialize
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text18
  2983  012FD6                     __ptext18:
  2984                           	callstack 0
  2985  012FD6                     _ADCC_SetADTIInterruptHandler:
  2986                           	callstack 24
  2987  012FD6                     
  2988                           ;mcc_generated_files/adcc.c: 310:     ADCC_ADTI_InterruptHandler = InterruptHandler;
  2989  012FD6  C007  F0E8         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
  2990  012FDA  C008  F0E9         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
  2991  012FDE  C009  F0EA         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
  2992  012FE2  0012               	return		;funcret
  2993  012FE4                     __end_of_ADCC_SetADTIInterruptHandler:
  2994                           	callstack 0
  2995                           
  2996 ;; *************** function _InitialSetup *****************
  2997 ;; Defined at:
  2998 ;;		line 8 in file "application.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;Total ram usage:        0 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    9
  3019 ;; This function calls:
  3020 ;;		_ADCCSetSensorPin
  3021 ;;		_BLE2ClickSetup
  3022 ;;		_CRCBurstMode
  3023 ;;		_CRCInitializeBurstMode
  3024 ;;		_CRC_CalculatedResultGet
  3025 ;;		_DATAEE_ReadByte
  3026 ;;		_DATAEE_WriteByte
  3027 ;;		_TMR0_StartTimer
  3028 ;;		_readChecksum
  3029 ;;		_readDataPtr
  3030 ;;		_writeChecksum
  3031 ;;		_writeDataPtr
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text19
  3038  011FE6                     __ptext19:
  3039                           	callstack 0
  3040  011FE6                     _InitialSetup:
  3041                           	callstack 21
  3042  011FE6                     
  3043                           ;application.c: 10:     NVMCON0 = 0x00;
  3044  011FE6  0E00               	movlw	0
  3045  011FE8  6E7F               	movwf	127,c	;volatile
  3046  011FEA                     
  3047                           ;application.c: 12:     ADCCSetSensorPin(0x2);
  3048  011FEA  0E02               	movlw	2
  3049  011FEC  EC04  F098         	call	_ADCCSetSensorPin
  3050  011FF0  8A85               	bsf	133,5,c	;volatile
  3051  011FF2                     
  3052                           ;application.c: 16:     BLE2ClickSetup();
  3053  011FF2  EC96  F08F         	call	_BLE2ClickSetup	;wreg free
  3054  011FF6                     
  3055                           ;application.c: 18:     if(DATAEE_ReadByte(4) == 0xFF) {
  3056  011FF6  0E00               	movlw	0
  3057  011FF8  6E08               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  3058  011FFA  0E04               	movlw	4
  3059  011FFC  6E07               	movwf	DATAEE_ReadByte@bAdd^0,c
  3060  011FFE  EC7B  F097         	call	_DATAEE_ReadByte	;wreg free
  3061  012002  0AFF               	xorlw	255
  3062  012004  A4D8               	btfss	status,2,c
  3063  012006  EF07  F090         	goto	u6571
  3064  01200A  EF09  F090         	goto	u6570
  3065  01200E                     u6571:
  3066  01200E  EF32  F090         	goto	l7183
  3067  012012                     u6570:
  3068  012012                     
  3069                           ;application.c: 19:         DATAEE_WriteByte(4,1);
  3070  012012  0E00               	movlw	0
  3071  012014  6E08               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  3072  012016  0E04               	movlw	4
  3073  012018  6E07               	movwf	DATAEE_WriteByte@bAdd^0,c
  3074  01201A  0E01               	movlw	1
  3075  01201C  6E09               	movwf	DATAEE_WriteByte@bData^0,c
  3076  01201E  ECD2  F094         	call	_DATAEE_WriteByte	;wreg free
  3077                           
  3078                           ;application.c: 21:         CRCInitializeBurstMode();
  3079  012022  ECA6  F097         	call	_CRCInitializeBurstMode	;wreg free
  3080  012026                     
  3081                           ;application.c: 23:         CRCBurstMode();
  3082  012026  ECF3  F094         	call	_CRCBurstMode	;wreg free
  3083  01202A                     
  3084                           ;application.c: 25:         crcValBurst = CRC_CalculatedResultGet(0, 0x0000);
  3085  01202A  0E00               	movlw	0
  3086  01202C  6E0F               	movwf	(CRC_CalculatedResultGet@xorValue+1)^0,c
  3087  01202E  0E00               	movlw	0
  3088  012030  6E0E               	movwf	CRC_CalculatedResultGet@xorValue^0,c
  3089  012032  0E00               	movlw	0
  3090  012034  EC86  F08D         	call	_CRC_CalculatedResultGet
  3091  012038  C00E  F080         	movff	?_CRC_CalculatedResultGet,_crcValBurst	;volatile
  3092  01203C  C00F  F081         	movff	?_CRC_CalculatedResultGet+1,_crcValBurst+1	;volatile
  3093                           
  3094                           ;application.c: 26:         writeChecksum(crcValBurst);
  3095  012040  C080  F00B         	movff	_crcValBurst,writeChecksum@checksum	;volatile
  3096  012044  C081  F00C         	movff	_crcValBurst+1,writeChecksum@checksum+1	;volatile
  3097  012048  EC14  F097         	call	_writeChecksum	;wreg free
  3098  01204C                     
  3099                           ;application.c: 28:         currentAdcValuePtr = 0x4000;
  3100  01204C  0E40               	movlw	64
  3101  01204E  6E54               	movwf	(_currentAdcValuePtr+1)^0,c	;volatile
  3102  012050  0E00               	movlw	0
  3103  012052  6E53               	movwf	_currentAdcValuePtr^0,c	;volatile
  3104  012054                     
  3105                           ;application.c: 29:         writeDataPtr(currentAdcValuePtr);
  3106  012054  C053  F00B         	movff	_currentAdcValuePtr,writeDataPtr@dataPtr	;volatile
  3107  012058  C054  F00C         	movff	_currentAdcValuePtr+1,writeDataPtr@dataPtr+1	;volatile
  3108  01205C  EC25  F097         	call	_writeDataPtr	;wreg free
  3109                           
  3110                           ;application.c: 30:     } else {
  3111  012060  EF3E  F090         	goto	l7185
  3112  012064                     l7183:
  3113                           
  3114                           ;application.c: 32:         crcValBurst = readChecksum();
  3115  012064  EC73  F096         	call	_readChecksum	;wreg free
  3116  012068  C009  F080         	movff	?_readChecksum,_crcValBurst	;volatile
  3117  01206C  C00A  F081         	movff	?_readChecksum+1,_crcValBurst+1	;volatile
  3118                           
  3119                           ;application.c: 33:         currentAdcValuePtr = readDataPtr();
  3120  012070  EC5E  F096         	call	_readDataPtr	;wreg free
  3121  012074  C009  F053         	movff	?_readDataPtr,_currentAdcValuePtr	;volatile
  3122  012078  C00A  F054         	movff	?_readDataPtr+1,_currentAdcValuePtr+1	;volatile
  3123  01207C                     l7185:
  3124                           
  3125                           ;application.c: 36:     TMR0_StartTimer();
  3126  01207C  EC30  F098         	call	_TMR0_StartTimer	;wreg free
  3127  012080  0012               	return		;funcret
  3128  012082                     __end_of_InitialSetup:
  3129                           	callstack 0
  3130                           
  3131 ;; *************** function _readDataPtr *****************
  3132 ;; Defined at:
  3133 ;;		line 427 in file "application.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  addressLowBy    1   13[COMRAM] unsigned char 
  3138 ;;  addressHighB    1   12[COMRAM] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  2    8[COMRAM] unsigned short 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;Total ram usage:        6 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    5
  3155 ;; This function calls:
  3156 ;;		_DATAEE_ReadByte
  3157 ;; This function is called by:
  3158 ;;		_InitialSetup
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text20
  3163  012CBC                     __ptext20:
  3164                           	callstack 0
  3165  012CBC                     _readDataPtr:
  3166                           	callstack 24
  3167  012CBC                     
  3168                           ;application.c: 429:     uint8_t addressHighByte = DATAEE_ReadByte(2);
  3169  012CBC  0E00               	movlw	0
  3170  012CBE  6E08               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  3171  012CC0  0E02               	movlw	2
  3172  012CC2  6E07               	movwf	DATAEE_ReadByte@bAdd^0,c
  3173  012CC4  EC7B  F097         	call	_DATAEE_ReadByte	;wreg free
  3174  012CC8  6E0D               	movwf	readDataPtr@addressHighByte^0,c
  3175                           
  3176                           ;application.c: 430:     uint8_t addressLowByte = DATAEE_ReadByte(3);
  3177  012CCA  0E00               	movlw	0
  3178  012CCC  6E08               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  3179  012CCE  0E03               	movlw	3
  3180  012CD0  6E07               	movwf	DATAEE_ReadByte@bAdd^0,c
  3181  012CD2  EC7B  F097         	call	_DATAEE_ReadByte	;wreg free
  3182  012CD6  6E0E               	movwf	readDataPtr@addressLowByte^0,c
  3183  012CD8                     
  3184                           ;application.c: 431:     return(((uint16_t)addressHighByte << 8) | addressLowByte);
  3185  012CD8  500D               	movf	readDataPtr@addressHighByte^0,w,c
  3186  012CDA  6E0B               	movwf	??_readDataPtr^0,c
  3187  012CDC  500E               	movf	readDataPtr@addressLowByte^0,w,c
  3188  012CDE  6E09               	movwf	?_readDataPtr^0,c
  3189  012CE0  C00B  F00A         	movff	??_readDataPtr,?_readDataPtr+1
  3190  012CE4  0012               	return		;funcret
  3191  012CE6                     __end_of_readDataPtr:
  3192                           	callstack 0
  3193                           
  3194 ;; *************** function _readChecksum *****************
  3195 ;; Defined at:
  3196 ;;		line 414 in file "application.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  checkSumLowB    1   13[COMRAM] unsigned char 
  3201 ;;  checkSumHigh    1   12[COMRAM] unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  2    8[COMRAM] unsigned short 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3214 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3215 ;;Total ram usage:        6 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    5
  3218 ;; This function calls:
  3219 ;;		_DATAEE_ReadByte
  3220 ;; This function is called by:
  3221 ;;		_InitialSetup
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text21
  3226  012CE6                     __ptext21:
  3227                           	callstack 0
  3228  012CE6                     _readChecksum:
  3229                           	callstack 24
  3230  012CE6                     
  3231                           ;application.c: 416:     uint8_t checkSumHighByte = DATAEE_ReadByte(0);
  3232  012CE6  0E00               	movlw	0
  3233  012CE8  6E08               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  3234  012CEA  0E00               	movlw	0
  3235  012CEC  6E07               	movwf	DATAEE_ReadByte@bAdd^0,c
  3236  012CEE  EC7B  F097         	call	_DATAEE_ReadByte	;wreg free
  3237  012CF2  6E0D               	movwf	readChecksum@checkSumHighByte^0,c
  3238                           
  3239                           ;application.c: 417:     uint8_t checkSumLowByte = DATAEE_ReadByte(1);
  3240  012CF4  0E00               	movlw	0
  3241  012CF6  6E08               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  3242  012CF8  0E01               	movlw	1
  3243  012CFA  6E07               	movwf	DATAEE_ReadByte@bAdd^0,c
  3244  012CFC  EC7B  F097         	call	_DATAEE_ReadByte	;wreg free
  3245  012D00  6E0E               	movwf	readChecksum@checkSumLowByte^0,c
  3246  012D02                     
  3247                           ;application.c: 418:     return(((uint16_t)checkSumHighByte << 8) | checkSumLowByte);
  3248  012D02  500D               	movf	readChecksum@checkSumHighByte^0,w,c
  3249  012D04  6E0B               	movwf	??_readChecksum^0,c
  3250  012D06  500E               	movf	readChecksum@checkSumLowByte^0,w,c
  3251  012D08  6E09               	movwf	?_readChecksum^0,c
  3252  012D0A  C00B  F00A         	movff	??_readChecksum,?_readChecksum+1
  3253  012D0E  0012               	return		;funcret
  3254  012D10                     __end_of_readChecksum:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _DATAEE_ReadByte *****************
  3258 ;; Defined at:
  3259 ;;		line 259 in file "mcc_generated_files/memory.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  bAdd            2    6[COMRAM] unsigned short 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      unsigned char 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;Total ram usage:        2 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    4
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_InitialSetup
  3284 ;;		_readChecksum
  3285 ;;		_readDataPtr
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text22
  3290  012EF6                     __ptext22:
  3291                           	callstack 0
  3292  012EF6                     _DATAEE_ReadByte:
  3293                           	callstack 24
  3294  012EF6                     
  3295                           ;mcc_generated_files/memory.c: 259: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 260: {;mcc_generated_files/memory.c: 262:     NVMADRU = 0x31;
  3296  012EF6  0E31               	movlw	49
  3297  012EF8  6E7B               	movwf	123,c	;volatile
  3298                           
  3299                           ;mcc_generated_files/memory.c: 263:     NVMADRH = (uint8_t)((bAdd & 0xFF00) >> 8);
  3300  012EFA  5008               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  3301  012EFC  6E7A               	movwf	122,c	;volatile
  3302  012EFE                     
  3303                           ;mcc_generated_files/memory.c: 264:     NVMADRL = (uint8_t)(bAdd & 0x00FF);
  3304  012EFE  C007  FF79         	movff	DATAEE_ReadByte@bAdd,3961	;volatile
  3305  012F02                     
  3306                           ;mcc_generated_files/memory.c: 268:     NVMCON1bits.RD = 1;
  3307  012F02  8080               	bsf	128,0,c	;volsfr
  3308  012F04                     
  3309                           ;mcc_generated_files/memory.c: 269:     __nop();
  3310  012F04  F000               	nop	
  3311  012F06                     
  3312                           ;mcc_generated_files/memory.c: 270:     __nop();
  3313  012F06  F000               	nop	
  3314                           
  3315                           ;mcc_generated_files/memory.c: 272:     return (NVMDATL);
  3316  012F08  507C               	movf	124,w,c	;volatile
  3317  012F0A  0012               	return		;funcret
  3318  012F0C                     __end_of_DATAEE_ReadByte:
  3319                           	callstack 0
  3320                           
  3321 ;; *************** function _BLE2ClickSetup *****************
  3322 ;; Defined at:
  3323 ;;		line 19 in file "BLE2Click.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3341 ;;Total ram usage:        0 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    8
  3344 ;; This function calls:
  3345 ;;		_BLE2ClickGetstr
  3346 ;;		_BLE2_SendString
  3347 ;;		_BLE2_WakeModule
  3348 ;;		_EUSART1_Read
  3349 ;; This function is called by:
  3350 ;;		_InitialSetup
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text23
  3355  011F2C                     __ptext23:
  3356                           	callstack 0
  3357  011F2C                     _BLE2ClickSetup:
  3358                           	callstack 21
  3359  011F2C                     
  3360                           ;BLE2Click.c: 21:     BLE2_WakeModule();
  3361  011F2C  EC28  F098         	call	_BLE2_WakeModule	;wreg free
  3362  011F30                     
  3363                           ;BLE2Click.c: 22:     BLE2ClickGetstr();
  3364  011F30  ECCE  F090         	call	_BLE2ClickGetstr	;wreg free
  3365  011F34                     
  3366                           ;BLE2Click.c: 24:     BLE2_SendString(cmd_factoryreset);
  3367  011F34  0EE1               	movlw	low _cmd_factoryreset
  3368  011F36  6E0E               	movwf	BLE2_SendString@command^0,c
  3369  011F38  0EFF               	movlw	high _cmd_factoryreset
  3370  011F3A  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  3371  011F3C  EC46  F097         	call	_BLE2_SendString	;wreg free
  3372  011F40                     
  3373                           ;BLE2Click.c: 25:     BLE2ClickGetstr();
  3374  011F40  ECCE  F090         	call	_BLE2ClickGetstr	;wreg free
  3375  011F44                     
  3376                           ;BLE2Click.c: 27:     BLE2_SendString(cmd_userdefineprofile);
  3377  011F44  0EC9               	movlw	low _cmd_userdefineprofile
  3378  011F46  6E0E               	movwf	BLE2_SendString@command^0,c
  3379  011F48  0EFF               	movlw	high _cmd_userdefineprofile
  3380  011F4A  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  3381  011F4C  EC46  F097         	call	_BLE2_SendString	;wreg free
  3382  011F50                     
  3383                           ;BLE2Click.c: 28:     BLE2ClickGetstr();
  3384  011F50  ECCE  F090         	call	_BLE2ClickGetstr	;wreg free
  3385  011F54                     
  3386                           ;BLE2Click.c: 30:     BLE2_SendString(cmd_peripheral);
  3387  011F54  0EBB               	movlw	low _cmd_peripheral
  3388  011F56  6E0E               	movwf	BLE2_SendString@command^0,c
  3389  011F58  0EFF               	movlw	high _cmd_peripheral
  3390  011F5A  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  3391  011F5C  EC46  F097         	call	_BLE2_SendString	;wreg free
  3392  011F60                     
  3393                           ;BLE2Click.c: 31:     BLE2ClickGetstr();
  3394  011F60  ECCE  F090         	call	_BLE2ClickGetstr	;wreg free
  3395  011F64                     
  3396                           ;BLE2Click.c: 33:     BLE2_SendString(cmd_cleanprivateservice);
  3397  011F64  0EEE               	movlw	low _cmd_cleanprivateservice
  3398  011F66  6E0E               	movwf	BLE2_SendString@command^0,c
  3399  011F68  0EFF               	movlw	high _cmd_cleanprivateservice
  3400  011F6A  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  3401  011F6C  EC46  F097         	call	_BLE2_SendString	;wreg free
  3402  011F70                     
  3403                           ;BLE2Click.c: 34:     BLE2ClickGetstr();
  3404  011F70  ECCE  F090         	call	_BLE2ClickGetstr	;wreg free
  3405  011F74                     
  3406                           ;BLE2Click.c: 36:     BLE2_SendString(cmd_UUID);
  3407  011F74  0E86               	movlw	low _cmd_UUID
  3408  011F76  6E0E               	movwf	BLE2_SendString@command^0,c
  3409  011F78  0EFF               	movlw	high _cmd_UUID
  3410  011F7A  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  3411  011F7C  EC46  F097         	call	_BLE2_SendString	;wreg free
  3412  011F80                     
  3413                           ;BLE2Click.c: 37:     BLE2ClickGetstr();
  3414  011F80  ECCE  F090         	call	_BLE2ClickGetstr	;wreg free
  3415  011F84                     
  3416                           ;BLE2Click.c: 39:     BLE2_SendString(cmd_adc_write);
  3417  011F84  0E34               	movlw	low _cmd_adc_write
  3418  011F86  6E0E               	movwf	BLE2_SendString@command^0,c
  3419  011F88  0EFF               	movlw	high _cmd_adc_write
  3420  011F8A  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  3421  011F8C  EC46  F097         	call	_BLE2_SendString	;wreg free
  3422  011F90                     
  3423                           ;BLE2Click.c: 40:     BLE2ClickGetstr();
  3424  011F90  ECCE  F090         	call	_BLE2ClickGetstr	;wreg free
  3425  011F94                     
  3426                           ;BLE2Click.c: 42:     BLE2_SendString(cmd_adc_read);
  3427  011F94  0E08               	movlw	low _cmd_adc_read
  3428  011F96  6E0E               	movwf	BLE2_SendString@command^0,c
  3429  011F98  0EFF               	movlw	high _cmd_adc_read
  3430  011F9A  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  3431  011F9C  EC46  F097         	call	_BLE2_SendString	;wreg free
  3432  011FA0                     
  3433                           ;BLE2Click.c: 43:     BLE2ClickGetstr();
  3434  011FA0  ECCE  F090         	call	_BLE2ClickGetstr	;wreg free
  3435  011FA4                     
  3436                           ;BLE2Click.c: 45:     BLE2_SendString(cmd_reboot);
  3437  011FA4  0EE8               	movlw	low _cmd_reboot
  3438  011FA6  6E0E               	movwf	BLE2_SendString@command^0,c
  3439  011FA8  0EFF               	movlw	high _cmd_reboot
  3440  011FAA  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  3441  011FAC  EC46  F097         	call	_BLE2_SendString	;wreg free
  3442  011FB0                     
  3443                           ;BLE2Click.c: 46:     BLE2ClickGetstr();
  3444  011FB0  ECCE  F090         	call	_BLE2ClickGetstr	;wreg free
  3445  011FB4                     
  3446                           ;BLE2Click.c: 47:     uart[BLE2].Read();
  3447  011FB4  0EB3               	movlw	low _uart
  3448  011FB6  6EF6               	movwf	tblptrl,c
  3449  011FB8                     	if	1	;There is more than 1 active tblptr byte
  3450  011FB8  0EFE               	movlw	high _uart
  3451  011FBA  6EF7               	movwf	tblptrh,c
  3452  011FBC                     	endif
  3453  011FBC                     	if	1	;There are 3 active tblptr bytes
  3454  011FBC  0E00               	movlw	low (_uart shr (0+16))
  3455  011FBE  6EF8               	movwf	tblptru,c
  3456  011FC0                     	endif
  3457  011FC0  D802               	call	u6508
  3458  011FC2  EFF0  F08F         	goto	u6509
  3459  011FC6                     u6508:
  3460  011FC6  0005               	push	
  3461  011FC8  6EFA               	movwf	pclath,c
  3462  011FCA  0009               	tblrd		*+
  3463  011FCC  50F5               	movf	tablat,w,c
  3464  011FCE  6EFD               	movwf	tosl,c
  3465  011FD0  0009               	tblrd		*+
  3466  011FD2  50F5               	movf	tablat,w,c
  3467  011FD4  6EFE               	movwf	tosh,c
  3468  011FD6  0009               	tblrd		*+
  3469  011FD8  50F5               	movf	tablat,w,c
  3470  011FDA  6EFF               	movwf	tosu,c
  3471  011FDC  50FA               	movf	pclath,w,c
  3472  011FDE  0012               	return		;indir
  3473  011FE0                     u6509:
  3474  011FE0                     
  3475                           ;BLE2Click.c: 48:     BLE2ClickGetstr();
  3476  011FE0  ECCE  F090         	call	_BLE2ClickGetstr	;wreg free
  3477  011FE4  0012               	return		;funcret
  3478  011FE6                     __end_of_BLE2ClickSetup:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _BLE2_WakeModule *****************
  3482 ;; Defined at:
  3483 ;;		line 51 in file "mcc_generated_files/BLE2_driver.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		None
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    4
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_BLE2ClickSetup
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text24
  3512  013050                     __ptext24:
  3513                           	callstack 0
  3514  013050                     _BLE2_WakeModule:
  3515                           	callstack 24
  3516  013050                     
  3517                           ;mcc_generated_files/BLE2_driver.c: 53:     LATAbits.LATA7 = 1;
  3518  013050  8E82               	bsf	130,7,c	;volatile
  3519  013052  0012               	return		;funcret
  3520  013054                     __end_of_BLE2_WakeModule:
  3521                           	callstack 0
  3522                           
  3523 ;; *************** function _ADCCSetSensorPin *****************
  3524 ;; Defined at:
  3525 ;;		line 368 in file "application.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  adcPin          1    wreg     unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  adcPin          1    6[COMRAM] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3543 ;;Total ram usage:        1 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    4
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_InitialSetup
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text25
  3554  013008                     __ptext25:
  3555                           	callstack 0
  3556  013008                     _ADCCSetSensorPin:
  3557                           	callstack 25
  3558                           
  3559                           ;incstack = 0
  3560                           ;ADCCSetSensorPin@adcPin stored from wreg
  3561  013008  6E07               	movwf	ADCCSetSensorPin@adcPin^0,c
  3562  01300A                     
  3563                           ;application.c: 369:     ADPCH = adcPin;
  3564  01300A  C007  FF5A         	movff	ADCCSetSensorPin@adcPin,3930	;volatile
  3565  01300E  0012               	return		;funcret
  3566  013010                     __end_of_ADCCSetSensorPin:
  3567                           	callstack 0
  3568                           
  3569 ;; *************** function _ApplicationTask *****************
  3570 ;; Defined at:
  3571 ;;		line 39 in file "application.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  adcValue        2   49[BANK0 ] unsigned short 
  3576 ;;  connection_e    1   48[BANK0 ] _Bool 
  3577 ;;  connection_d    1   47[BANK0 ] _Bool 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3588 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;Total ram usage:        4 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:   15
  3594 ;; This function calls:
  3595 ;;		_ADCC_GetConversionResult
  3596 ;;		_ADCC_GetFilterValue
  3597 ;;		_BLE2ClickGetstr
  3598 ;;		_CRCBurstMode
  3599 ;;		_CRCInitializeBurstMode
  3600 ;;		_CRCInitializePeekMode
  3601 ;;		_CRC_CalculatedResultGet
  3602 ;;		_CRC_SCAN_HasScanCompleted
  3603 ;;		_CRC_SCAN_StopScanner
  3604 ;;		_EUSART1_is_rx_ready
  3605 ;;		_LogDataToPFM
  3606 ;;		_StartCRCPeekMode
  3607 ;;		_TMR0_StartTimer
  3608 ;;		_TMR0_StopTimer
  3609 ;;		_TMR0_WriteTimer
  3610 ;;		_TMR1_Reload
  3611 ;;		_TMR1_StartTimer
  3612 ;;		___fldiv
  3613 ;;		___flmul
  3614 ;;		___fltol
  3615 ;;		___xxtofl
  3616 ;;		_processADCCommand
  3617 ;;		_sendADCCValueBLE
  3618 ;;		_strcmp
  3619 ;;		_strncmp
  3620 ;;		_writeChecksum
  3621 ;; This function is called by:
  3622 ;;		_main
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text26
  3627  01042A                     __ptext26:
  3628                           	callstack 0
  3629  01042A                     _ApplicationTask:
  3630                           	callstack 15
  3631  01042A                     
  3632                           ;application.c: 42:     _Bool connection_end = 0;
  3633  01042A  0E00               	movlw	0
  3634  01042C  0100               	movlb	0	; () banked
  3635  01042E  6FDF               	movwf	ApplicationTask@connection_end& (0+255),b
  3636  010430                     
  3637                           ; BSR set to: 0
  3638                           ;application.c: 44:     uint16_t adcValue;;application.c: 47:     if(uart[BLE2].DataRead
      +                          y()) {
  3639  010430  0EBC               	movlw	low (_uart+9)
  3640  010432  6EF6               	movwf	tblptrl,c
  3641  010434  0EFE               	movlw	high (_uart+9)
  3642  010436  6EF7               	movwf	tblptrh,c
  3643  010438                     	if	0	;tblptru may be non-zero
  3644  010438                     	endif
  3645  010438                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3646  010438  0E00               	movlw	low (__mediumconst shr (0+16))
  3647  01043A  6EF8               	movwf	tblptru,c
  3648  01043C                     	endif
  3649  01043C  D802               	call	u6588
  3650  01043E  EF2E  F082         	goto	u6589
  3651  010442                     u6588:
  3652  010442  0005               	push	
  3653  010444  6EFA               	movwf	pclath,c
  3654  010446  0009               	tblrd		*+
  3655  010448  50F5               	movf	tablat,w,c
  3656  01044A  6EFD               	movwf	tosl,c
  3657  01044C  0009               	tblrd		*+
  3658  01044E  50F5               	movf	tablat,w,c
  3659  010450  6EFE               	movwf	tosh,c
  3660  010452  0009               	tblrd		*+
  3661  010454  50F5               	movf	tablat,w,c
  3662  010456  6EFF               	movwf	tosu,c
  3663  010458  50FA               	movf	pclath,w,c
  3664  01045A  0012               	return		;indir
  3665  01045C                     u6589:
  3666  01045C  0900               	iorlw	0
  3667  01045E  B4D8               	btfsc	status,2,c
  3668  010460  EF34  F082         	goto	u6591
  3669  010464  EF36  F082         	goto	u6590
  3670  010468                     u6591:
  3671  010468  EFB3  F082         	goto	l7213
  3672  01046C                     u6590:
  3673  01046C                     
  3674                           ;application.c: 49:         BLE2ClickGetstr();
  3675  01046C  ECCE  F090         	call	_BLE2ClickGetstr	;wreg free
  3676  010470                     
  3677                           ;application.c: 51:         if(!connection_status) {
  3678  010470  0100               	movlb	0	; () banked
  3679  010472  5189               	movf	_connection_status& (0+255),w,b	;volatile
  3680  010474  A4D8               	btfss	status,2,c
  3681  010476  EF3F  F082         	goto	u6601
  3682  01047A  EF41  F082         	goto	u6600
  3683  01047E                     u6601:
  3684  01047E  EF58  F082         	goto	l7197
  3685  010482                     u6600:
  3686  010482                     
  3687                           ; BSR set to: 0
  3688                           ;application.c: 52:             connection_status=strcmp(buf,resp_conn) ? 0 : 1;
  3689  010482  0E00               	movlw	low _buf
  3690  010484  6E07               	movwf	strcmp@l^0,c
  3691  010486  0E01               	movlw	high _buf
  3692  010488  6E08               	movwf	(strcmp@l+1)^0,c
  3693  01048A  0ED7               	movlw	low _resp_conn
  3694  01048C  6E09               	movwf	strcmp@r^0,c
  3695  01048E  0EFF               	movlw	high _resp_conn
  3696  010490  6E0A               	movwf	(strcmp@r+1)^0,c
  3697  010492  EC55  F091         	call	_strcmp	;wreg free
  3698  010496  5007               	movf	?_strcmp^0,w,c
  3699  010498  1008               	iorwf	(?_strcmp+1)^0,w,c
  3700  01049A  B4D8               	btfsc	status,2,c
  3701  01049C  EF52  F082         	goto	u6611
  3702  0104A0  EF55  F082         	goto	u6610
  3703  0104A4                     u6611:
  3704  0104A4  0E01               	movlw	1
  3705  0104A6  EF56  F082         	goto	u6620
  3706  0104AA                     u6610:
  3707  0104AA  0E00               	movlw	0
  3708  0104AC                     u6620:
  3709  0104AC  0100               	movlb	0	; () banked
  3710  0104AE  6F89               	movwf	_connection_status& (0+255),b	;volatile
  3711  0104B0                     l7197:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;application.c: 55:         if(connection_status) {
  3715  0104B0  5189               	movf	_connection_status& (0+255),w,b	;volatile
  3716  0104B2  B4D8               	btfsc	status,2,c
  3717  0104B4  EF5E  F082         	goto	u6631
  3718  0104B8  EF60  F082         	goto	u6630
  3719  0104BC                     u6631:
  3720  0104BC  EFB3  F082         	goto	l7213
  3721  0104C0                     u6630:
  3722  0104C0                     
  3723                           ; BSR set to: 0
  3724                           ;application.c: 56:             connection_end=strcmp(buf,resp_conn_end) ? 0 : 1;
  3725  0104C0  0E00               	movlw	low _buf
  3726  0104C2  6E07               	movwf	strcmp@l^0,c
  3727  0104C4  0E01               	movlw	high _buf
  3728  0104C6  6E08               	movwf	(strcmp@l+1)^0,c
  3729  0104C8  0EAC               	movlw	low _resp_conn_end
  3730  0104CA  6E09               	movwf	strcmp@r^0,c
  3731  0104CC  0EFF               	movlw	high _resp_conn_end
  3732  0104CE  6E0A               	movwf	(strcmp@r+1)^0,c
  3733  0104D0  EC55  F091         	call	_strcmp	;wreg free
  3734  0104D4  5007               	movf	?_strcmp^0,w,c
  3735  0104D6  1008               	iorwf	(?_strcmp+1)^0,w,c
  3736  0104D8  B4D8               	btfsc	status,2,c
  3737  0104DA  EF71  F082         	goto	u6641
  3738  0104DE  EF74  F082         	goto	u6640
  3739  0104E2                     u6641:
  3740  0104E2  0E01               	movlw	1
  3741  0104E4  EF75  F082         	goto	u6650
  3742  0104E8                     u6640:
  3743  0104E8  0E00               	movlw	0
  3744  0104EA                     u6650:
  3745  0104EA  0100               	movlb	0	; () banked
  3746  0104EC  6FDF               	movwf	ApplicationTask@connection_end& (0+255),b
  3747                           
  3748                           ;application.c: 57:             connection_data=strncmp(buf,resp_conn_data,2) ? 0 : 1;
  3749  0104EE  0E00               	movlw	low _buf
  3750  0104F0  6E07               	movwf	strncmp@_l^0,c
  3751  0104F2  0E01               	movlw	high _buf
  3752  0104F4  6E08               	movwf	(strncmp@_l+1)^0,c
  3753  0104F6  0EF3               	movlw	low _resp_conn_data
  3754  0104F8  6E09               	movwf	strncmp@_r^0,c
  3755  0104FA  0EFF               	movlw	high _resp_conn_data
  3756  0104FC  6E0A               	movwf	(strncmp@_r+1)^0,c
  3757  0104FE  0E00               	movlw	0
  3758  010500  6E0C               	movwf	(strncmp@n+1)^0,c
  3759  010502  0E02               	movlw	2
  3760  010504  6E0B               	movwf	strncmp@n^0,c
  3761  010506  ECFC  F08D         	call	_strncmp	;wreg free
  3762  01050A  5007               	movf	?_strncmp^0,w,c
  3763  01050C  1008               	iorwf	(?_strncmp+1)^0,w,c
  3764  01050E  B4D8               	btfsc	status,2,c
  3765  010510  EF8C  F082         	goto	u6661
  3766  010514  EF8F  F082         	goto	u6660
  3767  010518                     u6661:
  3768  010518  0E01               	movlw	1
  3769  01051A  EF90  F082         	goto	u6670
  3770  01051E                     u6660:
  3771  01051E  0E00               	movlw	0
  3772  010520                     u6670:
  3773  010520  0100               	movlb	0	; () banked
  3774  010522  6FDE               	movwf	ApplicationTask@connection_data& (0+255),b
  3775  010524                     
  3776                           ; BSR set to: 0
  3777                           ;application.c: 59:             if(connection_end) {
  3778  010524  51DF               	movf	ApplicationTask@connection_end& (0+255),w,b
  3779  010526  B4D8               	btfsc	status,2,c
  3780  010528  EF98  F082         	goto	u6681
  3781  01052C  EF9A  F082         	goto	u6680
  3782  010530                     u6681:
  3783  010530  EFA7  F082         	goto	l7209
  3784  010534                     u6680:
  3785  010534                     
  3786                           ; BSR set to: 0
  3787                           ;application.c: 61:                 timer1ReloadVal = 0xE1BA;
  3788  010534  0EE1               	movlw	225
  3789  010536  6FFB               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  3790  010538  0EBA               	movlw	186
  3791  01053A  6FFA               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  3792  01053C                     
  3793                           ; BSR set to: 0
  3794                           ;application.c: 62:                 TMR1_Reload();
  3795  01053C  ECF2  F097         	call	_TMR1_Reload	;wreg free
  3796                           
  3797                           ;application.c: 63:                 TMR1_StartTimer();
  3798  010540  EC2C  F098         	call	_TMR1_StartTimer	;wreg free
  3799  010544                     
  3800                           ;application.c: 64:                 connection_status=0;
  3801  010544  0E00               	movlw	0
  3802  010546  0100               	movlb	0	; () banked
  3803  010548  6F89               	movwf	_connection_status& (0+255),b	;volatile
  3804                           
  3805                           ;application.c: 66:             }else if(connection_data){
  3806  01054A  EFB3  F082         	goto	l7213
  3807  01054E                     l7209:
  3808                           
  3809                           ; BSR set to: 0
  3810  01054E  51DE               	movf	ApplicationTask@connection_data& (0+255),w,b
  3811  010550  B4D8               	btfsc	status,2,c
  3812  010552  EFAD  F082         	goto	u6691
  3813  010556  EFAF  F082         	goto	u6690
  3814  01055A                     u6691:
  3815  01055A  EFB3  F082         	goto	l1131
  3816  01055E                     u6690:
  3817  01055E                     
  3818                           ; BSR set to: 0
  3819                           ;application.c: 67:                 processADCCommand();
  3820  01055E  EC97  F087         	call	_processADCCommand	;wreg free
  3821  010562  EFB3  F082         	goto	l7213
  3822  010566                     l1131:
  3823  010566                     l7213:
  3824                           
  3825                           ;application.c: 72:     if(connection_status && adcReadyFlag) {
  3826  010566  0100               	movlb	0	; () banked
  3827  010568  5189               	movf	_connection_status& (0+255),w,b	;volatile
  3828  01056A  B4D8               	btfsc	status,2,c
  3829  01056C  EFBA  F082         	goto	u6701
  3830  010570  EFBC  F082         	goto	u6700
  3831  010574                     u6701:
  3832  010574  EF1D  F083         	goto	l7227
  3833  010578                     u6700:
  3834  010578                     
  3835                           ; BSR set to: 0
  3836  010578  5188               	movf	_adcReadyFlag& (0+255),w,b	;volatile
  3837  01057A  B4D8               	btfsc	status,2,c
  3838  01057C  EFC2  F082         	goto	u6711
  3839  010580  EFC4  F082         	goto	u6710
  3840  010584                     u6711:
  3841  010584  EF1D  F083         	goto	l7227
  3842  010588                     u6710:
  3843  010588                     
  3844                           ; BSR set to: 0
  3845                           ;application.c: 73:         adcReadyFlag = 0;
  3846  010588  0E00               	movlw	0
  3847  01058A  6F88               	movwf	_adcReadyFlag& (0+255),b	;volatile
  3848                           
  3849                           ;application.c: 74:         if(burstMode) {
  3850  01058C  5187               	movf	_burstMode& (0+255),w,b	;volatile
  3851  01058E  B4D8               	btfsc	status,2,c
  3852  010590  EFCC  F082         	goto	u6721
  3853  010594  EFCE  F082         	goto	u6720
  3854  010598                     u6721:
  3855  010598  EFD6  F082         	goto	l7221
  3856  01059C                     u6720:
  3857  01059C                     
  3858                           ; BSR set to: 0
  3859                           ;application.c: 76:             adcValue = ADCC_GetFilterValue();
  3860  01059C  ECB0  F097         	call	_ADCC_GetFilterValue	;wreg free
  3861  0105A0  C007  F0E0         	movff	?_ADCC_GetFilterValue,ApplicationTask@adcValue
  3862  0105A4  C008  F0E1         	movff	?_ADCC_GetFilterValue+1,ApplicationTask@adcValue+1
  3863                           
  3864                           ;application.c: 77:         } else {
  3865  0105A8  EFDC  F082         	goto	l7223
  3866  0105AC                     l7221:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;application.c: 79:             adcValue = ADCC_GetConversionResult();
  3870  0105AC  EC91  F097         	call	_ADCC_GetConversionResult	;wreg free
  3871  0105B0  C007  F0E0         	movff	?_ADCC_GetConversionResult,ApplicationTask@adcValue
  3872  0105B4  C008  F0E1         	movff	?_ADCC_GetConversionResult+1,ApplicationTask@adcValue+1
  3873  0105B8                     l7223:
  3874                           
  3875                           ;application.c: 81:         adcValue = (float)adcValue / 676 * 100;
  3876  0105B8  0E00               	movlw	0
  3877  0105BA  6E32               	movwf	___flmul@a^0,c
  3878  0105BC  0E00               	movlw	0
  3879  0105BE  6E33               	movwf	(___flmul@a+1)^0,c
  3880  0105C0  0EC8               	movlw	200
  3881  0105C2  6E34               	movwf	(___flmul@a+2)^0,c
  3882  0105C4  0E42               	movlw	66
  3883  0105C6  6E35               	movwf	(___flmul@a+3)^0,c
  3884  0105C8  0E00               	movlw	0
  3885  0105CA  6E19               	movwf	___fldiv@a^0,c
  3886  0105CC  0E00               	movlw	0
  3887  0105CE  6E1A               	movwf	(___fldiv@a+1)^0,c
  3888  0105D0  0E29               	movlw	41
  3889  0105D2  6E1B               	movwf	(___fldiv@a+2)^0,c
  3890  0105D4  0E44               	movlw	68
  3891  0105D6  6E1C               	movwf	(___fldiv@a+3)^0,c
  3892  0105D8  C0E0  F007         	movff	ApplicationTask@adcValue,___xxtofl@val
  3893  0105DC  C0E1  F008         	movff	ApplicationTask@adcValue+1,___xxtofl@val+1
  3894  0105E0  6A09               	clrf	(___xxtofl@val+2)^0,c
  3895  0105E2  6A0A               	clrf	(___xxtofl@val+3)^0,c
  3896  0105E4  0E00               	movlw	0
  3897  0105E6  ECA4  F08A         	call	___xxtofl
  3898  0105EA  C007  F015         	movff	?___xxtofl,___fldiv@b
  3899  0105EE  C008  F016         	movff	?___xxtofl+1,___fldiv@b+1
  3900  0105F2  C009  F017         	movff	?___xxtofl+2,___fldiv@b+2
  3901  0105F6  C00A  F018         	movff	?___xxtofl+3,___fldiv@b+3
  3902  0105FA  ECCA  F085         	call	___fldiv	;wreg free
  3903  0105FE  C015  F02E         	movff	?___fldiv,___flmul@b
  3904  010602  C016  F02F         	movff	?___fldiv+1,___flmul@b+1
  3905  010606  C017  F030         	movff	?___fldiv+2,___flmul@b+2
  3906  01060A  C018  F031         	movff	?___fldiv+3,___flmul@b+3
  3907  01060E  EC00  F080         	call	___flmul	;wreg free
  3908  010612  C02E  F047         	movff	?___flmul,___fltol@f1
  3909  010616  C02F  F048         	movff	?___flmul+1,___fltol@f1+1
  3910  01061A  C030  F049         	movff	?___flmul+2,___fltol@f1+2
  3911  01061E  C031  F04A         	movff	?___flmul+3,___fltol@f1+3
  3912  010622  EC03  F08D         	call	___fltol	;wreg free
  3913  010626  C047  F0E0         	movff	?___fltol,ApplicationTask@adcValue
  3914  01062A  C048  F0E1         	movff	?___fltol+1,ApplicationTask@adcValue+1
  3915  01062E                     
  3916                           ;application.c: 82:         sendADCCValueBLE(adcValue);
  3917  01062E  C0E0  F0D6         	movff	ApplicationTask@adcValue,sendADCCValueBLE@adcValue
  3918  010632  C0E1  F0D7         	movff	ApplicationTask@adcValue+1,sendADCCValueBLE@adcValue+1
  3919  010636  EC91  F091         	call	_sendADCCValueBLE	;wreg free
  3920  01063A                     l7227:
  3921                           
  3922                           ;application.c: 85:     if(connection_status && flashCrcErrorStatus) {
  3923  01063A  0100               	movlb	0	; () banked
  3924  01063C  5189               	movf	_connection_status& (0+255),w,b	;volatile
  3925  01063E  B4D8               	btfsc	status,2,c
  3926  010640  EF24  F083         	goto	u6731
  3927  010644  EF26  F083         	goto	u6730
  3928  010648                     u6731:
  3929  010648  EF61  F083         	goto	l7245
  3930  01064C                     u6730:
  3931  01064C                     
  3932                           ; BSR set to: 0
  3933  01064C  5184               	movf	_flashCrcErrorStatus& (0+255),w,b	;volatile
  3934  01064E  B4D8               	btfsc	status,2,c
  3935  010650  EF2C  F083         	goto	u6741
  3936  010654  EF2E  F083         	goto	u6740
  3937  010658                     u6741:
  3938  010658  EF61  F083         	goto	l7245
  3939  01065C                     u6740:
  3940  01065C                     
  3941                           ; BSR set to: 0
  3942                           ;application.c: 87:         NVMCON0bits.NVMERR = 0;
  3943  01065C  987F               	bcf	127,4,c	;volatile
  3944  01065E                     
  3945                           ; BSR set to: 0
  3946                           ;application.c: 88:         if(flashCrcErrorStatus == 1) {
  3947  01065E  0584               	decf	_flashCrcErrorStatus& (0+255),w,b	;volatile
  3948  010660  A4D8               	btfss	status,2,c
  3949  010662  EF35  F083         	goto	u6751
  3950  010666  EF37  F083         	goto	u6750
  3951  01066A                     u6751:
  3952  01066A  EF3F  F083         	goto	l7237
  3953  01066E                     u6750:
  3954  01066E                     
  3955                           ; BSR set to: 0
  3956                           ;application.c: 89:             sendADCCValueBLE(2000);
  3957  01066E  0E07               	movlw	7
  3958  010670  6FD7               	movwf	(sendADCCValueBLE@adcValue+1)& (0+255),b
  3959  010672  0ED0               	movlw	208
  3960  010674  6FD6               	movwf	sendADCCValueBLE@adcValue& (0+255),b
  3961  010676  EC91  F091         	call	_sendADCCValueBLE	;wreg free
  3962                           
  3963                           ;application.c: 90:         } else if(flashCrcErrorStatus == 3) {
  3964  01067A  EF61  F083         	goto	l7245
  3965  01067E                     l7237:
  3966                           
  3967                           ; BSR set to: 0
  3968  01067E  0E03               	movlw	3
  3969  010680  1984               	xorwf	_flashCrcErrorStatus& (0+255),w,b	;volatile
  3970  010682  A4D8               	btfss	status,2,c
  3971  010684  EF46  F083         	goto	u6761
  3972  010688  EF48  F083         	goto	u6760
  3973  01068C                     u6761:
  3974  01068C  EF50  F083         	goto	l7241
  3975  010690                     u6760:
  3976  010690                     
  3977                           ; BSR set to: 0
  3978                           ;application.c: 91:             sendADCCValueBLE(3000);
  3979  010690  0E0B               	movlw	11
  3980  010692  6FD7               	movwf	(sendADCCValueBLE@adcValue+1)& (0+255),b
  3981  010694  0EB8               	movlw	184
  3982  010696  6FD6               	movwf	sendADCCValueBLE@adcValue& (0+255),b
  3983  010698  EC91  F091         	call	_sendADCCValueBLE	;wreg free
  3984                           
  3985                           ;application.c: 92:         } else if(flashCrcErrorStatus == 5) {
  3986  01069C  EF61  F083         	goto	l7245
  3987  0106A0                     l7241:
  3988                           
  3989                           ; BSR set to: 0
  3990  0106A0  0E05               	movlw	5
  3991  0106A2  1984               	xorwf	_flashCrcErrorStatus& (0+255),w,b	;volatile
  3992  0106A4  A4D8               	btfss	status,2,c
  3993  0106A6  EF57  F083         	goto	u6771
  3994  0106AA  EF59  F083         	goto	u6770
  3995  0106AE                     u6771:
  3996  0106AE  EF61  F083         	goto	l1140
  3997  0106B2                     u6770:
  3998  0106B2                     
  3999                           ; BSR set to: 0
  4000                           ;application.c: 93:             sendADCCValueBLE(4000);
  4001  0106B2  0E0F               	movlw	15
  4002  0106B4  6FD7               	movwf	(sendADCCValueBLE@adcValue+1)& (0+255),b
  4003  0106B6  0EA0               	movlw	160
  4004  0106B8  6FD6               	movwf	sendADCCValueBLE@adcValue& (0+255),b
  4005  0106BA  EC91  F091         	call	_sendADCCValueBLE	;wreg free
  4006  0106BE  EF61  F083         	goto	l7245
  4007  0106C2                     l1140:
  4008  0106C2                     l7245:
  4009                           
  4010                           ;application.c: 97:     if((!connection_status) && adcReadyFlag) {
  4011  0106C2  0100               	movlb	0	; () banked
  4012  0106C4  5189               	movf	_connection_status& (0+255),w,b	;volatile
  4013  0106C6  A4D8               	btfss	status,2,c
  4014  0106C8  EF68  F083         	goto	u6781
  4015  0106CC  EF6A  F083         	goto	u6780
  4016  0106D0                     u6781:
  4017  0106D0  EFB1  F083         	goto	l7275
  4018  0106D4                     u6780:
  4019  0106D4                     
  4020                           ; BSR set to: 0
  4021  0106D4  5188               	movf	_adcReadyFlag& (0+255),w,b	;volatile
  4022  0106D6  B4D8               	btfsc	status,2,c
  4023  0106D8  EF70  F083         	goto	u6791
  4024  0106DC  EF72  F083         	goto	u6790
  4025  0106E0                     u6791:
  4026  0106E0  EFB1  F083         	goto	l7275
  4027  0106E4                     u6790:
  4028  0106E4                     
  4029                           ; BSR set to: 0
  4030                           ;application.c: 98:         adcReadyFlag = 0;
  4031  0106E4  0E00               	movlw	0
  4032  0106E6  6F88               	movwf	_adcReadyFlag& (0+255),b	;volatile
  4033                           
  4034                           ;application.c: 99:         if(burstMode) {
  4035  0106E8  5187               	movf	_burstMode& (0+255),w,b	;volatile
  4036  0106EA  B4D8               	btfsc	status,2,c
  4037  0106EC  EF7A  F083         	goto	u6801
  4038  0106F0  EF7C  F083         	goto	u6800
  4039  0106F4                     u6801:
  4040  0106F4  EF84  F083         	goto	l7253
  4041  0106F8                     u6800:
  4042  0106F8                     
  4043                           ; BSR set to: 0
  4044                           ;application.c: 100:             adcValue = ADCC_GetFilterValue();
  4045  0106F8  ECB0  F097         	call	_ADCC_GetFilterValue	;wreg free
  4046  0106FC  C007  F0E0         	movff	?_ADCC_GetFilterValue,ApplicationTask@adcValue
  4047  010700  C008  F0E1         	movff	?_ADCC_GetFilterValue+1,ApplicationTask@adcValue+1
  4048                           
  4049                           ;application.c: 101:         } else {
  4050  010704  EF8A  F083         	goto	l7255
  4051  010708                     l7253:
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;application.c: 102:             adcValue = ADCC_GetConversionResult();
  4055  010708  EC91  F097         	call	_ADCC_GetConversionResult	;wreg free
  4056  01070C  C007  F0E0         	movff	?_ADCC_GetConversionResult,ApplicationTask@adcValue
  4057  010710  C008  F0E1         	movff	?_ADCC_GetConversionResult+1,ApplicationTask@adcValue+1
  4058  010714                     l7255:
  4059                           
  4060                           ;application.c: 105:         TMR0_StopTimer();
  4061  010714  EC2E  F098         	call	_TMR0_StopTimer	;wreg free
  4062  010718                     
  4063                           ;application.c: 106:         TMR0_WriteTimer(0x00);
  4064  010718  0E00               	movlw	0
  4065  01071A  EC0C  F098         	call	_TMR0_WriteTimer
  4066  01071E                     
  4067                           ;application.c: 107:         CRC_SCAN_StopScanner();
  4068  01071E  EC10  F098         	call	_CRC_SCAN_StopScanner	;wreg free
  4069  010722                     
  4070                           ;application.c: 108:         isCRCPeekEnabled = 0;
  4071  010722  0E00               	movlw	0
  4072  010724  0100               	movlb	0	; () banked
  4073  010726  6F86               	movwf	_isCRCPeekEnabled& (0+255),b	;volatile
  4074  010728                     
  4075                           ; BSR set to: 0
  4076                           ;application.c: 109:         LogDataToPFM(adcValue);
  4077  010728  C0E0  F016         	movff	ApplicationTask@adcValue,LogDataToPFM@adcValue
  4078  01072C  C0E1  F017         	movff	ApplicationTask@adcValue+1,LogDataToPFM@adcValue+1
  4079  010730  ECCD  F091         	call	_LogDataToPFM	;wreg free
  4080  010734                     
  4081                           ;application.c: 111:         CRCInitializeBurstMode();
  4082  010734  ECA6  F097         	call	_CRCInitializeBurstMode	;wreg free
  4083  010738                     
  4084                           ;application.c: 113:         CRCBurstMode();
  4085  010738  ECF3  F094         	call	_CRCBurstMode	;wreg free
  4086  01073C                     
  4087                           ;application.c: 115:         crcValBurst = CRC_CalculatedResultGet(0, 0x0000);
  4088  01073C  0E00               	movlw	0
  4089  01073E  6E0F               	movwf	(CRC_CalculatedResultGet@xorValue+1)^0,c
  4090  010740  0E00               	movlw	0
  4091  010742  6E0E               	movwf	CRC_CalculatedResultGet@xorValue^0,c
  4092  010744  0E00               	movlw	0
  4093  010746  EC86  F08D         	call	_CRC_CalculatedResultGet
  4094  01074A  C00E  F080         	movff	?_CRC_CalculatedResultGet,_crcValBurst	;volatile
  4095  01074E  C00F  F081         	movff	?_CRC_CalculatedResultGet+1,_crcValBurst+1	;volatile
  4096  010752                     
  4097                           ;application.c: 116:         writeChecksum(crcValBurst);
  4098  010752  C080  F00B         	movff	_crcValBurst,writeChecksum@checksum	;volatile
  4099  010756  C081  F00C         	movff	_crcValBurst+1,writeChecksum@checksum+1	;volatile
  4100  01075A  EC14  F097         	call	_writeChecksum	;wreg free
  4101  01075E                     
  4102                           ;application.c: 118:         TMR0_StartTimer();
  4103  01075E  EC30  F098         	call	_TMR0_StartTimer	;wreg free
  4104  010762                     l7275:
  4105                           
  4106                           ;application.c: 121:     if(tmr0InterruptFlag) {
  4107  010762  0100               	movlb	0	; () banked
  4108  010764  5185               	movf	_tmr0InterruptFlag& (0+255),w,b	;volatile
  4109  010766  B4D8               	btfsc	status,2,c
  4110  010768  EFB8  F083         	goto	u6811
  4111  01076C  EFBA  F083         	goto	u6810
  4112  010770                     u6811:
  4113  010770  EFF3  F083         	goto	l1151
  4114  010774                     u6810:
  4115  010774                     
  4116                           ; BSR set to: 0
  4117                           ;application.c: 122:         tmr0InterruptFlag = 0;
  4118  010774  0E00               	movlw	0
  4119  010776  6F85               	movwf	_tmr0InterruptFlag& (0+255),b	;volatile
  4120                           
  4121                           ;application.c: 123:         if(!isCRCPeekEnabled) {
  4122  010778  5186               	movf	_isCRCPeekEnabled& (0+255),w,b	;volatile
  4123  01077A  A4D8               	btfss	status,2,c
  4124  01077C  EFC2  F083         	goto	u6821
  4125  010780  EFC4  F083         	goto	u6820
  4126  010784                     u6821:
  4127  010784  EFCB  F083         	goto	l7285
  4128  010788                     u6820:
  4129  010788                     
  4130                           ; BSR set to: 0
  4131                           ;application.c: 124:         CRCInitializePeekMode();
  4132  010788  EC9C  F097         	call	_CRCInitializePeekMode	;wreg free
  4133  01078C                     
  4134                           ;application.c: 125:         StartCRCPeekMode();
  4135  01078C  EC88  F096         	call	_StartCRCPeekMode	;wreg free
  4136  010790                     
  4137                           ;application.c: 126:         isCRCPeekEnabled = 1;
  4138  010790  0E01               	movlw	1
  4139  010792  0100               	movlb	0	; () banked
  4140  010794  6F86               	movwf	_isCRCPeekEnabled& (0+255),b	;volatile
  4141  010796                     l7285:
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;application.c: 129:         if (CRC_SCAN_HasScanCompleted()) {
  4145  010796  EC54  F093         	call	_CRC_SCAN_HasScanCompleted	;wreg free
  4146  01079A  0900               	iorlw	0
  4147  01079C  B4D8               	btfsc	status,2,c
  4148  01079E  EFD3  F083         	goto	u6831
  4149  0107A2  EFD5  F083         	goto	u6830
  4150  0107A6                     u6831:
  4151  0107A6  EFF3  F083         	goto	l1151
  4152  0107AA                     u6830:
  4153  0107AA                     
  4154                           ;application.c: 131:             CRC_SCAN_StopScanner();
  4155  0107AA  EC10  F098         	call	_CRC_SCAN_StopScanner	;wreg free
  4156  0107AE                     
  4157                           ;application.c: 132:             crcValPeek = CRC_CalculatedResultGet(0, 0x0000);
  4158  0107AE  0E00               	movlw	0
  4159  0107B0  6E0F               	movwf	(CRC_CalculatedResultGet@xorValue+1)^0,c
  4160  0107B2  0E00               	movlw	0
  4161  0107B4  6E0E               	movwf	CRC_CalculatedResultGet@xorValue^0,c
  4162  0107B6  0E00               	movlw	0
  4163  0107B8  EC86  F08D         	call	_CRC_CalculatedResultGet
  4164  0107BC  C00E  F082         	movff	?_CRC_CalculatedResultGet,_crcValPeek	;volatile
  4165  0107C0  C00F  F083         	movff	?_CRC_CalculatedResultGet+1,_crcValPeek+1	;volatile
  4166                           
  4167                           ;application.c: 133:             if (crcValBurst != crcValPeek) {
  4168  0107C4  0100               	movlb	0	; () banked
  4169  0107C6  5182               	movf	_crcValPeek& (0+255),w,b	;volatile
  4170  0107C8  1980               	xorwf	_crcValBurst& (0+255),w,b	;volatile
  4171  0107CA  E109               	bnz	u6840
  4172  0107CC  5183               	movf	(_crcValPeek+1)& (0+255),w,b	;volatile
  4173  0107CE  1981               	xorwf	(_crcValBurst+1)& (0+255),w,b	;volatile
  4174  0107D0  B4D8               	btfsc	status,2,c
  4175  0107D2  EFED  F083         	goto	u6841
  4176  0107D6  EFEF  F083         	goto	u6840
  4177  0107DA                     u6841:
  4178  0107DA  EFF1  F083         	goto	l1150
  4179  0107DE                     u6840:
  4180  0107DE                     
  4181                           ; BSR set to: 0
  4182                           ;application.c: 135:                 flashCrcErrorStatus = 0x05;
  4183  0107DE  0E05               	movlw	5
  4184  0107E0  6F84               	movwf	_flashCrcErrorStatus& (0+255),b	;volatile
  4185  0107E2                     l1150:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;application.c: 137:             isCRCPeekEnabled = 0;
  4189  0107E2  0E00               	movlw	0
  4190  0107E4  6F86               	movwf	_isCRCPeekEnabled& (0+255),b	;volatile
  4191  0107E6                     l1151:
  4192  0107E6  0012               	return		;funcret
  4193  0107E8                     __end_of_ApplicationTask:
  4194                           	callstack 0
  4195                           
  4196 ;; *************** function _writeChecksum *****************
  4197 ;; Defined at:
  4198 ;;		line 408 in file "application.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  checksum        2   10[COMRAM] unsigned short 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		wreg, status,2, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4216 ;;Total ram usage:        2 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    5
  4219 ;; This function calls:
  4220 ;;		_DATAEE_WriteByte
  4221 ;; This function is called by:
  4222 ;;		_InitialSetup
  4223 ;;		_ApplicationTask
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text27
  4228  012E28                     __ptext27:
  4229                           	callstack 0
  4230  012E28                     _writeChecksum:
  4231                           	callstack 24
  4232  012E28                     
  4233                           ;application.c: 410:     DATAEE_WriteByte(0,(checksum >> 8));
  4234  012E28  0E00               	movlw	0
  4235  012E2A  6E08               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  4236  012E2C  0E00               	movlw	0
  4237  012E2E  6E07               	movwf	DATAEE_WriteByte@bAdd^0,c
  4238  012E30  500C               	movf	(writeChecksum@checksum+1)^0,w,c
  4239  012E32  6E09               	movwf	DATAEE_WriteByte@bData^0,c
  4240  012E34  ECD2  F094         	call	_DATAEE_WriteByte	;wreg free
  4241                           
  4242                           ;application.c: 411:     DATAEE_WriteByte(1,(uint8_t)checksum);
  4243  012E38  0E00               	movlw	0
  4244  012E3A  6E08               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  4245  012E3C  0E01               	movlw	1
  4246  012E3E  6E07               	movwf	DATAEE_WriteByte@bAdd^0,c
  4247  012E40  C00B  F009         	movff	writeChecksum@checksum,DATAEE_WriteByte@bData
  4248  012E44  ECD2  F094         	call	_DATAEE_WriteByte	;wreg free
  4249  012E48  0012               	return		;funcret
  4250  012E4A                     __end_of_writeChecksum:
  4251                           	callstack 0
  4252                           
  4253 ;; *************** function _strncmp *****************
  4254 ;; Defined at:
  4255 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strncmp.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  _l              2    6[COMRAM] PTR const unsigned char 
  4258 ;;		 -> buf(64), 
  4259 ;;  _r              2    8[COMRAM] PTR const unsigned char 
  4260 ;;		 -> resp_conn_data(3), 
  4261 ;;  n               2   10[COMRAM] unsigned int 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  r               2   15[COMRAM] PTR const unsigned char 
  4264 ;;		 -> resp_conn_data(3), 
  4265 ;;  l               2   13[COMRAM] PTR const unsigned char 
  4266 ;;		 -> buf(64), 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  2    6[COMRAM] int 
  4269 ;; Registers used:
  4270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4276 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4277 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;Total ram usage:       11 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    4
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_ApplicationTask
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text28
  4291  011BF8                     __ptext28:
  4292                           	callstack 0
  4293  011BF8                     _strncmp:
  4294                           	callstack 25
  4295  011BF8  C007  F00E         	movff	strncmp@_l,strncmp@l
  4296  011BFC  C008  F00F         	movff	strncmp@_l+1,strncmp@l+1
  4297  011C00  C009  F010         	movff	strncmp@_r,strncmp@r
  4298  011C04  C00A  F011         	movff	strncmp@_r+1,strncmp@r+1
  4299  011C08  060B               	decf	strncmp@n^0,f,c
  4300  011C0A  A0D8               	btfss	status,0,c
  4301  011C0C  060C               	decf	(strncmp@n+1)^0,f,c
  4302  011C0E  280B               	incf	strncmp@n^0,w,c
  4303  011C10  E106               	bnz	u4331
  4304  011C12  280C               	incf	(strncmp@n+1)^0,w,c
  4305  011C14  A4D8               	btfss	status,2,c
  4306  011C16  EF0F  F08E         	goto	u4331
  4307  011C1A  EF11  F08E         	goto	u4330
  4308  011C1E                     u4331:
  4309  011C1E  EF1E  F08E         	goto	l5567
  4310  011C22                     u4330:
  4311  011C22  0E00               	movlw	0
  4312  011C24  6E08               	movwf	(?_strncmp+1)^0,c
  4313  011C26  0E00               	movlw	0
  4314  011C28  6E07               	movwf	?_strncmp^0,c
  4315  011C2A  EF6C  F08E         	goto	l2215
  4316  011C2E                     l5565:
  4317  011C2E  4A0E               	infsnz	strncmp@l^0,f,c
  4318  011C30  2A0F               	incf	(strncmp@l+1)^0,f,c
  4319  011C32  4A10               	infsnz	strncmp@r^0,f,c
  4320  011C34  2A11               	incf	(strncmp@r+1)^0,f,c
  4321  011C36  060B               	decf	strncmp@n^0,f,c
  4322  011C38  A0D8               	btfss	status,0,c
  4323  011C3A  060C               	decf	(strncmp@n+1)^0,f,c
  4324  011C3C                     l5567:
  4325  011C3C  C00E  FFD9         	movff	strncmp@l,fsr2l
  4326  011C40  C00F  FFDA         	movff	strncmp@l+1,fsr2h
  4327  011C44  50DF               	movf	indf2,w,c
  4328  011C46  B4D8               	btfsc	status,2,c
  4329  011C48  EF28  F08E         	goto	u4341
  4330  011C4C  EF2A  F08E         	goto	u4340
  4331  011C50                     u4341:
  4332  011C50  EF59  F08E         	goto	l5575
  4333  011C54                     u4340:
  4334  011C54  C010  FFF6         	movff	strncmp@r,tblptrl
  4335  011C58  C011  FFF7         	movff	strncmp@r+1,tblptrh
  4336  011C5C                     	if	0	;tblptru may be non-zero
  4337  011C5C                     	endif
  4338  011C5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4339  011C5C  0E00               	movlw	low (__mediumconst shr (0+16))
  4340  011C5E  6EF8               	movwf	tblptru,c
  4341  011C60                     	endif
  4342  011C60  0008               	tblrd		*
  4343  011C62  50F5               	movf	tablat,w,c
  4344  011C64  0900               	iorlw	0
  4345  011C66  B4D8               	btfsc	status,2,c
  4346  011C68  EF38  F08E         	goto	u4351
  4347  011C6C  EF3A  F08E         	goto	u4350
  4348  011C70                     u4351:
  4349  011C70  EF59  F08E         	goto	l5575
  4350  011C74                     u4350:
  4351  011C74  500B               	movf	strncmp@n^0,w,c
  4352  011C76  100C               	iorwf	(strncmp@n+1)^0,w,c
  4353  011C78  B4D8               	btfsc	status,2,c
  4354  011C7A  EF41  F08E         	goto	u4361
  4355  011C7E  EF43  F08E         	goto	u4360
  4356  011C82                     u4361:
  4357  011C82  EF59  F08E         	goto	l5575
  4358  011C86                     u4360:
  4359  011C86  C00E  FFD9         	movff	strncmp@l,fsr2l
  4360  011C8A  C00F  FFDA         	movff	strncmp@l+1,fsr2h
  4361  011C8E  50DF               	movf	indf2,w,c
  4362  011C90  6E0D               	movwf	??_strncmp^0,c
  4363  011C92  C010  FFF6         	movff	strncmp@r,tblptrl
  4364  011C96  C011  FFF7         	movff	strncmp@r+1,tblptrh
  4365  011C9A                     	if	0	;tblptru may be non-zero
  4366  011C9A                     	endif
  4367  011C9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4368  011C9A  0E00               	movlw	low (__mediumconst shr (0+16))
  4369  011C9C  6EF8               	movwf	tblptru,c
  4370  011C9E                     	endif
  4371  011C9E  0008               	tblrd		*
  4372  011CA0  50F5               	movf	tablat,w,c
  4373  011CA2  180D               	xorwf	??_strncmp^0,w,c
  4374  011CA4  B4D8               	btfsc	status,2,c
  4375  011CA6  EF57  F08E         	goto	u4371
  4376  011CAA  EF59  F08E         	goto	u4370
  4377  011CAE                     u4371:
  4378  011CAE  EF17  F08E         	goto	l5565
  4379  011CB2                     u4370:
  4380  011CB2                     l5575:
  4381  011CB2  C00E  FFD9         	movff	strncmp@l,fsr2l
  4382  011CB6  C00F  FFDA         	movff	strncmp@l+1,fsr2h
  4383  011CBA  50DF               	movf	indf2,w,c
  4384  011CBC  6E0D               	movwf	??_strncmp^0,c
  4385  011CBE  C010  FFF6         	movff	strncmp@r,tblptrl
  4386  011CC2  C011  FFF7         	movff	strncmp@r+1,tblptrh
  4387  011CC6                     	if	0	;tblptru may be non-zero
  4388  011CC6                     	endif
  4389  011CC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4390  011CC6  0E00               	movlw	low (__mediumconst shr (0+16))
  4391  011CC8  6EF8               	movwf	tblptru,c
  4392  011CCA                     	endif
  4393  011CCA  0008               	tblrd		*
  4394  011CCC  50F5               	movf	tablat,w,c
  4395  011CCE  5C0D               	subwf	??_strncmp^0,w,c
  4396  011CD0  6E07               	movwf	?_strncmp^0,c
  4397  011CD2  6A08               	clrf	(?_strncmp+1)^0,c
  4398  011CD4  A0D8               	btfss	status,0,c
  4399  011CD6  0608               	decf	(?_strncmp+1)^0,f,c
  4400  011CD8                     l2215:
  4401  011CD8  0012               	return		;funcret
  4402  011CDA                     __end_of_strncmp:
  4403                           	callstack 0
  4404                           
  4405 ;; *************** function _strcmp *****************
  4406 ;; Defined at:
  4407 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strcmp.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  l               2    6[COMRAM] PTR const unsigned char 
  4410 ;;		 -> buf(64), 
  4411 ;;  r               2    8[COMRAM] PTR const unsigned char 
  4412 ;;		 -> resp_conn_end(15), resp_conn(10), 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  2    6[COMRAM] int 
  4417 ;; Registers used:
  4418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;Total ram usage:        5 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    4
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_ApplicationTask
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text29
  4439  0122AA                     __ptext29:
  4440                           	callstack 0
  4441  0122AA                     _strcmp:
  4442                           	callstack 25
  4443  0122AA  EF5B  F091         	goto	l5551
  4444  0122AE                     l5549:
  4445  0122AE  4A07               	infsnz	strcmp@l^0,f,c
  4446  0122B0  2A08               	incf	(strcmp@l+1)^0,f,c
  4447  0122B2  4A09               	infsnz	strcmp@r^0,f,c
  4448  0122B4  2A0A               	incf	(strcmp@r+1)^0,f,c
  4449  0122B6                     l5551:
  4450  0122B6  C007  FFD9         	movff	strcmp@l,fsr2l
  4451  0122BA  C008  FFDA         	movff	strcmp@l+1,fsr2h
  4452  0122BE  50DF               	movf	indf2,w,c
  4453  0122C0  6E0B               	movwf	??_strcmp^0,c
  4454  0122C2  C009  FFF6         	movff	strcmp@r,tblptrl
  4455  0122C6  C00A  FFF7         	movff	strcmp@r+1,tblptrh
  4456  0122CA                     	if	0	;tblptru may be non-zero
  4457  0122CA                     	endif
  4458  0122CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4459  0122CA  0E00               	movlw	low (__mediumconst shr (0+16))
  4460  0122CC  6EF8               	movwf	tblptru,c
  4461  0122CE                     	endif
  4462  0122CE  0008               	tblrd		*
  4463  0122D0  50F5               	movf	tablat,w,c
  4464  0122D2  180B               	xorwf	??_strcmp^0,w,c
  4465  0122D4  A4D8               	btfss	status,2,c
  4466  0122D6  EF6F  F091         	goto	u4311
  4467  0122DA  EF71  F091         	goto	u4310
  4468  0122DE                     u4311:
  4469  0122DE  EF7D  F091         	goto	l5555
  4470  0122E2                     u4310:
  4471  0122E2  C007  FFD9         	movff	strcmp@l,fsr2l
  4472  0122E6  C008  FFDA         	movff	strcmp@l+1,fsr2h
  4473  0122EA  50DF               	movf	indf2,w,c
  4474  0122EC  A4D8               	btfss	status,2,c
  4475  0122EE  EF7B  F091         	goto	u4321
  4476  0122F2  EF7D  F091         	goto	u4320
  4477  0122F6                     u4321:
  4478  0122F6  EF57  F091         	goto	l5549
  4479  0122FA                     u4320:
  4480  0122FA                     l5555:
  4481  0122FA  C007  FFD9         	movff	strcmp@l,fsr2l
  4482  0122FE  C008  FFDA         	movff	strcmp@l+1,fsr2h
  4483  012302  50DF               	movf	indf2,w,c
  4484  012304  6E0B               	movwf	??_strcmp^0,c
  4485  012306  C009  FFF6         	movff	strcmp@r,tblptrl
  4486  01230A  C00A  FFF7         	movff	strcmp@r+1,tblptrh
  4487  01230E                     	if	0	;tblptru may be non-zero
  4488  01230E                     	endif
  4489  01230E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4490  01230E  0E00               	movlw	low (__mediumconst shr (0+16))
  4491  012310  6EF8               	movwf	tblptru,c
  4492  012312                     	endif
  4493  012312  0008               	tblrd		*
  4494  012314  50F5               	movf	tablat,w,c
  4495  012316  5C0B               	subwf	??_strcmp^0,w,c
  4496  012318  6E07               	movwf	?_strcmp^0,c
  4497  01231A  6A08               	clrf	(?_strcmp+1)^0,c
  4498  01231C  A0D8               	btfss	status,0,c
  4499  01231E  0608               	decf	(?_strcmp+1)^0,f,c
  4500  012320  0012               	return		;funcret
  4501  012322                     __end_of_strcmp:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function _processADCCommand *****************
  4505 ;; Defined at:
  4506 ;;		line 214 in file "application.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  dataRead        2    2[BANK1 ] unsigned short 
  4511 ;;  dataRead        2    0[BANK1 ] unsigned short 
  4512 ;;  lcurrentAdcV    2    6[BANK1 ] unsigned short 
  4513 ;;  data            2    4[BANK1 ] struct .
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4524 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;      Totals:         0       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4527 ;;Total ram usage:       10 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:   14
  4530 ;; This function calls:
  4531 ;;		_ADCCBasicModeInitialize
  4532 ;;		_ADCCBurstModeInitialize
  4533 ;;		_FLASH_ReadWord
  4534 ;;		_TMR1_Reload
  4535 ;;		_TMR1_StartTimer
  4536 ;;		_TMR1_StopTimer
  4537 ;;		___fldiv
  4538 ;;		___flmul
  4539 ;;		___fltol
  4540 ;;		___xxtofl
  4541 ;;		_getADCCommand
  4542 ;;		_sendADCCValueBLE
  4543 ;; This function is called by:
  4544 ;;		_ApplicationTask
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text30
  4549  010F2E                     __ptext30:
  4550                           	callstack 0
  4551  010F2E                     _processADCCommand:
  4552                           	callstack 15
  4553  010F2E                     
  4554                           ;application.c: 215:     ADC_data data = getADCCommand();
  4555  010F2E  EC86  F097         	call	_getADCCommand	;wreg free
  4556  010F32  C00F  F144         	movff	?_getADCCommand,processADCCommand@data
  4557  010F36  C010  F145         	movff	?_getADCCommand+1,processADCCommand@data+1
  4558  010F3A                     
  4559                           ;application.c: 216:     uint16_t lcurrentAdcValuePtr = currentAdcValuePtr;
  4560  010F3A  C053  F146         	movff	_currentAdcValuePtr,processADCCommand@lcurrentAdcValuePtr	;volatile
  4561  010F3E  C054  F147         	movff	_currentAdcValuePtr+1,processADCCommand@lcurrentAdcValuePtr+1	;volatile
  4562                           
  4563                           ;application.c: 217:     switch(data.ADC_CHARACTERISTIC) {
  4564  010F42  EF1C  F089         	goto	l7125
  4565  010F46                     l7049:
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;application.c: 222:                     TMR1_StartTimer();
  4569  010F46  EC2C  F098         	call	_TMR1_StartTimer	;wreg free
  4570                           
  4571                           ;application.c: 223:                     break;
  4572  010F4A  EF37  F089         	goto	l1222
  4573  010F4E                     l7051:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;application.c: 226:                     TMR1_StopTimer();
  4577  010F4E  EC2A  F098         	call	_TMR1_StopTimer	;wreg free
  4578                           
  4579                           ;application.c: 227:                     while(lcurrentAdcValuePtr < 0x41FF) {
  4580  010F52  EF15  F088         	goto	l7065
  4581  010F56                     l7053:
  4582                           
  4583                           ; BSR set to: 1
  4584                           ;application.c: 228:                         uint16_t dataRead = FLASH_ReadWord(lcurrent
      +                          AdcValuePtr);
  4585  010F56  C146  F007         	movff	processADCCommand@lcurrentAdcValuePtr,FLASH_ReadWord@flashAddr
  4586  010F5A  C147  F008         	movff	processADCCommand@lcurrentAdcValuePtr+1,FLASH_ReadWord@flashAddr+1
  4587  010F5E  6A09               	clrf	(FLASH_ReadWord@flashAddr+2)^0,c
  4588  010F60  6A0A               	clrf	(FLASH_ReadWord@flashAddr+3)^0,c
  4589  010F62  EC9D  F096         	call	_FLASH_ReadWord	;wreg free
  4590  010F66  C007  F140         	movff	?_FLASH_ReadWord,processADCCommand@dataRead
  4591  010F6A  C008  F141         	movff	?_FLASH_ReadWord+1,processADCCommand@dataRead+1
  4592  010F6E                     
  4593                           ;application.c: 229:                         if(dataRead != 0xFFFF) {
  4594  010F6E  0101               	movlb	1	; () banked
  4595  010F70  2940               	incf	processADCCommand@dataRead& (0+255),w,b
  4596  010F72  E108               	bnz	u6510
  4597  010F74  2941               	incf	(processADCCommand@dataRead+1)& (0+255),w,b
  4598  010F76  B4D8               	btfsc	status,2,c
  4599  010F78  EFC0  F087         	goto	u6511
  4600  010F7C  EFC2  F087         	goto	u6510
  4601  010F80                     u6511:
  4602  010F80  EF10  F088         	goto	l7063
  4603  010F84                     u6510:
  4604  010F84                     
  4605                           ; BSR set to: 1
  4606                           ;application.c: 230:                             dataRead = (float)dataRead / 676 * 100;
  4607  010F84  0E00               	movlw	0
  4608  010F86  6E32               	movwf	___flmul@a^0,c
  4609  010F88  0E00               	movlw	0
  4610  010F8A  6E33               	movwf	(___flmul@a+1)^0,c
  4611  010F8C  0EC8               	movlw	200
  4612  010F8E  6E34               	movwf	(___flmul@a+2)^0,c
  4613  010F90  0E42               	movlw	66
  4614  010F92  6E35               	movwf	(___flmul@a+3)^0,c
  4615  010F94  0E00               	movlw	0
  4616  010F96  6E19               	movwf	___fldiv@a^0,c
  4617  010F98  0E00               	movlw	0
  4618  010F9A  6E1A               	movwf	(___fldiv@a+1)^0,c
  4619  010F9C  0E29               	movlw	41
  4620  010F9E  6E1B               	movwf	(___fldiv@a+2)^0,c
  4621  010FA0  0E44               	movlw	68
  4622  010FA2  6E1C               	movwf	(___fldiv@a+3)^0,c
  4623  010FA4  C140  F007         	movff	processADCCommand@dataRead,___xxtofl@val
  4624  010FA8  C141  F008         	movff	processADCCommand@dataRead+1,___xxtofl@val+1
  4625  010FAC  6A09               	clrf	(___xxtofl@val+2)^0,c
  4626  010FAE  6A0A               	clrf	(___xxtofl@val+3)^0,c
  4627  010FB0  0E00               	movlw	0
  4628  010FB2  ECA4  F08A         	call	___xxtofl
  4629  010FB6  C007  F015         	movff	?___xxtofl,___fldiv@b
  4630  010FBA  C008  F016         	movff	?___xxtofl+1,___fldiv@b+1
  4631  010FBE  C009  F017         	movff	?___xxtofl+2,___fldiv@b+2
  4632  010FC2  C00A  F018         	movff	?___xxtofl+3,___fldiv@b+3
  4633  010FC6  ECCA  F085         	call	___fldiv	;wreg free
  4634  010FCA  C015  F02E         	movff	?___fldiv,___flmul@b
  4635  010FCE  C016  F02F         	movff	?___fldiv+1,___flmul@b+1
  4636  010FD2  C017  F030         	movff	?___fldiv+2,___flmul@b+2
  4637  010FD6  C018  F031         	movff	?___fldiv+3,___flmul@b+3
  4638  010FDA  EC00  F080         	call	___flmul	;wreg free
  4639  010FDE  C02E  F047         	movff	?___flmul,___fltol@f1
  4640  010FE2  C02F  F048         	movff	?___flmul+1,___fltol@f1+1
  4641  010FE6  C030  F049         	movff	?___flmul+2,___fltol@f1+2
  4642  010FEA  C031  F04A         	movff	?___flmul+3,___fltol@f1+3
  4643  010FEE  EC03  F08D         	call	___fltol	;wreg free
  4644  010FF2  C047  F140         	movff	?___fltol,processADCCommand@dataRead
  4645  010FF6  C048  F141         	movff	?___fltol+1,processADCCommand@dataRead+1
  4646  010FFA                     
  4647                           ;application.c: 231:                             sendADCCValueBLE(dataRead);
  4648  010FFA  C140  F0D6         	movff	processADCCommand@dataRead,sendADCCValueBLE@adcValue
  4649  010FFE  C141  F0D7         	movff	processADCCommand@dataRead+1,sendADCCValueBLE@adcValue+1
  4650  011002  EC91  F091         	call	_sendADCCValueBLE	;wreg free
  4651  011006                     
  4652                           ;application.c: 232:                             _delay((unsigned long)((100)*(64000000/
      +                          4000.0)));
  4653  011006  0E09               	movlw	9
  4654  011008  0100               	movlb	0	; () banked
  4655  01100A  6FDD               	movwf	(??_processADCCommand+1)& (0+255),b
  4656  01100C  0E1E               	movlw	30
  4657  01100E  6FDC               	movwf	??_processADCCommand& (0+255),b
  4658  011010  0EE4               	movlw	228
  4659  011012                     u6857:
  4660  011012  2EE8               	decfsz	wreg,f,c
  4661  011014  D7FE               	bra	u6857
  4662  011016  2FDC               	decfsz	??_processADCCommand& (0+255),f,b
  4663  011018  D7FC               	bra	u6857
  4664  01101A  2FDD               	decfsz	(??_processADCCommand+1)& (0+255),f,b
  4665  01101C  D7FA               	bra	u6857
  4666  01101E  F000               	nop	
  4667  011020                     l7063:
  4668                           
  4669                           ;application.c: 234:                         lcurrentAdcValuePtr += 2;
  4670  011020  0E02               	movlw	2
  4671  011022  0101               	movlb	1	; () banked
  4672  011024  2746               	addwf	processADCCommand@lcurrentAdcValuePtr& (0+255),f,b
  4673  011026  0E00               	movlw	0
  4674  011028  2347               	addwfc	(processADCCommand@lcurrentAdcValuePtr+1)& (0+255),f,b
  4675  01102A                     l7065:
  4676                           
  4677                           ;application.c: 227:                     while(lcurrentAdcValuePtr < 0x41FF) {
  4678  01102A  0101               	movlb	1	; () banked
  4679  01102C  2946               	incf	processADCCommand@lcurrentAdcValuePtr& (0+255),w,b
  4680  01102E  0E41               	movlw	65
  4681  011030  5947               	subwfb	(processADCCommand@lcurrentAdcValuePtr+1)& (0+255),w,b
  4682  011032  A0D8               	btfss	status,0,c
  4683  011034  EF1E  F088         	goto	u6521
  4684  011038  EF20  F088         	goto	u6520
  4685  01103C                     u6521:
  4686  01103C  EFAB  F087         	goto	l7053
  4687  011040                     u6520:
  4688  011040                     
  4689                           ; BSR set to: 1
  4690                           ;application.c: 236:                     lcurrentAdcValuePtr = 0x4000;
  4691  011040  0E40               	movlw	64
  4692  011042  6F47               	movwf	(processADCCommand@lcurrentAdcValuePtr+1)& (0+255),b
  4693  011044  0E00               	movlw	0
  4694  011046  6F46               	movwf	processADCCommand@lcurrentAdcValuePtr& (0+255),b
  4695                           
  4696                           ;application.c: 237:                     while(lcurrentAdcValuePtr < currentAdcValuePtr)
      +                           {
  4697  011048  EF90  F088         	goto	l7081
  4698  01104C                     l7069:
  4699                           
  4700                           ; BSR set to: 1
  4701                           ;application.c: 238:                         uint16_t dataRead = FLASH_ReadWord(lcurrent
      +                          AdcValuePtr);
  4702  01104C  C146  F007         	movff	processADCCommand@lcurrentAdcValuePtr,FLASH_ReadWord@flashAddr
  4703  011050  C147  F008         	movff	processADCCommand@lcurrentAdcValuePtr+1,FLASH_ReadWord@flashAddr+1
  4704  011054  6A09               	clrf	(FLASH_ReadWord@flashAddr+2)^0,c
  4705  011056  6A0A               	clrf	(FLASH_ReadWord@flashAddr+3)^0,c
  4706  011058  EC9D  F096         	call	_FLASH_ReadWord	;wreg free
  4707  01105C  C007  F142         	movff	?_FLASH_ReadWord,processADCCommand@dataRead_2152
  4708  011060  C008  F143         	movff	?_FLASH_ReadWord+1,processADCCommand@dataRead_2152+1
  4709  011064                     
  4710                           ;application.c: 239:                         if(dataRead != 0xFFFF) {
  4711  011064  0101               	movlb	1	; () banked
  4712  011066  2942               	incf	processADCCommand@dataRead_2152& (0+255),w,b
  4713  011068  E108               	bnz	u6530
  4714  01106A  2943               	incf	(processADCCommand@dataRead_2152+1)& (0+255),w,b
  4715  01106C  B4D8               	btfsc	status,2,c
  4716  01106E  EF3B  F088         	goto	u6531
  4717  011072  EF3D  F088         	goto	u6530
  4718  011076                     u6531:
  4719  011076  EF8B  F088         	goto	l7079
  4720  01107A                     u6530:
  4721  01107A                     
  4722                           ; BSR set to: 1
  4723                           ;application.c: 240:                             dataRead = (float)dataRead / 676 * 100;
  4724  01107A  0E00               	movlw	0
  4725  01107C  6E32               	movwf	___flmul@a^0,c
  4726  01107E  0E00               	movlw	0
  4727  011080  6E33               	movwf	(___flmul@a+1)^0,c
  4728  011082  0EC8               	movlw	200
  4729  011084  6E34               	movwf	(___flmul@a+2)^0,c
  4730  011086  0E42               	movlw	66
  4731  011088  6E35               	movwf	(___flmul@a+3)^0,c
  4732  01108A  0E00               	movlw	0
  4733  01108C  6E19               	movwf	___fldiv@a^0,c
  4734  01108E  0E00               	movlw	0
  4735  011090  6E1A               	movwf	(___fldiv@a+1)^0,c
  4736  011092  0E29               	movlw	41
  4737  011094  6E1B               	movwf	(___fldiv@a+2)^0,c
  4738  011096  0E44               	movlw	68
  4739  011098  6E1C               	movwf	(___fldiv@a+3)^0,c
  4740  01109A  C142  F007         	movff	processADCCommand@dataRead_2152,___xxtofl@val
  4741  01109E  C143  F008         	movff	processADCCommand@dataRead_2152+1,___xxtofl@val+1
  4742  0110A2  6A09               	clrf	(___xxtofl@val+2)^0,c
  4743  0110A4  6A0A               	clrf	(___xxtofl@val+3)^0,c
  4744  0110A6  0E00               	movlw	0
  4745  0110A8  ECA4  F08A         	call	___xxtofl
  4746  0110AC  C007  F015         	movff	?___xxtofl,___fldiv@b
  4747  0110B0  C008  F016         	movff	?___xxtofl+1,___fldiv@b+1
  4748  0110B4  C009  F017         	movff	?___xxtofl+2,___fldiv@b+2
  4749  0110B8  C00A  F018         	movff	?___xxtofl+3,___fldiv@b+3
  4750  0110BC  ECCA  F085         	call	___fldiv	;wreg free
  4751  0110C0  C015  F02E         	movff	?___fldiv,___flmul@b
  4752  0110C4  C016  F02F         	movff	?___fldiv+1,___flmul@b+1
  4753  0110C8  C017  F030         	movff	?___fldiv+2,___flmul@b+2
  4754  0110CC  C018  F031         	movff	?___fldiv+3,___flmul@b+3
  4755  0110D0  EC00  F080         	call	___flmul	;wreg free
  4756  0110D4  C02E  F047         	movff	?___flmul,___fltol@f1
  4757  0110D8  C02F  F048         	movff	?___flmul+1,___fltol@f1+1
  4758  0110DC  C030  F049         	movff	?___flmul+2,___fltol@f1+2
  4759  0110E0  C031  F04A         	movff	?___flmul+3,___fltol@f1+3
  4760  0110E4  EC03  F08D         	call	___fltol	;wreg free
  4761  0110E8  C047  F142         	movff	?___fltol,processADCCommand@dataRead_2152
  4762  0110EC  C048  F143         	movff	?___fltol+1,processADCCommand@dataRead_2152+1
  4763  0110F0                     
  4764                           ;application.c: 241:                             sendADCCValueBLE(dataRead);
  4765  0110F0  C142  F0D6         	movff	processADCCommand@dataRead_2152,sendADCCValueBLE@adcValue
  4766  0110F4  C143  F0D7         	movff	processADCCommand@dataRead_2152+1,sendADCCValueBLE@adcValue+1
  4767  0110F8  EC91  F091         	call	_sendADCCValueBLE	;wreg free
  4768  0110FC                     
  4769                           ;application.c: 242:                             _delay((unsigned long)((100)*(64000000/
      +                          4000.0)));
  4770  0110FC  0E09               	movlw	9
  4771  0110FE  0100               	movlb	0	; () banked
  4772  011100  6FDD               	movwf	(??_processADCCommand+1)& (0+255),b
  4773  011102  0E1E               	movlw	30
  4774  011104  6FDC               	movwf	??_processADCCommand& (0+255),b
  4775  011106  0EE4               	movlw	228
  4776  011108                     u6867:
  4777  011108  2EE8               	decfsz	wreg,f,c
  4778  01110A  D7FE               	bra	u6867
  4779  01110C  2FDC               	decfsz	??_processADCCommand& (0+255),f,b
  4780  01110E  D7FC               	bra	u6867
  4781  011110  2FDD               	decfsz	(??_processADCCommand+1)& (0+255),f,b
  4782  011112  D7FA               	bra	u6867
  4783  011114  F000               	nop	
  4784  011116                     l7079:
  4785                           
  4786                           ;application.c: 244:                         lcurrentAdcValuePtr += 2;
  4787  011116  0E02               	movlw	2
  4788  011118  0101               	movlb	1	; () banked
  4789  01111A  2746               	addwf	processADCCommand@lcurrentAdcValuePtr& (0+255),f,b
  4790  01111C  0E00               	movlw	0
  4791  01111E  2347               	addwfc	(processADCCommand@lcurrentAdcValuePtr+1)& (0+255),f,b
  4792  011120                     l7081:
  4793                           
  4794                           ; BSR set to: 1
  4795                           ;application.c: 237:                     while(lcurrentAdcValuePtr < currentAdcValuePtr)
      +                           {
  4796  011120  5053               	movf	_currentAdcValuePtr^0,w,c	;volatile
  4797  011122  5D46               	subwf	processADCCommand@lcurrentAdcValuePtr& (0+255),w,b
  4798  011124  5054               	movf	(_currentAdcValuePtr+1)^0,w,c	;volatile
  4799  011126  5947               	subwfb	(processADCCommand@lcurrentAdcValuePtr+1)& (0+255),w,b
  4800  011128  A0D8               	btfss	status,0,c
  4801  01112A  EF99  F088         	goto	u6541
  4802  01112E  EF9B  F088         	goto	u6540
  4803  011132                     u6541:
  4804  011132  EF26  F088         	goto	l7069
  4805  011136                     u6540:
  4806  011136  EF37  F089         	goto	l1222
  4807  01113A                     l7085:
  4808                           
  4809                           ; BSR set to: 0
  4810  01113A  0101               	movlb	1	; () banked
  4811  01113C  5145               	movf	(processADCCommand@data+1)& (0+255),w,b
  4812  01113E  0100               	movlb	0	; () banked
  4813  011140  6FDC               	movwf	??_processADCCommand& (0+255),b
  4814  011142  6BDD               	clrf	(??_processADCCommand+1)& (0+255),b
  4815                           
  4816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4817                           ; Switch size 1, requested type "simple"
  4818                           ; Number of cases is 1, Range of values is 0 to 0
  4819                           ; switch strategies available:
  4820                           ; Name         Instructions Cycles
  4821                           ; simple_byte            4     3 (average)
  4822                           ;	Chosen strategy is simple_byte
  4823  011144  51DD               	movf	(??_processADCCommand+1)& (0+255),w,b
  4824  011146  0A00               	xorlw	0	; case 0
  4825  011148  B4D8               	btfsc	status,2,c
  4826  01114A  EFA9  F088         	goto	l7473
  4827  01114E  EF37  F089         	goto	l1222
  4828  011152                     l7473:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ; Switch size 1, requested type "simple"
  4832                           ; Number of cases is 2, Range of values is 1 to 2
  4833                           ; switch strategies available:
  4834                           ; Name         Instructions Cycles
  4835                           ; simple_byte            7     4 (average)
  4836                           ;	Chosen strategy is simple_byte
  4837  011152  51DC               	movf	??_processADCCommand& (0+255),w,b
  4838  011154  0A01               	xorlw	1	; case 1
  4839  011156  B4D8               	btfsc	status,2,c
  4840  011158  EFA3  F087         	goto	l7049
  4841  01115C  0A03               	xorlw	3	; case 2
  4842  01115E  B4D8               	btfsc	status,2,c
  4843  011160  EFA7  F087         	goto	l7051
  4844  011164  EF37  F089         	goto	l1222
  4845  011168                     l7087:
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;application.c: 255:                     ADCCBurstModeInitialize();
  4849  011168  ECF9  F097         	call	_ADCCBurstModeInitialize	;wreg free
  4850  01116C                     
  4851                           ;application.c: 256:                     burstMode = 1;
  4852  01116C  0E01               	movlw	1
  4853  01116E  0100               	movlb	0	; () banked
  4854  011170  6F87               	movwf	_burstMode& (0+255),b	;volatile
  4855                           
  4856                           ;application.c: 257:                     break;
  4857  011172  EF37  F089         	goto	l1222
  4858  011176                     l7091:
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;application.c: 260:                     ADCCBasicModeInitialize();
  4862  011176  EC08  F098         	call	_ADCCBasicModeInitialize	;wreg free
  4863  01117A                     
  4864                           ;application.c: 261:                     burstMode = 0;
  4865  01117A  0E00               	movlw	0
  4866  01117C  0100               	movlb	0	; () banked
  4867  01117E  6F87               	movwf	_burstMode& (0+255),b	;volatile
  4868                           
  4869                           ;application.c: 262:                     break;
  4870  011180  EF37  F089         	goto	l1222
  4871  011184                     l7097:
  4872                           
  4873                           ; BSR set to: 0
  4874  011184  0101               	movlb	1	; () banked
  4875  011186  5145               	movf	(processADCCommand@data+1)& (0+255),w,b
  4876  011188  0100               	movlb	0	; () banked
  4877  01118A  6FDC               	movwf	??_processADCCommand& (0+255),b
  4878  01118C  6BDD               	clrf	(??_processADCCommand+1)& (0+255),b
  4879                           
  4880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4881                           ; Switch size 1, requested type "simple"
  4882                           ; Number of cases is 1, Range of values is 0 to 0
  4883                           ; switch strategies available:
  4884                           ; Name         Instructions Cycles
  4885                           ; simple_byte            4     3 (average)
  4886                           ;	Chosen strategy is simple_byte
  4887  01118E  51DD               	movf	(??_processADCCommand+1)& (0+255),w,b
  4888  011190  0A00               	xorlw	0	; case 0
  4889  011192  B4D8               	btfsc	status,2,c
  4890  011194  EFCE  F088         	goto	l7475
  4891  011198  EF37  F089         	goto	l1222
  4892  01119C                     l7475:
  4893                           
  4894                           ; BSR set to: 0
  4895                           ; Switch size 1, requested type "simple"
  4896                           ; Number of cases is 2, Range of values is 1 to 2
  4897                           ; switch strategies available:
  4898                           ; Name         Instructions Cycles
  4899                           ; simple_byte            7     4 (average)
  4900                           ;	Chosen strategy is simple_byte
  4901  01119C  51DC               	movf	??_processADCCommand& (0+255),w,b
  4902  01119E  0A01               	xorlw	1	; case 1
  4903  0111A0  B4D8               	btfsc	status,2,c
  4904  0111A2  EFB4  F088         	goto	l7087
  4905  0111A6  0A03               	xorlw	3	; case 2
  4906  0111A8  B4D8               	btfsc	status,2,c
  4907  0111AA  EFBB  F088         	goto	l7091
  4908  0111AE  EF37  F089         	goto	l1222
  4909  0111B2                     l7099:
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;application.c: 271:                     timer1ReloadVal = 0xF0DD;
  4913  0111B2  0EF0               	movlw	240
  4914  0111B4  6FFB               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  4915  0111B6  0EDD               	movlw	221
  4916  0111B8  6FFA               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  4917  0111BA                     l7101:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;application.c: 272:                     TMR1_Reload();
  4921  0111BA  ECF2  F097         	call	_TMR1_Reload	;wreg free
  4922                           
  4923                           ;application.c: 273:                     break;
  4924  0111BE  EF37  F089         	goto	l1222
  4925  0111C2                     l7103:
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;application.c: 276:                     timer1ReloadVal = 0xE1BA;
  4929  0111C2  0EE1               	movlw	225
  4930  0111C4  6FFB               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  4931  0111C6  0EBA               	movlw	186
  4932  0111C8  6FFA               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  4933  0111CA  EFDD  F088         	goto	l7101
  4934  0111CE                     l7107:
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;application.c: 281:                     timer1ReloadVal = 0xC374;
  4938  0111CE  0EC3               	movlw	195
  4939  0111D0  6FFB               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  4940  0111D2  0E74               	movlw	116
  4941  0111D4  6FFA               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  4942  0111D6  EFDD  F088         	goto	l7101
  4943  0111DA                     l7111:
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;application.c: 286:                     timer1ReloadVal = 0x86E8;
  4947  0111DA  0E86               	movlw	134
  4948  0111DC  6FFB               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  4949  0111DE  0EE8               	movlw	232
  4950  0111E0  6FFA               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  4951  0111E2  EFDD  F088         	goto	l7101
  4952  0111E6                     l7115:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;application.c: 291:                     timer1ReloadVal = 0x0DD0;
  4956  0111E6  0E0D               	movlw	13
  4957  0111E8  6FFB               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  4958  0111EA  0ED0               	movlw	208
  4959  0111EC  6FFA               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  4960  0111EE  EFDD  F088         	goto	l7101
  4961  0111F2                     l7121:
  4962                           
  4963                           ; BSR set to: 0
  4964  0111F2  0101               	movlb	1	; () banked
  4965  0111F4  5145               	movf	(processADCCommand@data+1)& (0+255),w,b
  4966  0111F6  0100               	movlb	0	; () banked
  4967  0111F8  6FDC               	movwf	??_processADCCommand& (0+255),b
  4968  0111FA  6BDD               	clrf	(??_processADCCommand+1)& (0+255),b
  4969                           
  4970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4971                           ; Switch size 1, requested type "simple"
  4972                           ; Number of cases is 1, Range of values is 0 to 0
  4973                           ; switch strategies available:
  4974                           ; Name         Instructions Cycles
  4975                           ; simple_byte            4     3 (average)
  4976                           ;	Chosen strategy is simple_byte
  4977  0111FC  51DD               	movf	(??_processADCCommand+1)& (0+255),w,b
  4978  0111FE  0A00               	xorlw	0	; case 0
  4979  011200  B4D8               	btfsc	status,2,c
  4980  011202  EF05  F089         	goto	l7477
  4981  011206  EF37  F089         	goto	l1222
  4982  01120A                     l7477:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ; Switch size 1, requested type "simple"
  4986                           ; Number of cases is 5, Range of values is 1 to 5
  4987                           ; switch strategies available:
  4988                           ; Name         Instructions Cycles
  4989                           ; simple_byte           16     9 (average)
  4990                           ;	Chosen strategy is simple_byte
  4991  01120A  51DC               	movf	??_processADCCommand& (0+255),w,b
  4992  01120C  0A01               	xorlw	1	; case 1
  4993  01120E  B4D8               	btfsc	status,2,c
  4994  011210  EFD9  F088         	goto	l7099
  4995  011214  0A03               	xorlw	3	; case 2
  4996  011216  B4D8               	btfsc	status,2,c
  4997  011218  EFE1  F088         	goto	l7103
  4998  01121C  0A01               	xorlw	1	; case 3
  4999  01121E  B4D8               	btfsc	status,2,c
  5000  011220  EFE7  F088         	goto	l7107
  5001  011224  0A07               	xorlw	7	; case 4
  5002  011226  B4D8               	btfsc	status,2,c
  5003  011228  EFED  F088         	goto	l7111
  5004  01122C  0A01               	xorlw	1	; case 5
  5005  01122E  B4D8               	btfsc	status,2,c
  5006  011230  EFF3  F088         	goto	l7115
  5007  011234  EF37  F089         	goto	l1222
  5008  011238                     l7125:
  5009  011238  0101               	movlb	1	; () banked
  5010  01123A  5144               	movf	processADCCommand@data& (0+255),w,b
  5011  01123C  0100               	movlb	0	; () banked
  5012  01123E  6FDC               	movwf	??_processADCCommand& (0+255),b
  5013  011240  6BDD               	clrf	(??_processADCCommand+1)& (0+255),b
  5014                           
  5015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5016                           ; Switch size 1, requested type "simple"
  5017                           ; Number of cases is 1, Range of values is 0 to 0
  5018                           ; switch strategies available:
  5019                           ; Name         Instructions Cycles
  5020                           ; simple_byte            4     3 (average)
  5021                           ;	Chosen strategy is simple_byte
  5022  011242  51DD               	movf	(??_processADCCommand+1)& (0+255),w,b
  5023  011244  0A00               	xorlw	0	; case 0
  5024  011246  B4D8               	btfsc	status,2,c
  5025  011248  EF28  F089         	goto	l7479
  5026  01124C  EF37  F089         	goto	l1222
  5027  011250                     l7479:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ; Switch size 1, requested type "simple"
  5031                           ; Number of cases is 3, Range of values is 1 to 3
  5032                           ; switch strategies available:
  5033                           ; Name         Instructions Cycles
  5034                           ; simple_byte           10     6 (average)
  5035                           ;	Chosen strategy is simple_byte
  5036  011250  51DC               	movf	??_processADCCommand& (0+255),w,b
  5037  011252  0A01               	xorlw	1	; case 1
  5038  011254  B4D8               	btfsc	status,2,c
  5039  011256  EF9D  F088         	goto	l7085
  5040  01125A  0A03               	xorlw	3	; case 2
  5041  01125C  B4D8               	btfsc	status,2,c
  5042  01125E  EFC2  F088         	goto	l7097
  5043  011262  0A01               	xorlw	1	; case 3
  5044  011264  B4D8               	btfsc	status,2,c
  5045  011266  EFF9  F088         	goto	l7121
  5046  01126A  EF37  F089         	goto	l1222
  5047  01126E                     l1222:
  5048  01126E  0012               	return		;funcret
  5049  011270                     __end_of_processADCCommand:
  5050                           	callstack 0
  5051                           
  5052 ;; *************** function _sendADCCValueBLE *****************
  5053 ;; Defined at:
  5054 ;;		line 350 in file "application.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  adcValue        2   39[BANK0 ] unsigned short 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  result          2   43[BANK0 ] unsigned char [2]
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5068 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;Total ram usage:        6 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; Hardware stack levels required when called:   13
  5075 ;; This function calls:
  5076 ;;		_BLE2_SendString
  5077 ;;		_sprintf
  5078 ;; This function is called by:
  5079 ;;		_ApplicationTask
  5080 ;;		_processADCCommand
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text31
  5085  012322                     __ptext31:
  5086                           	callstack 0
  5087  012322                     _sendADCCValueBLE:
  5088                           	callstack 16
  5089  012322                     
  5090                           ;application.c: 351:     uint8_t result[2];;application.c: 352:     BLE2_SendString(cmd_
      +                          adc_value_send);
  5091  012322  0E60               	movlw	low _cmd_adc_value_send
  5092  012324  6E0E               	movwf	BLE2_SendString@command^0,c
  5093  012326  0EFF               	movlw	high _cmd_adc_value_send
  5094  012328  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  5095  01232A  EC46  F097         	call	_BLE2_SendString	;wreg free
  5096  01232E                     
  5097                           ;application.c: 353:     sprintf((char*)result, "%02X", (uint8_t)adcValue);
  5098  01232E  0EDA               	movlw	low sendADCCValueBLE@result
  5099  012330  0100               	movlb	0	; () banked
  5100  012332  6FC6               	movwf	sprintf@s& (0+255),b
  5101  012334  0E00               	movlw	high sendADCCValueBLE@result
  5102  012336  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  5103  012338  0EF6               	movlw	low STR_1
  5104  01233A  6FC8               	movwf	sprintf@fmt& (0+255),b
  5105  01233C  0EFF               	movlw	high STR_1
  5106  01233E  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  5107  012340  C0D6  F0CA         	movff	sendADCCValueBLE@adcValue,?_sprintf+4
  5108  012344  6BCB               	clrf	(?_sprintf+5)& (0+255),b
  5109  012346  EC7E  F093         	call	_sprintf	;wreg free
  5110  01234A                     
  5111                           ;application.c: 354:     BLE2_SendString((const char*)result);
  5112  01234A  0EDA               	movlw	low sendADCCValueBLE@result
  5113  01234C  6E0E               	movwf	BLE2_SendString@command^0,c
  5114  01234E  0E00               	movlw	high sendADCCValueBLE@result
  5115  012350  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  5116  012352  EC46  F097         	call	_BLE2_SendString	;wreg free
  5117                           
  5118                           ;application.c: 355:     sprintf((char*)result, "%02X", (uint8_t)(adcValue >> 8));
  5119  012356  0EDA               	movlw	low sendADCCValueBLE@result
  5120  012358  0100               	movlb	0	; () banked
  5121  01235A  6FC6               	movwf	sprintf@s& (0+255),b
  5122  01235C  0E00               	movlw	high sendADCCValueBLE@result
  5123  01235E  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  5124  012360  0EF6               	movlw	low STR_1
  5125  012362  6FC8               	movwf	sprintf@fmt& (0+255),b
  5126  012364  0EFF               	movlw	high STR_1
  5127  012366  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  5128  012368  C0D6  F0D8         	movff	sendADCCValueBLE@adcValue,??_sendADCCValueBLE
  5129  01236C  C0D7  F0D9         	movff	sendADCCValueBLE@adcValue+1,??_sendADCCValueBLE+1
  5130  012370  C0D9  F0D8         	movff	??_sendADCCValueBLE+1,??_sendADCCValueBLE
  5131  012374  6BD9               	clrf	(??_sendADCCValueBLE+1)& (0+255),b
  5132  012376  51D8               	movf	??_sendADCCValueBLE& (0+255),w,b
  5133  012378  6FCA               	movwf	(?_sprintf+4)& (0+255),b
  5134  01237A  6BCB               	clrf	(?_sprintf+5)& (0+255),b
  5135  01237C  EC7E  F093         	call	_sprintf	;wreg free
  5136  012380                     
  5137                           ;application.c: 356:     BLE2_SendString((const char*)result);
  5138  012380  0EDA               	movlw	low sendADCCValueBLE@result
  5139  012382  6E0E               	movwf	BLE2_SendString@command^0,c
  5140  012384  0E00               	movlw	high sendADCCValueBLE@result
  5141  012386  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  5142  012388  EC46  F097         	call	_BLE2_SendString	;wreg free
  5143  01238C                     
  5144                           ;application.c: 357:     BLE2_SendString("\r\n");
  5145  01238C  0EFB               	movlw	low STR_3
  5146  01238E  6E0E               	movwf	BLE2_SendString@command^0,c
  5147  012390  0EFF               	movlw	high STR_3
  5148  012392  6E0F               	movwf	(BLE2_SendString@command+1)^0,c
  5149  012394  EC46  F097         	call	_BLE2_SendString	;wreg free
  5150  012398  0012               	return		;funcret
  5151  01239A                     __end_of_sendADCCValueBLE:
  5152                           	callstack 0
  5153                           
  5154 ;; *************** function _sprintf *****************
  5155 ;; Defined at:
  5156 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  s               2   23[BANK0 ] PTR unsigned char 
  5159 ;;		 -> sendADCCValueBLE@result(2), 
  5160 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  5161 ;;		 -> STR_2(5), STR_1(5), 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  f               6   33[BANK0 ] struct _IO_FILE
  5164 ;;  ap              2   31[BANK0 ] PTR void [1]
  5165 ;;		 -> ?_sprintf(2), 
  5166 ;;  ret             2    0        int 
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  2   23[BANK0 ] int 
  5169 ;; Registers used:
  5170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5176 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5179 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5180 ;;Total ram usage:       16 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; Hardware stack levels required when called:   12
  5183 ;; This function calls:
  5184 ;;		_vfprintf
  5185 ;; This function is called by:
  5186 ;;		_sendADCCValueBLE
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text32
  5191  0126FC                     __ptext32:
  5192                           	callstack 0
  5193  0126FC                     _sprintf:
  5194                           	callstack 16
  5195  0126FC  0ECA               	movlw	low (?_sprintf+4)
  5196  0126FE  0100               	movlb	0	; () banked
  5197  012700  6FCE               	movwf	sprintf@ap& (0+255),b
  5198  012702  0E00               	movlw	high (?_sprintf+4)
  5199  012704  6FCF               	movwf	(sprintf@ap+1)& (0+255),b
  5200  012706  C0C6  F0D0         	movff	sprintf@s,sprintf@f
  5201  01270A  C0C7  F0D1         	movff	sprintf@s+1,sprintf@f+1
  5202  01270E                     
  5203                           ; BSR set to: 0
  5204  01270E  0E00               	movlw	0
  5205  012710  6FD3               	movwf	(sprintf@f+3)& (0+255),b
  5206  012712  0E00               	movlw	0
  5207  012714  6FD2               	movwf	(sprintf@f+2)& (0+255),b
  5208  012716                     
  5209                           ; BSR set to: 0
  5210  012716  0E00               	movlw	0
  5211  012718  6FD5               	movwf	(sprintf@f+5)& (0+255),b
  5212  01271A  0E00               	movlw	0
  5213  01271C  6FD4               	movwf	(sprintf@f+4)& (0+255),b
  5214  01271E                     
  5215                           ; BSR set to: 0
  5216  01271E  0ED0               	movlw	low sprintf@f
  5217  012720  6FC0               	movwf	vfprintf@fp& (0+255),b
  5218  012722  0E00               	movlw	high sprintf@f
  5219  012724  6FC1               	movwf	(vfprintf@fp+1)& (0+255),b
  5220  012726  C0C8  F0C2         	movff	sprintf@fmt,vfprintf@fmt
  5221  01272A  C0C9  F0C3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5222  01272E  0ECE               	movlw	low sprintf@ap
  5223  012730  6FC4               	movwf	vfprintf@ap& (0+255),b
  5224  012732  0E00               	movlw	high sprintf@ap
  5225  012734  6FC5               	movwf	(vfprintf@ap+1)& (0+255),b
  5226  012736  EC6D  F092         	call	_vfprintf	;wreg free
  5227  01273A  0100               	movlb	0	; () banked
  5228  01273C  51D2               	movf	(sprintf@f+2)& (0+255),w,b
  5229  01273E  25C6               	addwf	sprintf@s& (0+255),w,b
  5230  012740  6ED9               	movwf	fsr2l,c
  5231  012742  51D3               	movf	(sprintf@f+3)& (0+255),w,b
  5232  012744  21C7               	addwfc	(sprintf@s+1)& (0+255),w,b
  5233  012746  6EDA               	movwf	fsr2h,c
  5234  012748  0E00               	movlw	0
  5235  01274A  6EDF               	movwf	indf2,c
  5236  01274C                     
  5237                           ; BSR set to: 0
  5238  01274C  0012               	return		;funcret
  5239  01274E                     __end_of_sprintf:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function _vfprintf *****************
  5243 ;; Defined at:
  5244 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  5247 ;;		 -> sprintf@f(6), 
  5248 ;;  fmt             2   19[BANK0 ] PTR const unsigned char 
  5249 ;;		 -> STR_2(5), STR_1(5), 
  5250 ;;  ap              2   21[BANK0 ] PTR PTR void 
  5251 ;;		 -> sprintf@ap(2), 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  cfmt            2   80[COMRAM] PTR unsigned char 
  5254 ;;		 -> STR_2(5), STR_1(5), 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  2   17[BANK0 ] int 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5264 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;Total ram usage:        8 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:   11
  5271 ;; This function calls:
  5272 ;;		_vfpfcnvrt
  5273 ;; This function is called by:
  5274 ;;		_sprintf
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text33
  5279  0124DA                     __ptext33:
  5280                           	callstack 0
  5281  0124DA                     _vfprintf:
  5282                           	callstack 16
  5283  0124DA                     
  5284                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5285  0124DA  C0C2  F051         	movff	vfprintf@fmt,vfprintf@cfmt
  5286  0124DE  C0C3  F052         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5287  0124E2                     
  5288                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5289  0124E2  0E00               	movlw	0
  5290  0124E4  0100               	movlb	0	; () banked
  5291  0124E6  6F79               	movwf	(_nout+1)& (0+255),b
  5292  0124E8  0E00               	movlw	0
  5293  0124EA  6F78               	movwf	_nout& (0+255),b
  5294                           
  5295                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5296  0124EC  EF8B  F092         	goto	l6523
  5297  0124F0                     l6521:
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5301  0124F0  C0C0  F04B         	movff	vfprintf@fp,vfpfcnvrt@fp
  5302  0124F4  C0C1  F04C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5303  0124F8  0E51               	movlw	low vfprintf@cfmt
  5304  0124FA  6E4D               	movwf	vfpfcnvrt@fmt^0,c
  5305  0124FC  0E00               	movlw	high vfprintf@cfmt
  5306  0124FE  6E4E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5307  012500  C0C4  F04F         	movff	vfprintf@ap,vfpfcnvrt@ap
  5308  012504  C0C5  F050         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5309  012508  ECF4  F083         	call	_vfpfcnvrt	;wreg free
  5310  01250C  504B               	movf	?_vfpfcnvrt^0,w,c
  5311  01250E  0100               	movlb	0	; () banked
  5312  012510  2778               	addwf	_nout& (0+255),f,b
  5313  012512  504C               	movf	(?_vfpfcnvrt+1)^0,w,c
  5314  012514  2379               	addwfc	(_nout+1)& (0+255),f,b
  5315  012516                     l6523:
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5319  012516  C051  FFF6         	movff	vfprintf@cfmt,tblptrl
  5320  01251A  C052  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5321  01251E                     	if	0	;tblptru may be non-zero
  5322  01251E                     	endif
  5323  01251E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5324  01251E  0E00               	movlw	low (__mediumconst shr (0+16))
  5325  012520  6EF8               	movwf	tblptru,c
  5326  012522                     	endif
  5327  012522  0008               	tblrd		*
  5328  012524  50F5               	movf	tablat,w,c
  5329  012526  0900               	iorlw	0
  5330  012528  A4D8               	btfss	status,2,c
  5331  01252A  EF99  F092         	goto	u5831
  5332  01252E  EF9B  F092         	goto	u5830
  5333  012532                     u5831:
  5334  012532  EF78  F092         	goto	l6521
  5335  012536                     u5830:
  5336  012536                     
  5337                           ; BSR set to: 0
  5338                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5339  012536  C078  F0C0         	movff	_nout,?_vfprintf
  5340  01253A  C079  F0C1         	movff	_nout+1,?_vfprintf+1
  5341  01253E                     
  5342                           ; BSR set to: 0
  5343  01253E  0012               	return		;funcret
  5344  012540                     __end_of_vfprintf:
  5345                           	callstack 0
  5346                           
  5347 ;; *************** function _vfpfcnvrt *****************
  5348 ;; Defined at:
  5349 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  fp              2   74[COMRAM] PTR struct _IO_FILE
  5352 ;;		 -> sprintf@f(6), 
  5353 ;;  fmt             2   76[COMRAM] PTR PTR unsigned char 
  5354 ;;		 -> vfprintf@cfmt(2), 
  5355 ;;  ap              2   78[COMRAM] PTR PTR void 
  5356 ;;		 -> sprintf@ap(2), 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  llu             8    4[BANK0 ] unsigned long long 
  5359 ;;  ll              8    0        long long 
  5360 ;;  f               4    0        long long 
  5361 ;;  vp              3    0        PTR void 
  5362 ;;  ct              3    0        unsigned char [3]
  5363 ;;  cp              3    0        PTR unsigned char 
  5364 ;;  done            2   13[BANK0 ] int 
  5365 ;;  i               2    0        int 
  5366 ;;  c               1   12[BANK0 ] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  2   74[COMRAM] int 
  5369 ;; Registers used:
  5370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5376 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5377 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5379 ;;      Totals:         6      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5380 ;;Total ram usage:       23 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:   10
  5383 ;; This function calls:
  5384 ;;		_atoi
  5385 ;;		_fputc
  5386 ;;		_isdigit
  5387 ;;		_xtoa
  5388 ;; This function is called by:
  5389 ;;		_vfprintf
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text34
  5394  0107E8                     __ptext34:
  5395                           	callstack 0
  5396  0107E8                     _vfpfcnvrt:
  5397                           	callstack 16
  5398  0107E8                     
  5399                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5400  0107E8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5401  0107EC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5402  0107F0  CFDE FFF6          	movff	postinc2,tblptrl
  5403  0107F4  CFDD FFF7          	movff	postdec2,tblptrh
  5404  0107F8                     	if	0	;tblptru may be non-zero
  5405  0107F8                     	endif
  5406  0107F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5407  0107F8  0E00               	movlw	low (__mediumconst shr (0+16))
  5408  0107FA  6EF8               	movwf	tblptru,c
  5409  0107FC                     	endif
  5410  0107FC  0008               	tblrd		*
  5411  0107FE  50F5               	movf	tablat,w,c
  5412  010800  0A25               	xorlw	37
  5413  010802  A4D8               	btfss	status,2,c
  5414  010804  EF06  F084         	goto	u5541
  5415  010808  EF08  F084         	goto	u5540
  5416  01080C                     u5541:
  5417  01080C  EFAC  F085         	goto	l6429
  5418  010810                     u5540:
  5419  010810                     
  5420                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5421  010810  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5422  010814  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5423  010818  2ADE               	incf	postinc2,f,c
  5424  01081A  0E00               	movlw	0
  5425  01081C  22DD               	addwfc	postdec2,f,c
  5426  01081E                     
  5427                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5428  01081E  0E00               	movlw	0
  5429  010820  0100               	movlb	0	; () banked
  5430  010822  6F7B               	movwf	(_width+1)& (0+255),b
  5431  010824  0E00               	movlw	0
  5432  010826  6F7A               	movwf	_width& (0+255),b
  5433  010828  C07A  F07E         	movff	_width,_flags
  5434  01082C  C07B  F07F         	movff	_width+1,_flags+1
  5435  010830                     
  5436                           ; BSR set to: 0
  5437                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5438  010830  697C               	setf	_prec& (0+255),b
  5439  010832  697D               	setf	(_prec+1)& (0+255),b
  5440  010834                     
  5441                           ; BSR set to: 0
  5442                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  5443  010834  0E00               	movlw	0
  5444  010836  6FBD               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5445  010838  0E00               	movlw	0
  5446  01083A  6FBC               	movwf	vfpfcnvrt@done& (0+255),b
  5447                           
  5448                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5449  01083C  EF68  F084         	goto	l6377
  5450  010840                     l6351:
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  5454  010840  817E               	bsf	_flags& (0+255),0,b
  5455  010842                     l6353:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  5459  010842  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5460  010846  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5461  01084A  2ADE               	incf	postinc2,f,c
  5462  01084C  0E00               	movlw	0
  5463  01084E  22DD               	addwfc	postdec2,f,c
  5464                           
  5465                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  5466  010850  EF68  F084         	goto	l6377
  5467  010854                     l6355:
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  5471  010854  837E               	bsf	_flags& (0+255),1,b
  5472  010856  EF21  F084         	goto	l6353
  5473  01085A                     l6359:
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  5477  01085A  857E               	bsf	_flags& (0+255),2,b
  5478  01085C  EF21  F084         	goto	l6353
  5479  010860                     l6363:
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  5483  010860  877E               	bsf	_flags& (0+255),3,b
  5484  010862  EF21  F084         	goto	l6353
  5485  010866                     l6367:
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  5489  010866  897E               	bsf	_flags& (0+255),4,b
  5490  010868  EF21  F084         	goto	l6353
  5491  01086C                     l6371:
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  5495  01086C  0E00               	movlw	0
  5496  01086E  6FBD               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5497  010870  0E01               	movlw	1
  5498  010872  6FBC               	movwf	vfpfcnvrt@done& (0+255),b
  5499                           
  5500                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  5501  010874  EF68  F084         	goto	l6377
  5502  010878                     l6375:
  5503                           
  5504                           ; BSR set to: 0
  5505  010878  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5506  01087C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5507  010880  CFDE FFF6          	movff	postinc2,tblptrl
  5508  010884  CFDD FFF7          	movff	postdec2,tblptrh
  5509  010888                     	if	0	;tblptru may be non-zero
  5510  010888                     	endif
  5511  010888                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5512  010888  0E00               	movlw	low (__mediumconst shr (0+16))
  5513  01088A  6EF8               	movwf	tblptru,c
  5514  01088C                     	endif
  5515  01088C  0008               	tblrd		*
  5516  01088E  50F5               	movf	tablat,w,c
  5517  010890  6FAF               	movwf	??_vfpfcnvrt& (0+255),b
  5518  010892  6BB0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5519                           
  5520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5521                           ; Switch size 1, requested type "simple"
  5522                           ; Number of cases is 1, Range of values is 0 to 0
  5523                           ; switch strategies available:
  5524                           ; Name         Instructions Cycles
  5525                           ; simple_byte            4     3 (average)
  5526                           ;	Chosen strategy is simple_byte
  5527  010894  51B0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5528  010896  0A00               	xorlw	0	; case 0
  5529  010898  B4D8               	btfsc	status,2,c
  5530  01089A  EF51  F084         	goto	l7481
  5531  01089E  EF36  F084         	goto	l6371
  5532  0108A2                     l7481:
  5533                           
  5534                           ; BSR set to: 0
  5535                           ; Switch size 1, requested type "simple"
  5536                           ; Number of cases is 5, Range of values is 32 to 48
  5537                           ; switch strategies available:
  5538                           ; Name         Instructions Cycles
  5539                           ; simple_byte           16     9 (average)
  5540                           ;	Chosen strategy is simple_byte
  5541  0108A2  51AF               	movf	??_vfpfcnvrt& (0+255),w,b
  5542  0108A4  0A20               	xorlw	32	; case 32
  5543  0108A6  B4D8               	btfsc	status,2,c
  5544  0108A8  EF30  F084         	goto	l6363
  5545  0108AC  0A03               	xorlw	3	; case 35
  5546  0108AE  B4D8               	btfsc	status,2,c
  5547  0108B0  EF33  F084         	goto	l6367
  5548  0108B4  0A08               	xorlw	8	; case 43
  5549  0108B6  B4D8               	btfsc	status,2,c
  5550  0108B8  EF2D  F084         	goto	l6359
  5551  0108BC  0A06               	xorlw	6	; case 45
  5552  0108BE  B4D8               	btfsc	status,2,c
  5553  0108C0  EF20  F084         	goto	l6351
  5554  0108C4  0A1D               	xorlw	29	; case 48
  5555  0108C6  B4D8               	btfsc	status,2,c
  5556  0108C8  EF2A  F084         	goto	l6355
  5557  0108CC  EF36  F084         	goto	l6371
  5558  0108D0                     l6377:
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5562  0108D0  51BC               	movf	vfpfcnvrt@done& (0+255),w,b
  5563  0108D2  11BD               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5564  0108D4  B4D8               	btfsc	status,2,c
  5565  0108D6  EF6F  F084         	goto	u5551
  5566  0108DA  EF71  F084         	goto	u5550
  5567  0108DE                     u5551:
  5568  0108DE  EF3C  F084         	goto	l6375
  5569  0108E2                     u5550:
  5570  0108E2                     
  5571                           ; BSR set to: 0
  5572                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  5573  0108E2  A17E               	btfss	_flags& (0+255),0,b
  5574  0108E4  EF76  F084         	goto	u5561
  5575  0108E8  EF78  F084         	goto	u5560
  5576  0108EC                     u5561:
  5577  0108EC  EF79  F084         	goto	l6381
  5578  0108F0                     u5560:
  5579  0108F0                     
  5580                           ; BSR set to: 0
  5581                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  5582  0108F0  937E               	bcf	_flags& (0+255),1,b
  5583  0108F2                     l6381:
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  5587  0108F2  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5588  0108F6  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5589  0108FA  CFDE FFF6          	movff	postinc2,tblptrl
  5590  0108FE  CFDD FFF7          	movff	postdec2,tblptrh
  5591  010902                     	if	0	;tblptru may be non-zero
  5592  010902                     	endif
  5593  010902                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5594  010902  0E00               	movlw	low (__mediumconst shr (0+16))
  5595  010904  6EF8               	movwf	tblptru,c
  5596  010906                     	endif
  5597  010906  0008               	tblrd		*
  5598  010908  50F5               	movf	tablat,w,c
  5599  01090A  0A2A               	xorlw	42
  5600  01090C  A4D8               	btfss	status,2,c
  5601  01090E  EF8B  F084         	goto	u5571
  5602  010912  EF8D  F084         	goto	u5570
  5603  010916                     u5571:
  5604  010916  EFB6  F084         	goto	l6389
  5605  01091A                     u5570:
  5606  01091A                     
  5607                           ; BSR set to: 0
  5608                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  5609  01091A  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5610  01091E  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5611  010922  2ADE               	incf	postinc2,f,c
  5612  010924  0E00               	movlw	0
  5613  010926  22DD               	addwfc	postdec2,f,c
  5614                           
  5615                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5616  010928  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5617  01092C  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5618  010930  CFDF F0AF          	movff	indf2,??_vfpfcnvrt
  5619  010934  0E02               	movlw	2
  5620  010936  26DE               	addwf	postinc2,f,c
  5621  010938  CFDF F0B0          	movff	indf2,??_vfpfcnvrt+1
  5622  01093C  0E00               	movlw	0
  5623  01093E  22DD               	addwfc	postdec2,f,c
  5624  010940  C0AF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5625  010944  C0B0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5626  010948  CFDE F07A          	movff	postinc2,_width
  5627  01094C  CFDD F07B          	movff	postdec2,_width+1
  5628  010950                     
  5629                           ; BSR set to: 0
  5630                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  5631  010950  BF7B               	btfsc	(_width+1)& (0+255),7,b
  5632  010952  EFAF  F084         	goto	u5580
  5633  010956  EFAD  F084         	goto	u5581
  5634  01095A                     u5581:
  5635  01095A  EFFC  F084         	goto	l6399
  5636  01095E                     u5580:
  5637  01095E                     
  5638                           ; BSR set to: 0
  5639                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  5640  01095E  817E               	bsf	_flags& (0+255),0,b
  5641                           
  5642                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  5643  010960  6D7A               	negf	_width& (0+255),b
  5644  010962  1F7B               	comf	(_width+1)& (0+255),f,b
  5645  010964  B0D8               	btfsc	status,0,c
  5646  010966  2B7B               	incf	(_width+1)& (0+255),f,b
  5647  010968  EFFC  F084         	goto	l6399
  5648  01096C                     l6389:
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  5652  01096C  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5653  010970  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5654  010974  CFDE F00E          	movff	postinc2,atoi@s
  5655  010978  CFDD F00F          	movff	postdec2,atoi@s+1
  5656  01097C  EC7E  F08B         	call	_atoi	;wreg free
  5657  010980  C00E  F07A         	movff	?_atoi,_width
  5658  010984  C00F  F07B         	movff	?_atoi+1,_width+1
  5659                           
  5660                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5661  010988  EFCD  F084         	goto	l6393
  5662  01098C                     l6391:
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  5666  01098C  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5667  010990  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5668  010994  2ADE               	incf	postinc2,f,c
  5669  010996  0E00               	movlw	0
  5670  010998  22DD               	addwfc	postdec2,f,c
  5671  01099A                     l6393:
  5672  01099A  0ED0               	movlw	208
  5673  01099C  0100               	movlb	0	; () banked
  5674  01099E  6FAF               	movwf	??_vfpfcnvrt& (0+255),b
  5675  0109A0  0EFF               	movlw	255
  5676  0109A2  6FB0               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5677  0109A4  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5678  0109A8  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5679  0109AC  CFDE FFF6          	movff	postinc2,tblptrl
  5680  0109B0  CFDD FFF7          	movff	postdec2,tblptrh
  5681  0109B4                     	if	0	;tblptru may be non-zero
  5682  0109B4                     	endif
  5683  0109B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5684  0109B4  0E00               	movlw	low (__mediumconst shr (0+16))
  5685  0109B6  6EF8               	movwf	tblptru,c
  5686  0109B8                     	endif
  5687  0109B8  0008               	tblrd		*
  5688  0109BA  50F5               	movf	tablat,w,c
  5689  0109BC  6FB1               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5690  0109BE  6BB2               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5691  0109C0  51AF               	movf	??_vfpfcnvrt& (0+255),w,b
  5692  0109C2  27B1               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5693  0109C4  51B0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5694  0109C6  23B2               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5695  0109C8  51B2               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5696  0109CA  E10A               	bnz	u5590
  5697  0109CC  0E0A               	movlw	10
  5698  0109CE  5DB1               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5699  0109D0  A0D8               	btfss	status,0,c
  5700  0109D2  EFED  F084         	goto	u5591
  5701  0109D6  EFF0  F084         	goto	u5590
  5702  0109DA                     u5591:
  5703  0109DA  0E01               	movlw	1
  5704  0109DC  EFF1  F084         	goto	u5600
  5705  0109E0                     u5590:
  5706  0109E0  0E00               	movlw	0
  5707  0109E2                     u5600:
  5708  0109E2  6FBE               	movwf	_vfpfcnvrt$2798& (0+255),b
  5709  0109E4  6BBF               	clrf	(_vfpfcnvrt$2798+1)& (0+255),b
  5710  0109E6                     
  5711                           ; BSR set to: 0
  5712  0109E6  51BE               	movf	_vfpfcnvrt$2798& (0+255),w,b
  5713  0109E8  11BF               	iorwf	(_vfpfcnvrt$2798+1)& (0+255),w,b
  5714  0109EA  A4D8               	btfss	status,2,c
  5715  0109EC  EFFA  F084         	goto	u5611
  5716  0109F0  EFFC  F084         	goto	u5610
  5717  0109F4                     u5611:
  5718  0109F4  EFC6  F084         	goto	l6391
  5719  0109F8                     u5610:
  5720  0109F8                     l6399:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5724  0109F8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5725  0109FC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5726  010A00  CFDE FFF6          	movff	postinc2,tblptrl
  5727  010A04  CFDD FFF7          	movff	postdec2,tblptrh
  5728  010A08                     	if	0	;tblptru may be non-zero
  5729  010A08                     	endif
  5730  010A08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5731  010A08  0E00               	movlw	low (__mediumconst shr (0+16))
  5732  010A0A  6EF8               	movwf	tblptru,c
  5733  010A0C                     	endif
  5734  010A0C  0008               	tblrd		*
  5735  010A0E  50F5               	movf	tablat,w,c
  5736  010A10  0A78               	xorlw	120
  5737  010A12  B4D8               	btfsc	status,2,c
  5738  010A14  EF0E  F085         	goto	u5621
  5739  010A18  EF10  F085         	goto	u5620
  5740  010A1C                     u5621:
  5741  010A1C  EF24  F085         	goto	l6403
  5742  010A20                     u5620:
  5743  010A20                     
  5744                           ; BSR set to: 0
  5745  010A20  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5746  010A24  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5747  010A28  CFDE FFF6          	movff	postinc2,tblptrl
  5748  010A2C  CFDD FFF7          	movff	postdec2,tblptrh
  5749  010A30                     	if	0	;tblptru may be non-zero
  5750  010A30                     	endif
  5751  010A30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5752  010A30  0E00               	movlw	low (__mediumconst shr (0+16))
  5753  010A32  6EF8               	movwf	tblptru,c
  5754  010A34                     	endif
  5755  010A34  0008               	tblrd		*
  5756  010A36  50F5               	movf	tablat,w,c
  5757  010A38  0A58               	xorlw	88
  5758  010A3A  A4D8               	btfss	status,2,c
  5759  010A3C  EF22  F085         	goto	u5631
  5760  010A40  EF24  F085         	goto	u5630
  5761  010A44                     u5631:
  5762  010A44  EF74  F085         	goto	l6413
  5763  010A48                     u5630:
  5764  010A48                     l6403:
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5768  010A48  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5769  010A4C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5770  010A50  CFDE FFF6          	movff	postinc2,tblptrl
  5771  010A54  CFDD FFF7          	movff	postdec2,tblptrh
  5772  010A58                     	if	0	;tblptru may be non-zero
  5773  010A58                     	endif
  5774  010A58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5775  010A58  0E00               	movlw	low (__mediumconst shr (0+16))
  5776  010A5A  6EF8               	movwf	tblptru,c
  5777  010A5C                     	endif
  5778  010A5C  0008               	tblrd		*
  5779  010A5E  CFF5 F0BB          	movff	tablat,vfpfcnvrt@c
  5780  010A62                     
  5781                           ; BSR set to: 0
  5782                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5783  010A62  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5784  010A66  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5785  010A6A  2ADE               	incf	postinc2,f,c
  5786  010A6C  0E00               	movlw	0
  5787  010A6E  22DD               	addwfc	postdec2,f,c
  5788  010A70                     
  5789                           ; BSR set to: 0
  5790                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5791  010A70  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5792  010A74  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5793  010A78  CFDF F0AF          	movff	indf2,??_vfpfcnvrt
  5794  010A7C  0E02               	movlw	2
  5795  010A7E  26DE               	addwf	postinc2,f,c
  5796  010A80  CFDF F0B0          	movff	indf2,??_vfpfcnvrt+1
  5797  010A84  0E00               	movlw	0
  5798  010A86  22DD               	addwfc	postdec2,f,c
  5799  010A88  C0AF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5800  010A8C  C0B0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5801  010A90  CFDE F0B1          	movff	postinc2,??_vfpfcnvrt+2
  5802  010A94  CFDD F0B2          	movff	postdec2,??_vfpfcnvrt+3
  5803  010A98  C0B1  F0B3         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5804  010A9C  C0B2  F0B4         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5805  010AA0  6BB5               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5806  010AA2  6BB6               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5807  010AA4  6BB7               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5808  010AA6  6BB8               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5809  010AA8  6BB9               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5810  010AAA  6BBA               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5811  010AAC                     
  5812                           ; BSR set to: 0
  5813                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5814  010AAC  C04B  F024         	movff	vfpfcnvrt@fp,xtoa@fp
  5815  010AB0  C04C  F025         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5816  010AB4  C0B3  F026         	movff	vfpfcnvrt@llu,xtoa@d
  5817  010AB8  C0B4  F027         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5818  010ABC  C0B5  F028         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5819  010AC0  C0B6  F029         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5820  010AC4  C0B7  F02A         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5821  010AC8  C0B8  F02B         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5822  010ACC  C0B9  F02C         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5823  010AD0  C0BA  F02D         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5824  010AD4  C0BB  F02E         	movff	vfpfcnvrt@c,xtoa@x
  5825  010AD8  EC38  F089         	call	_xtoa	;wreg free
  5826  010ADC  C024  F04B         	movff	?_xtoa,?_vfpfcnvrt
  5827  010AE0  C025  F04C         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5828  010AE4  EFC9  F085         	goto	l2113
  5829  010AE8                     l6413:
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5833  010AE8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5834  010AEC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5835  010AF0  CFDE FFF6          	movff	postinc2,tblptrl
  5836  010AF4  CFDD FFF7          	movff	postdec2,tblptrh
  5837  010AF8                     	if	0	;tblptru may be non-zero
  5838  010AF8                     	endif
  5839  010AF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5840  010AF8  0E00               	movlw	low (__mediumconst shr (0+16))
  5841  010AFA  6EF8               	movwf	tblptru,c
  5842  010AFC                     	endif
  5843  010AFC  0008               	tblrd		*
  5844  010AFE  50F5               	movf	tablat,w,c
  5845  010B00  0A25               	xorlw	37
  5846  010B02  A4D8               	btfss	status,2,c
  5847  010B04  EF86  F085         	goto	u5641
  5848  010B08  EF88  F085         	goto	u5640
  5849  010B0C                     u5641:
  5850  010B0C  EF9F  F085         	goto	l6423
  5851  010B10                     u5640:
  5852  010B10                     
  5853                           ; BSR set to: 0
  5854                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5855  010B10  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5856  010B14  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5857  010B18  2ADE               	incf	postinc2,f,c
  5858  010B1A  0E00               	movlw	0
  5859  010B1C  22DD               	addwfc	postdec2,f,c
  5860  010B1E                     
  5861                           ; BSR set to: 0
  5862                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5863  010B1E  0E00               	movlw	0
  5864  010B20  6E0A               	movwf	(fputc@c+1)^0,c
  5865  010B22  0E25               	movlw	37
  5866  010B24  6E09               	movwf	fputc@c^0,c
  5867  010B26  C04B  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  5868  010B2A  C04C  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5869  010B2E  EC6D  F08E         	call	_fputc	;wreg free
  5870  010B32                     l6419:
  5871                           
  5872                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5873  010B32  0E00               	movlw	0
  5874  010B34  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  5875  010B36  0E01               	movlw	1
  5876  010B38  6E4B               	movwf	?_vfpfcnvrt^0,c
  5877  010B3A  EFC9  F085         	goto	l2113
  5878  010B3E                     l6423:
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5882  010B3E  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5883  010B42  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5884  010B46  2ADE               	incf	postinc2,f,c
  5885  010B48  0E00               	movlw	0
  5886  010B4A  22DD               	addwfc	postdec2,f,c
  5887  010B4C                     
  5888                           ; BSR set to: 0
  5889                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5890  010B4C  0E00               	movlw	0
  5891  010B4E  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  5892  010B50  0E00               	movlw	0
  5893  010B52  6E4B               	movwf	?_vfpfcnvrt^0,c
  5894  010B54  EFC9  F085         	goto	l2113
  5895  010B58                     l6429:
  5896                           
  5897                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5898  010B58  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5899  010B5C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5900  010B60  CFDE FFF6          	movff	postinc2,tblptrl
  5901  010B64  CFDD FFF7          	movff	postdec2,tblptrh
  5902  010B68                     	if	0	;tblptru may be non-zero
  5903  010B68                     	endif
  5904  010B68                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5905  010B68  0E00               	movlw	low (__mediumconst shr (0+16))
  5906  010B6A  6EF8               	movwf	tblptru,c
  5907  010B6C                     	endif
  5908  010B6C  0008               	tblrd		*
  5909  010B6E  50F5               	movf	tablat,w,c
  5910  010B70  6E09               	movwf	fputc@c^0,c
  5911  010B72  6A0A               	clrf	(fputc@c+1)^0,c
  5912  010B74  C04B  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  5913  010B78  C04C  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5914  010B7C  EC6D  F08E         	call	_fputc	;wreg free
  5915  010B80                     
  5916                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5917  010B80  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5918  010B84  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5919  010B88  2ADE               	incf	postinc2,f,c
  5920  010B8A  0E00               	movlw	0
  5921  010B8C  22DD               	addwfc	postdec2,f,c
  5922  010B8E  EF99  F085         	goto	l6419
  5923  010B92                     l2113:
  5924  010B92  0012               	return		;funcret
  5925  010B94                     __end_of_vfpfcnvrt:
  5926                           	callstack 0
  5927                           
  5928 ;; *************** function _xtoa *****************
  5929 ;; Defined at:
  5930 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  5933 ;;		 -> sprintf@f(6), 
  5934 ;;  d               8   37[COMRAM] unsigned long long 
  5935 ;;  x               1   45[COMRAM] unsigned char 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  n               8   62[COMRAM] unsigned long long 
  5938 ;;  c               2   72[COMRAM] int 
  5939 ;;  i               2   70[COMRAM] int 
  5940 ;;  w               2   60[COMRAM] int 
  5941 ;;  p               2   58[COMRAM] int 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  2   35[COMRAM] int 
  5944 ;; Registers used:
  5945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5951 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;Total ram usage:       39 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    9
  5958 ;; This function calls:
  5959 ;;		_isalpha
  5960 ;;		_isupper
  5961 ;;		_pad
  5962 ;;		_toupper
  5963 ;; This function is called by:
  5964 ;;		_vfpfcnvrt
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           	psect	text35
  5969  011270                     __ptext35:
  5970                           	callstack 0
  5971  011270                     _xtoa:
  5972                           	callstack 16
  5973  011270                     
  5974                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5975  011270  0100               	movlb	0	; () banked
  5976  011272  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  5977  011274  EF3E  F089         	goto	u5291
  5978  011278  EF40  F089         	goto	u5290
  5979  01127C                     u5291:
  5980  01127C  EF41  F089         	goto	l6235
  5981  011280                     u5290:
  5982  011280                     
  5983                           ; BSR set to: 0
  5984                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5985  011280  937E               	bcf	_flags& (0+255),1,b
  5986  011282                     l6235:
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5990  011282  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  5991  011284  EF4E  F089         	goto	u5300
  5992  011288  517D               	movf	(_prec+1)& (0+255),w,b
  5993  01128A  E106               	bnz	u5301
  5994  01128C  057C               	decf	_prec& (0+255),w,b
  5995  01128E  B0D8               	btfsc	status,0,c
  5996  011290  EF4C  F089         	goto	u5301
  5997  011294  EF4E  F089         	goto	u5300
  5998  011298                     u5301:
  5999  011298  EF54  F089         	goto	l2059
  6000  01129C                     u5300:
  6001  01129C                     
  6002                           ; BSR set to: 0
  6003  01129C  0E00               	movlw	0
  6004  01129E  6E3C               	movwf	(xtoa@p+1)^0,c
  6005  0112A0  0E01               	movlw	1
  6006  0112A2  6E3B               	movwf	xtoa@p^0,c
  6007  0112A4  EF58  F089         	goto	l2061
  6008  0112A8                     l2059:
  6009                           
  6010                           ; BSR set to: 0
  6011  0112A8  C07C  F03B         	movff	_prec,xtoa@p
  6012  0112AC  C07D  F03C         	movff	_prec+1,xtoa@p+1
  6013  0112B0                     l2061:
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  6017  0112B0  C07A  F03D         	movff	_width,xtoa@w
  6018  0112B4  C07B  F03E         	movff	_width+1,xtoa@w+1
  6019                           
  6020                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  6021  0112B8  A97E               	btfss	_flags& (0+255),4,b
  6022  0112BA  EF61  F089         	goto	u5311
  6023  0112BE  EF63  F089         	goto	u5310
  6024  0112C2                     u5311:
  6025  0112C2  EF67  F089         	goto	l6241
  6026  0112C6                     u5310:
  6027  0112C6                     
  6028                           ; BSR set to: 0
  6029                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  6030  0112C6  0EFE               	movlw	254
  6031  0112C8  263D               	addwf	xtoa@w^0,f,c
  6032  0112CA  0EFF               	movlw	255
  6033  0112CC  223E               	addwfc	(xtoa@w+1)^0,f,c
  6034  0112CE                     l6241:
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 661:     n = d;
  6038  0112CE  C026  F03F         	movff	xtoa@d,xtoa@n
  6039  0112D2  C027  F040         	movff	xtoa@d+1,xtoa@n+1
  6040  0112D6  C028  F041         	movff	xtoa@d+2,xtoa@n+2
  6041  0112DA  C029  F042         	movff	xtoa@d+3,xtoa@n+3
  6042  0112DE  C02A  F043         	movff	xtoa@d+4,xtoa@n+4
  6043  0112E2  C02B  F044         	movff	xtoa@d+5,xtoa@n+5
  6044  0112E6  C02C  F045         	movff	xtoa@d+6,xtoa@n+6
  6045  0112EA  C02D  F046         	movff	xtoa@d+7,xtoa@n+7
  6046  0112EE                     
  6047                           ; BSR set to: 0
  6048                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  6049  0112EE  0E00               	movlw	0
  6050  0112F0  6E48               	movwf	(xtoa@i+1)^0,c
  6051  0112F2  0E1F               	movlw	31
  6052  0112F4  6E47               	movwf	xtoa@i^0,c
  6053  0112F6                     
  6054                           ; BSR set to: 0
  6055                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  6056  0112F6  0E00               	movlw	0
  6057  0112F8  6FAB               	movwf	(_dbuf+31)& (0+255),b
  6058                           
  6059                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6060  0112FA  EF32  F08A         	goto	l6277
  6061  0112FE                     l6247:
  6062                           
  6063                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 665:         --i;
  6064  0112FE  0647               	decf	xtoa@i^0,f,c
  6065  011300  A0D8               	btfss	status,0,c
  6066  011302  0648               	decf	(xtoa@i+1)^0,f,c
  6067  011304                     
  6068                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  6069  011304  0E0F               	movlw	15
  6070  011306  143F               	andwf	xtoa@n^0,w,c
  6071  011308  6E49               	movwf	xtoa@c^0,c
  6072  01130A  6A4A               	clrf	(xtoa@c+1)^0,c
  6073  01130C                     
  6074                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  6075  01130C  BE4A               	btfsc	(xtoa@c+1)^0,7,c
  6076  01130E  EF92  F089         	goto	u5321
  6077  011312  504A               	movf	(xtoa@c+1)^0,w,c
  6078  011314  E109               	bnz	u5320
  6079  011316  0E0A               	movlw	10
  6080  011318  5C49               	subwf	xtoa@c^0,w,c
  6081  01131A  A0D8               	btfss	status,0,c
  6082  01131C  EF92  F089         	goto	u5321
  6083  011320  EF94  F089         	goto	u5320
  6084  011324                     u5321:
  6085  011324  EF9C  F089         	goto	l6255
  6086  011328                     u5320:
  6087  011328  0E57               	movlw	87
  6088  01132A  2449               	addwf	xtoa@c^0,w,c
  6089  01132C  6E49               	movwf	xtoa@c^0,c
  6090  01132E  0E00               	movlw	0
  6091  011330  204A               	addwfc	(xtoa@c+1)^0,w,c
  6092  011332  6E4A               	movwf	(xtoa@c+1)^0,c
  6093  011334  EFA2  F089         	goto	l2068
  6094  011338                     l6255:
  6095  011338  0E30               	movlw	48
  6096  01133A  2449               	addwf	xtoa@c^0,w,c
  6097  01133C  6E49               	movwf	xtoa@c^0,c
  6098  01133E  0E00               	movlw	0
  6099  011340  204A               	addwfc	(xtoa@c+1)^0,w,c
  6100  011342  6E4A               	movwf	(xtoa@c+1)^0,c
  6101  011344                     l2068:
  6102  011344  0EBF               	movlw	191
  6103  011346  6E2F               	movwf	??_xtoa^0,c
  6104  011348  0EFF               	movlw	255
  6105  01134A  6E30               	movwf	(??_xtoa+1)^0,c
  6106  01134C  502E               	movf	xtoa@x^0,w,c
  6107  01134E  6E31               	movwf	(??_xtoa+2)^0,c
  6108  011350  6A32               	clrf	(??_xtoa+3)^0,c
  6109  011352  502F               	movf	??_xtoa^0,w,c
  6110  011354  2631               	addwf	(??_xtoa+2)^0,f,c
  6111  011356  5030               	movf	(??_xtoa+1)^0,w,c
  6112  011358  2232               	addwfc	(??_xtoa+3)^0,f,c
  6113  01135A  5032               	movf	(??_xtoa+3)^0,w,c
  6114  01135C  E10A               	bnz	u5330
  6115  01135E  0E1A               	movlw	26
  6116  011360  5C31               	subwf	(??_xtoa+2)^0,w,c
  6117  011362  A0D8               	btfss	status,0,c
  6118  011364  EFB6  F089         	goto	u5331
  6119  011368  EFB9  F089         	goto	u5330
  6120  01136C                     u5331:
  6121  01136C  0E01               	movlw	1
  6122  01136E  EFBA  F089         	goto	u5340
  6123  011372                     u5330:
  6124  011372  0E00               	movlw	0
  6125  011374                     u5340:
  6126  011374  6E37               	movwf	_xtoa$2782^0,c
  6127  011376  6A38               	clrf	(_xtoa$2782+1)^0,c
  6128  011378  5037               	movf	_xtoa$2782^0,w,c
  6129  01137A  1038               	iorwf	(_xtoa$2782+1)^0,w,c
  6130  01137C  B4D8               	btfsc	status,2,c
  6131  01137E  EFC3  F089         	goto	u5351
  6132  011382  EFC5  F089         	goto	u5350
  6133  011386                     u5351:
  6134  011386  EFF5  F089         	goto	l6269
  6135  01138A                     u5350:
  6136  01138A  0E9F               	movlw	159
  6137  01138C  6E2F               	movwf	??_xtoa^0,c
  6138  01138E  0EFF               	movlw	255
  6139  011390  6E30               	movwf	(??_xtoa+1)^0,c
  6140  011392  0E20               	movlw	32
  6141  011394  1049               	iorwf	xtoa@c^0,w,c
  6142  011396  6E31               	movwf	(??_xtoa+2)^0,c
  6143  011398  0E00               	movlw	0
  6144  01139A  104A               	iorwf	(xtoa@c+1)^0,w,c
  6145  01139C  6E32               	movwf	(??_xtoa+3)^0,c
  6146  01139E  502F               	movf	??_xtoa^0,w,c
  6147  0113A0  2631               	addwf	(??_xtoa+2)^0,f,c
  6148  0113A2  5030               	movf	(??_xtoa+1)^0,w,c
  6149  0113A4  2232               	addwfc	(??_xtoa+3)^0,f,c
  6150  0113A6  5032               	movf	(??_xtoa+3)^0,w,c
  6151  0113A8  E10A               	bnz	u5360
  6152  0113AA  0E1A               	movlw	26
  6153  0113AC  5C31               	subwf	(??_xtoa+2)^0,w,c
  6154  0113AE  A0D8               	btfss	status,0,c
  6155  0113B0  EFDC  F089         	goto	u5361
  6156  0113B4  EFDF  F089         	goto	u5360
  6157  0113B8                     u5361:
  6158  0113B8  0E01               	movlw	1
  6159  0113BA  EFE0  F089         	goto	u5370
  6160  0113BE                     u5360:
  6161  0113BE  0E00               	movlw	0
  6162  0113C0                     u5370:
  6163  0113C0  6E39               	movwf	_xtoa$2783^0,c
  6164  0113C2  6A3A               	clrf	(_xtoa$2783+1)^0,c
  6165  0113C4  5039               	movf	_xtoa$2783^0,w,c
  6166  0113C6  103A               	iorwf	(_xtoa$2783+1)^0,w,c
  6167  0113C8  B4D8               	btfsc	status,2,c
  6168  0113CA  EFE9  F089         	goto	u5381
  6169  0113CE  EFEB  F089         	goto	u5380
  6170  0113D2                     u5381:
  6171  0113D2  EFF5  F089         	goto	l6269
  6172  0113D6                     u5380:
  6173  0113D6                     
  6174                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  6175  0113D6  C049  F00D         	movff	xtoa@c,toupper@c
  6176  0113DA  C04A  F00E         	movff	xtoa@c+1,toupper@c+1
  6177  0113DE  ECA0  F092         	call	_toupper	;wreg free
  6178  0113E2  C00D  F049         	movff	?_toupper,xtoa@c
  6179  0113E6  C00E  F04A         	movff	?_toupper+1,xtoa@c+1
  6180  0113EA                     l6269:
  6181                           
  6182                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  6183  0113EA  0E8C               	movlw	low _dbuf
  6184  0113EC  2447               	addwf	xtoa@i^0,w,c
  6185  0113EE  6ED9               	movwf	fsr2l,c
  6186  0113F0  0E00               	movlw	high _dbuf
  6187  0113F2  2048               	addwfc	(xtoa@i+1)^0,w,c
  6188  0113F4  6EDA               	movwf	fsr2h,c
  6189  0113F6  C049  FFDF         	movff	xtoa@c,indf2
  6190  0113FA                     
  6191                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 672:         --p;
  6192  0113FA  063B               	decf	xtoa@p^0,f,c
  6193  0113FC  A0D8               	btfss	status,0,c
  6194  0113FE  063C               	decf	(xtoa@p+1)^0,f,c
  6195  011400                     
  6196                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 673:         --w;
  6197  011400  063D               	decf	xtoa@w^0,f,c
  6198  011402  A0D8               	btfss	status,0,c
  6199  011404  063E               	decf	(xtoa@w+1)^0,f,c
  6200  011406                     
  6201                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  6202  011406  C03F  F02F         	movff	xtoa@n,??_xtoa
  6203  01140A  C040  F030         	movff	xtoa@n+1,??_xtoa+1
  6204  01140E  C041  F031         	movff	xtoa@n+2,??_xtoa+2
  6205  011412  C042  F032         	movff	xtoa@n+3,??_xtoa+3
  6206  011416  C043  F033         	movff	xtoa@n+4,??_xtoa+4
  6207  01141A  C044  F034         	movff	xtoa@n+5,??_xtoa+5
  6208  01141E  C045  F035         	movff	xtoa@n+6,??_xtoa+6
  6209  011422  C046  F036         	movff	xtoa@n+7,??_xtoa+7
  6210  011426  0E05               	movlw	5
  6211  011428  EF1F  F08A         	goto	u5390
  6212  01142C                     u5395:
  6213  01142C  90D8               	bcf	status,0,c
  6214  01142E  3236               	rrcf	(??_xtoa+7)^0,f,c
  6215  011430  3235               	rrcf	(??_xtoa+6)^0,f,c
  6216  011432  3234               	rrcf	(??_xtoa+5)^0,f,c
  6217  011434  3233               	rrcf	(??_xtoa+4)^0,f,c
  6218  011436  3232               	rrcf	(??_xtoa+3)^0,f,c
  6219  011438  3231               	rrcf	(??_xtoa+2)^0,f,c
  6220  01143A  3230               	rrcf	(??_xtoa+1)^0,f,c
  6221  01143C  322F               	rrcf	??_xtoa^0,f,c
  6222  01143E                     u5390:
  6223  01143E  2EE8               	decfsz	wreg,f,c
  6224  011440  EF16  F08A         	goto	u5395
  6225  011444  C02F  F03F         	movff	??_xtoa,xtoa@n
  6226  011448  C030  F040         	movff	??_xtoa+1,xtoa@n+1
  6227  01144C  C031  F041         	movff	??_xtoa+2,xtoa@n+2
  6228  011450  C032  F042         	movff	??_xtoa+3,xtoa@n+3
  6229  011454  C033  F043         	movff	??_xtoa+4,xtoa@n+4
  6230  011458  C034  F044         	movff	??_xtoa+5,xtoa@n+5
  6231  01145C  C035  F045         	movff	??_xtoa+6,xtoa@n+6
  6232  011460  C036  F046         	movff	??_xtoa+7,xtoa@n+7
  6233  011464                     l6277:
  6234                           
  6235                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6236  011464  BE48               	btfsc	(xtoa@i+1)^0,7,c
  6237  011466  EF3E  F08A         	goto	u5401
  6238  01146A  5048               	movf	(xtoa@i+1)^0,w,c
  6239  01146C  E109               	bnz	u5400
  6240  01146E  0E02               	movlw	2
  6241  011470  5C47               	subwf	xtoa@i^0,w,c
  6242  011472  A0D8               	btfss	status,0,c
  6243  011474  EF3E  F08A         	goto	u5401
  6244  011478  EF40  F08A         	goto	u5400
  6245  01147C                     u5401:
  6246  01147C  EF71  F08A         	goto	l2082
  6247  011480                     u5400:
  6248  011480  503F               	movf	xtoa@n^0,w,c
  6249  011482  1040               	iorwf	(xtoa@n+1)^0,w,c
  6250  011484  1041               	iorwf	(xtoa@n+2)^0,w,c
  6251  011486  1042               	iorwf	(xtoa@n+3)^0,w,c
  6252  011488  1043               	iorwf	(xtoa@n+4)^0,w,c
  6253  01148A  1044               	iorwf	(xtoa@n+5)^0,w,c
  6254  01148C  1045               	iorwf	(xtoa@n+6)^0,w,c
  6255  01148E  1046               	iorwf	(xtoa@n+7)^0,w,c
  6256  011490  A4D8               	btfss	status,2,c
  6257  011492  EF4D  F08A         	goto	u5411
  6258  011496  EF4F  F08A         	goto	u5410
  6259  01149A                     u5411:
  6260  01149A  EF7F  F089         	goto	l6247
  6261  01149E                     u5410:
  6262  01149E  BE3C               	btfsc	(xtoa@p+1)^0,7,c
  6263  0114A0  EF5C  F08A         	goto	u5420
  6264  0114A4  503C               	movf	(xtoa@p+1)^0,w,c
  6265  0114A6  E106               	bnz	u5421
  6266  0114A8  043B               	decf	xtoa@p^0,w,c
  6267  0114AA  B0D8               	btfsc	status,0,c
  6268  0114AC  EF5A  F08A         	goto	u5421
  6269  0114B0  EF5C  F08A         	goto	u5420
  6270  0114B4                     u5421:
  6271  0114B4  EF7F  F089         	goto	l6247
  6272  0114B8                     u5420:
  6273  0114B8  BE3E               	btfsc	(xtoa@w+1)^0,7,c
  6274  0114BA  EF67  F08A         	goto	u5431
  6275  0114BE  503E               	movf	(xtoa@w+1)^0,w,c
  6276  0114C0  E108               	bnz	u5430
  6277  0114C2  043D               	decf	xtoa@w^0,w,c
  6278  0114C4  A0D8               	btfss	status,0,c
  6279  0114C6  EF67  F08A         	goto	u5431
  6280  0114CA  EF69  F08A         	goto	u5430
  6281  0114CE                     u5431:
  6282  0114CE  EF71  F08A         	goto	l2082
  6283  0114D2                     u5430:
  6284  0114D2  0100               	movlb	0	; () banked
  6285  0114D4  B37E               	btfsc	_flags& (0+255),1,b
  6286  0114D6  EF6F  F08A         	goto	u5441
  6287  0114DA  EF71  F08A         	goto	u5440
  6288  0114DE                     u5441:
  6289  0114DE  EF7F  F089         	goto	l6247
  6290  0114E2                     u5440:
  6291  0114E2                     l2082:
  6292                           
  6293                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  6294  0114E2  0100               	movlb	0	; () banked
  6295  0114E4  A97E               	btfss	_flags& (0+255),4,b
  6296  0114E6  EF77  F08A         	goto	u5451
  6297  0114EA  EF79  F08A         	goto	u5450
  6298  0114EE                     u5451:
  6299  0114EE  EF8F  F08A         	goto	l6293
  6300  0114F2                     u5450:
  6301  0114F2                     
  6302                           ; BSR set to: 0
  6303                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 679:         --i;
  6304  0114F2  0647               	decf	xtoa@i^0,f,c
  6305  0114F4  A0D8               	btfss	status,0,c
  6306  0114F6  0648               	decf	(xtoa@i+1)^0,f,c
  6307  0114F8                     
  6308                           ; BSR set to: 0
  6309                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  6310  0114F8  0E8C               	movlw	low _dbuf
  6311  0114FA  2447               	addwf	xtoa@i^0,w,c
  6312  0114FC  6ED9               	movwf	fsr2l,c
  6313  0114FE  0E00               	movlw	high _dbuf
  6314  011500  2048               	addwfc	(xtoa@i+1)^0,w,c
  6315  011502  6EDA               	movwf	fsr2h,c
  6316  011504  C02E  FFDF         	movff	xtoa@x,indf2
  6317  011508                     
  6318                           ; BSR set to: 0
  6319                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 681:         --i;
  6320  011508  0647               	decf	xtoa@i^0,f,c
  6321  01150A  A0D8               	btfss	status,0,c
  6322  01150C  0648               	decf	(xtoa@i+1)^0,f,c
  6323                           
  6324                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  6325  01150E  0E8C               	movlw	low _dbuf
  6326  011510  2447               	addwf	xtoa@i^0,w,c
  6327  011512  6ED9               	movwf	fsr2l,c
  6328  011514  0E00               	movlw	high _dbuf
  6329  011516  2048               	addwfc	(xtoa@i+1)^0,w,c
  6330  011518  6EDA               	movwf	fsr2h,c
  6331  01151A  0E30               	movlw	48
  6332  01151C  6EDF               	movwf	indf2,c
  6333  01151E                     l6293:
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  6337  01151E  C024  F019         	movff	xtoa@fp,pad@fp
  6338  011522  C025  F01A         	movff	xtoa@fp+1,pad@fp+1
  6339  011526  0E8C               	movlw	low _dbuf
  6340  011528  2447               	addwf	xtoa@i^0,w,c
  6341  01152A  6E1B               	movwf	pad@buf^0,c
  6342  01152C  0E00               	movlw	high _dbuf
  6343  01152E  2048               	addwfc	(xtoa@i+1)^0,w,c
  6344  011530  6E1C               	movwf	(pad@buf+1)^0,c
  6345  011532  C03D  F01D         	movff	xtoa@w,pad@p
  6346  011536  C03E  F01E         	movff	xtoa@w+1,pad@p+1
  6347  01153A  ECD2  F08E         	call	_pad	;wreg free
  6348  01153E  C019  F024         	movff	?_pad,?_xtoa
  6349  011542  C01A  F025         	movff	?_pad+1,?_xtoa+1
  6350  011546  0012               	return		;funcret
  6351  011548                     __end_of_xtoa:
  6352                           	callstack 0
  6353                           
  6354 ;; *************** function _toupper *****************
  6355 ;; Defined at:
  6356 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\toupper.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  c               2   12[COMRAM] int 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  2   12[COMRAM] int 
  6363 ;; Registers used:
  6364 ;;		wreg, status,2, status,0
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6371 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6372 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6373 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6374 ;;Total ram usage:        8 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    5
  6377 ;; This function calls:
  6378 ;;		_islower
  6379 ;; This function is called by:
  6380 ;;		_xtoa
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text36
  6385  012540                     __ptext36:
  6386                           	callstack 0
  6387  012540                     _toupper:
  6388                           	callstack 19
  6389  012540  0E9F               	movlw	159
  6390  012542  6E0F               	movwf	??_toupper^0,c
  6391  012544  0EFF               	movlw	255
  6392  012546  6E10               	movwf	(??_toupper+1)^0,c
  6393  012548  C00D  F011         	movff	toupper@c,??_toupper+2
  6394  01254C  C00E  F012         	movff	toupper@c+1,??_toupper+3
  6395  012550  500F               	movf	??_toupper^0,w,c
  6396  012552  2611               	addwf	(??_toupper+2)^0,f,c
  6397  012554  5010               	movf	(??_toupper+1)^0,w,c
  6398  012556  2212               	addwfc	(??_toupper+3)^0,f,c
  6399  012558  5012               	movf	(??_toupper+3)^0,w,c
  6400  01255A  E10A               	bnz	u5220
  6401  01255C  0E1A               	movlw	26
  6402  01255E  5C11               	subwf	(??_toupper+2)^0,w,c
  6403  012560  A0D8               	btfss	status,0,c
  6404  012562  EFB5  F092         	goto	u5221
  6405  012566  EFB8  F092         	goto	u5220
  6406  01256A                     u5221:
  6407  01256A  0E01               	movlw	1
  6408  01256C  EFB9  F092         	goto	u5230
  6409  012570                     u5220:
  6410  012570  0E00               	movlw	0
  6411  012572                     u5230:
  6412  012572  6E13               	movwf	_toupper$2902^0,c
  6413  012574  6A14               	clrf	(_toupper$2902+1)^0,c
  6414  012576  5013               	movf	_toupper$2902^0,w,c
  6415  012578  1014               	iorwf	(_toupper$2902+1)^0,w,c
  6416  01257A  B4D8               	btfsc	status,2,c
  6417  01257C  EFC2  F092         	goto	u5241
  6418  012580  EFC4  F092         	goto	u5240
  6419  012584                     u5241:
  6420  012584  EFCA  F092         	goto	l2225
  6421  012588                     u5240:
  6422  012588  0E5F               	movlw	95
  6423  01258A  140D               	andwf	toupper@c^0,w,c
  6424  01258C  6E0D               	movwf	?_toupper^0,c
  6425  01258E  6A0E               	clrf	(?_toupper+1)^0,c
  6426  012590  EFCE  F092         	goto	l2230
  6427  012594                     l2225:
  6428  012594  C00D  F00D         	movff	toupper@c,?_toupper
  6429  012598  C00E  F00E         	movff	toupper@c+1,?_toupper+1
  6430  01259C                     l2230:
  6431  01259C  0012               	return		;funcret
  6432  01259E                     __end_of_toupper:
  6433                           	callstack 0
  6434                           
  6435 ;; *************** function _islower *****************
  6436 ;; Defined at:
  6437 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\islower.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  c               2    6[COMRAM] int 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;		None
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  2    6[COMRAM] int 
  6444 ;; Registers used:
  6445 ;;		wreg, status,2, status,0
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6453 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6454 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6455 ;;Total ram usage:        6 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; Hardware stack levels required when called:    4
  6458 ;; This function calls:
  6459 ;;		Nothing
  6460 ;; This function is called by:
  6461 ;;		_toupper
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           	psect	text37
  6466  012B1C                     __ptext37:
  6467                           	callstack 0
  6468  012B1C                     _islower:
  6469                           	callstack 19
  6470  012B1C  0E9F               	movlw	159
  6471  012B1E  6E09               	movwf	??_islower^0,c
  6472  012B20  0EFF               	movlw	255
  6473  012B22  6E0A               	movwf	(??_islower+1)^0,c
  6474  012B24  C007  F00B         	movff	islower@c,??_islower+2
  6475  012B28  C008  F00C         	movff	islower@c+1,??_islower+3
  6476  012B2C  5009               	movf	??_islower^0,w,c
  6477  012B2E  260B               	addwf	(??_islower+2)^0,f,c
  6478  012B30  500A               	movf	(??_islower+1)^0,w,c
  6479  012B32  220C               	addwfc	(??_islower+3)^0,f,c
  6480  012B34  500C               	movf	(??_islower+3)^0,w,c
  6481  012B36  E10A               	bnz	u5120
  6482  012B38  0E1A               	movlw	26
  6483  012B3A  5C0B               	subwf	(??_islower+2)^0,w,c
  6484  012B3C  A0D8               	btfss	status,0,c
  6485  012B3E  EFA3  F095         	goto	u5121
  6486  012B42  EFA6  F095         	goto	u5120
  6487  012B46                     u5121:
  6488  012B46  0E01               	movlw	1
  6489  012B48  EFA7  F095         	goto	u5130
  6490  012B4C                     u5120:
  6491  012B4C  0E00               	movlw	0
  6492  012B4E                     u5130:
  6493  012B4E  6E07               	movwf	?_islower^0,c
  6494  012B50  6A08               	clrf	(?_islower+1)^0,c
  6495  012B52  0012               	return		;funcret
  6496  012B54                     __end_of_islower:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function _pad *****************
  6500 ;; Defined at:
  6501 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  6504 ;;		 -> sprintf@f(6), 
  6505 ;;  buf             2   26[COMRAM] PTR unsigned char 
  6506 ;;		 -> dbuf(32), 
  6507 ;;  p               2   28[COMRAM] int 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  w               2   33[COMRAM] int 
  6510 ;;  i               2   31[COMRAM] int 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  2   24[COMRAM] int 
  6513 ;; Registers used:
  6514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6520 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6521 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6522 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6523 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6524 ;;Total ram usage:       11 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    8
  6527 ;; This function calls:
  6528 ;;		_fputc
  6529 ;;		_fputs
  6530 ;;		_strlen
  6531 ;; This function is called by:
  6532 ;;		_xtoa
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text38
  6537  011DA4                     __ptext38:
  6538                           	callstack 0
  6539  011DA4                     _pad:
  6540                           	callstack 16
  6541  011DA4                     
  6542                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6543  011DA4  0100               	movlb	0	; () banked
  6544  011DA6  A17E               	btfss	_flags& (0+255),0,b
  6545  011DA8  EFD8  F08E         	goto	u5141
  6546  011DAC  EFDA  F08E         	goto	u5140
  6547  011DB0                     u5141:
  6548  011DB0  EFE4  F08E         	goto	l6179
  6549  011DB4                     u5140:
  6550  011DB4                     
  6551                           ; BSR set to: 0
  6552                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6553  011DB4  C01B  F012         	movff	pad@buf,fputs@s
  6554  011DB8  C01C  F013         	movff	pad@buf+1,fputs@s+1
  6555  011DBC  C019  F014         	movff	pad@fp,fputs@fp
  6556  011DC0  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  6557  011DC4  EC6D  F094         	call	_fputs	;wreg free
  6558  011DC8                     l6179:
  6559                           
  6560                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6561  011DC8  BE1E               	btfsc	(pad@p+1)^0,7,c
  6562  011DCA  EFE9  F08E         	goto	u5151
  6563  011DCE  EFEB  F08E         	goto	u5150
  6564  011DD2                     u5151:
  6565  011DD2  EFF1  F08E         	goto	l6183
  6566  011DD6                     u5150:
  6567  011DD6  C01D  F022         	movff	pad@p,pad@w
  6568  011DDA  C01E  F023         	movff	pad@p+1,pad@w+1
  6569  011DDE  EFF5  F08E         	goto	l2049
  6570  011DE2                     l6183:
  6571  011DE2  0E00               	movlw	0
  6572  011DE4  6E23               	movwf	(pad@w+1)^0,c
  6573  011DE6  0E00               	movlw	0
  6574  011DE8  6E22               	movwf	pad@w^0,c
  6575  011DEA                     l2049:
  6576                           
  6577                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6578  011DEA  0E00               	movlw	0
  6579  011DEC  6E21               	movwf	(pad@i+1)^0,c
  6580  011DEE  0E00               	movlw	0
  6581  011DF0  6E20               	movwf	pad@i^0,c
  6582                           
  6583                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6584  011DF2  EF07  F08F         	goto	l6189
  6585  011DF6                     l6185:
  6586                           
  6587                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6588  011DF6  0E00               	movlw	0
  6589  011DF8  6E0A               	movwf	(fputc@c+1)^0,c
  6590  011DFA  0E20               	movlw	32
  6591  011DFC  6E09               	movwf	fputc@c^0,c
  6592  011DFE  C019  F00B         	movff	pad@fp,fputc@fp
  6593  011E02  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  6594  011E06  EC6D  F08E         	call	_fputc	;wreg free
  6595  011E0A                     
  6596                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6597  011E0A  4A20               	infsnz	pad@i^0,f,c
  6598  011E0C  2A21               	incf	(pad@i+1)^0,f,c
  6599  011E0E                     l6189:
  6600                           
  6601                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6602  011E0E  5022               	movf	pad@w^0,w,c
  6603  011E10  5C20               	subwf	pad@i^0,w,c
  6604  011E12  5021               	movf	(pad@i+1)^0,w,c
  6605  011E14  0A80               	xorlw	128
  6606  011E16  6E1F               	movwf	??_pad^0,c
  6607  011E18  5023               	movf	(pad@w+1)^0,w,c
  6608  011E1A  0A80               	xorlw	128
  6609  011E1C  581F               	subwfb	??_pad^0,w,c
  6610  011E1E  A0D8               	btfss	status,0,c
  6611  011E20  EF14  F08F         	goto	u5161
  6612  011E24  EF16  F08F         	goto	u5160
  6613  011E28                     u5161:
  6614  011E28  EFFB  F08E         	goto	l6185
  6615  011E2C                     u5160:
  6616  011E2C                     
  6617                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6618  011E2C  0100               	movlb	0	; () banked
  6619  011E2E  B17E               	btfsc	_flags& (0+255),0,b
  6620  011E30  EF1C  F08F         	goto	u5171
  6621  011E34  EF1E  F08F         	goto	u5170
  6622  011E38                     u5171:
  6623  011E38  EF28  F08F         	goto	l6193
  6624  011E3C                     u5170:
  6625  011E3C                     
  6626                           ; BSR set to: 0
  6627                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6628  011E3C  C01B  F012         	movff	pad@buf,fputs@s
  6629  011E40  C01C  F013         	movff	pad@buf+1,fputs@s+1
  6630  011E44  C019  F014         	movff	pad@fp,fputs@fp
  6631  011E48  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  6632  011E4C  EC6D  F094         	call	_fputs	;wreg free
  6633  011E50                     l6193:
  6634                           
  6635                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6636  011E50  C01B  F007         	movff	pad@buf,strlen@s
  6637  011E54  C01C  F008         	movff	pad@buf+1,strlen@s+1
  6638  011E58  ECD0  F093         	call	_strlen	;wreg free
  6639  011E5C  5022               	movf	pad@w^0,w,c
  6640  011E5E  2407               	addwf	?_strlen^0,w,c
  6641  011E60  6E19               	movwf	?_pad^0,c
  6642  011E62  5023               	movf	(pad@w+1)^0,w,c
  6643  011E64  2008               	addwfc	(?_strlen+1)^0,w,c
  6644  011E66  6E1A               	movwf	(?_pad+1)^0,c
  6645  011E68  0012               	return		;funcret
  6646  011E6A                     __end_of_pad:
  6647                           	callstack 0
  6648                           
  6649 ;; *************** function _fputs *****************
  6650 ;; Defined at:
  6651 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  s               2   17[COMRAM] PTR const unsigned char 
  6654 ;;		 -> dbuf(32), 
  6655 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  6656 ;;		 -> sprintf@f(6), 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  i               2   22[COMRAM] int 
  6659 ;;  c               1   21[COMRAM] unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  2   17[COMRAM] int 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6670 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6672 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6673 ;;Total ram usage:        7 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    7
  6676 ;; This function calls:
  6677 ;;		_fputc
  6678 ;; This function is called by:
  6679 ;;		_pad
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text39
  6684  0128DA                     __ptext39:
  6685                           	callstack 0
  6686  0128DA                     _fputs:
  6687                           	callstack 16
  6688  0128DA  0E00               	movlw	0
  6689  0128DC  6E18               	movwf	(fputs@i+1)^0,c
  6690  0128DE  0E00               	movlw	0
  6691  0128E0  6E17               	movwf	fputs@i^0,c
  6692  0128E2  EF7E  F094         	goto	l6163
  6693  0128E6                     l6159:
  6694  0128E6  C016  F009         	movff	fputs@c,fputc@c
  6695  0128EA  6A0A               	clrf	(fputc@c+1)^0,c
  6696  0128EC  C014  F00B         	movff	fputs@fp,fputc@fp
  6697  0128F0  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  6698  0128F4  EC6D  F08E         	call	_fputc	;wreg free
  6699  0128F8  4A17               	infsnz	fputs@i^0,f,c
  6700  0128FA  2A18               	incf	(fputs@i+1)^0,f,c
  6701  0128FC                     l6163:
  6702  0128FC  5017               	movf	fputs@i^0,w,c
  6703  0128FE  2412               	addwf	fputs@s^0,w,c
  6704  012900  6ED9               	movwf	fsr2l,c
  6705  012902  5018               	movf	(fputs@i+1)^0,w,c
  6706  012904  2013               	addwfc	(fputs@s+1)^0,w,c
  6707  012906  6EDA               	movwf	fsr2h,c
  6708  012908  50DF               	movf	indf2,w,c
  6709  01290A  6E16               	movwf	fputs@c^0,c
  6710  01290C  5016               	movf	fputs@c^0,w,c
  6711  01290E  A4D8               	btfss	status,2,c
  6712  012910  EF8C  F094         	goto	u5111
  6713  012914  EF8E  F094         	goto	u5110
  6714  012918                     u5111:
  6715  012918  EF73  F094         	goto	l6159
  6716  01291C                     u5110:
  6717  01291C  0012               	return		;funcret
  6718  01291E                     __end_of_fputs:
  6719                           	callstack 0
  6720                           
  6721 ;; *************** function _fputc *****************
  6722 ;; Defined at:
  6723 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;  c               2    8[COMRAM] int 
  6726 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  6727 ;;		 -> sprintf@f(6), 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  2    8[COMRAM] int 
  6732 ;; Registers used:
  6733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6742 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6743 ;;Total ram usage:        9 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    6
  6746 ;; This function calls:
  6747 ;;		_putch
  6748 ;; This function is called by:
  6749 ;;		_pad
  6750 ;;		_vfpfcnvrt
  6751 ;;		_fputs
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text40
  6756  011CDA                     __ptext40:
  6757                           	callstack 0
  6758  011CDA                     _fputc:
  6759                           	callstack 16
  6760  011CDA  500B               	movf	fputc@fp^0,w,c
  6761  011CDC  100C               	iorwf	(fputc@fp+1)^0,w,c
  6762  011CDE  B4D8               	btfsc	status,2,c
  6763  011CE0  EF74  F08E         	goto	u5051
  6764  011CE4  EF76  F08E         	goto	u5050
  6765  011CE8                     u5051:
  6766  011CE8  EF7F  F08E         	goto	l6137
  6767  011CEC                     u5050:
  6768  011CEC  500B               	movf	fputc@fp^0,w,c
  6769  011CEE  100C               	iorwf	(fputc@fp+1)^0,w,c
  6770  011CF0  A4D8               	btfss	status,2,c
  6771  011CF2  EF7D  F08E         	goto	u5061
  6772  011CF6  EF7F  F08E         	goto	u5060
  6773  011CFA                     u5061:
  6774  011CFA  EF84  F08E         	goto	l6139
  6775  011CFE                     u5060:
  6776  011CFE                     l6137:
  6777  011CFE  5009               	movf	fputc@c^0,w,c
  6778  011D00  ECFF  F097         	call	_putch
  6779  011D04  EFD1  F08E         	goto	l2189
  6780  011D08                     l6139:
  6781  011D08  EE20 F004          	lfsr	2,4
  6782  011D0C  500B               	movf	fputc@fp^0,w,c
  6783  011D0E  26D9               	addwf	fsr2l,f,c
  6784  011D10  500C               	movf	(fputc@fp+1)^0,w,c
  6785  011D12  22DA               	addwfc	fsr2h,f,c
  6786  011D14  50DE               	movf	postinc2,w,c
  6787  011D16  10DE               	iorwf	postinc2,w,c
  6788  011D18  B4D8               	btfsc	status,2,c
  6789  011D1A  EF91  F08E         	goto	u5071
  6790  011D1E  EF93  F08E         	goto	u5070
  6791  011D22                     u5071:
  6792  011D22  EFAE  F08E         	goto	l6143
  6793  011D26                     u5070:
  6794  011D26  EE20 F004          	lfsr	2,4
  6795  011D2A  500B               	movf	fputc@fp^0,w,c
  6796  011D2C  26D9               	addwf	fsr2l,f,c
  6797  011D2E  500C               	movf	(fputc@fp+1)^0,w,c
  6798  011D30  22DA               	addwfc	fsr2h,f,c
  6799  011D32  EE10 F002          	lfsr	1,2
  6800  011D36  500B               	movf	fputc@fp^0,w,c
  6801  011D38  26E1               	addwf	fsr1l,f,c
  6802  011D3A  500C               	movf	(fputc@fp+1)^0,w,c
  6803  011D3C  22E2               	addwfc	fsr1h,f,c
  6804  011D3E  50DE               	movf	postinc2,w,c
  6805  011D40  5CE6               	subwf	postinc1,w,c
  6806  011D42  50E6               	movf	postinc1,w,c
  6807  011D44  0A80               	xorlw	128
  6808  011D46  6E11               	movwf	(??_fputc+4)^0,c
  6809  011D48  50DE               	movf	postinc2,w,c
  6810  011D4A  0A80               	xorlw	128
  6811  011D4C  5811               	subwfb	(??_fputc+4)^0,w,c
  6812  011D4E  B0D8               	btfsc	status,0,c
  6813  011D50  EFAC  F08E         	goto	u5081
  6814  011D54  EFAE  F08E         	goto	u5080
  6815  011D58                     u5081:
  6816  011D58  EFD1  F08E         	goto	l2189
  6817  011D5C                     u5080:
  6818  011D5C                     l6143:
  6819  011D5C  EE20 F002          	lfsr	2,2
  6820  011D60  500B               	movf	fputc@fp^0,w,c
  6821  011D62  26D9               	addwf	fsr2l,f,c
  6822  011D64  500C               	movf	(fputc@fp+1)^0,w,c
  6823  011D66  22DA               	addwfc	fsr2h,f,c
  6824  011D68  CFDE F00D          	movff	postinc2,??_fputc
  6825  011D6C  CFDD F00E          	movff	postdec2,??_fputc+1
  6826  011D70  C00B  FFD9         	movff	fputc@fp,fsr2l
  6827  011D74  C00C  FFDA         	movff	fputc@fp+1,fsr2h
  6828  011D78  CFDE F00F          	movff	postinc2,??_fputc+2
  6829  011D7C  CFDD F010          	movff	postdec2,??_fputc+3
  6830  011D80  500D               	movf	??_fputc^0,w,c
  6831  011D82  240F               	addwf	(??_fputc+2)^0,w,c
  6832  011D84  6ED9               	movwf	fsr2l,c
  6833  011D86  500E               	movf	(??_fputc+1)^0,w,c
  6834  011D88  2010               	addwfc	(??_fputc+3)^0,w,c
  6835  011D8A  6EDA               	movwf	fsr2h,c
  6836  011D8C  C009  FFDF         	movff	fputc@c,indf2
  6837  011D90  EE20 F002          	lfsr	2,2
  6838  011D94  500B               	movf	fputc@fp^0,w,c
  6839  011D96  26D9               	addwf	fsr2l,f,c
  6840  011D98  500C               	movf	(fputc@fp+1)^0,w,c
  6841  011D9A  22DA               	addwfc	fsr2h,f,c
  6842  011D9C  2ADE               	incf	postinc2,f,c
  6843  011D9E  0E00               	movlw	0
  6844  011DA0  22DD               	addwfc	postdec2,f,c
  6845  011DA2                     l2189:
  6846  011DA2  0012               	return		;funcret
  6847  011DA4                     __end_of_fputc:
  6848                           	callstack 0
  6849                           
  6850 ;; *************** function _putch *****************
  6851 ;; Defined at:
  6852 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  txData          1    wreg     unsigned char 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  txData          1    7[COMRAM] unsigned char 
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      void 
  6859 ;; Registers used:
  6860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6870 ;;Total ram usage:        1 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    5
  6873 ;; This function calls:
  6874 ;;		_EUSART1_Write
  6875 ;; This function is called by:
  6876 ;;		_fputc
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text41
  6881  012FFE                     __ptext41:
  6882                           	callstack 0
  6883  012FFE                     _putch:
  6884                           	callstack 16
  6885                           
  6886                           ;incstack = 0
  6887                           ;putch@txData stored from wreg
  6888  012FFE  6E08               	movwf	putch@txData^0,c
  6889  013000                     
  6890                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  6891  013000  5008               	movf	putch@txData^0,w,c
  6892  013002  ECCF  F092         	call	_EUSART1_Write
  6893  013006  0012               	return		;funcret
  6894  013008                     __end_of_putch:
  6895                           	callstack 0
  6896                           
  6897 ;; *************** function _isupper *****************
  6898 ;; Defined at:
  6899 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  c               2    6[COMRAM] int 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;		None
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  2    6[COMRAM] int 
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6915 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6916 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6917 ;;Total ram usage:        6 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    4
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_xtoa
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text42
  6928  012B54                     __ptext42:
  6929                           	callstack 0
  6930  012B54                     _isupper:
  6931                           	callstack 20
  6932  012B54  0EBF               	movlw	191
  6933  012B56  6E09               	movwf	??_isupper^0,c
  6934  012B58  0EFF               	movlw	255
  6935  012B5A  6E0A               	movwf	(??_isupper+1)^0,c
  6936  012B5C  C007  F00B         	movff	isupper@c,??_isupper+2
  6937  012B60  C008  F00C         	movff	isupper@c+1,??_isupper+3
  6938  012B64  5009               	movf	??_isupper^0,w,c
  6939  012B66  260B               	addwf	(??_isupper+2)^0,f,c
  6940  012B68  500A               	movf	(??_isupper+1)^0,w,c
  6941  012B6A  220C               	addwfc	(??_isupper+3)^0,f,c
  6942  012B6C  500C               	movf	(??_isupper+3)^0,w,c
  6943  012B6E  E10A               	bnz	u5180
  6944  012B70  0E1A               	movlw	26
  6945  012B72  5C0B               	subwf	(??_isupper+2)^0,w,c
  6946  012B74  A0D8               	btfss	status,0,c
  6947  012B76  EFBF  F095         	goto	u5181
  6948  012B7A  EFC2  F095         	goto	u5180
  6949  012B7E                     u5181:
  6950  012B7E  0E01               	movlw	1
  6951  012B80  EFC3  F095         	goto	u5190
  6952  012B84                     u5180:
  6953  012B84  0E00               	movlw	0
  6954  012B86                     u5190:
  6955  012B86  6E07               	movwf	?_isupper^0,c
  6956  012B88  6A08               	clrf	(?_isupper+1)^0,c
  6957  012B8A  0012               	return		;funcret
  6958  012B8C                     __end_of_isupper:
  6959                           	callstack 0
  6960                           
  6961 ;; *************** function _isalpha *****************
  6962 ;; Defined at:
  6963 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isalpha.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  c               2    6[COMRAM] int 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;		None
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  2    6[COMRAM] int 
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6979 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6981 ;;Total ram usage:        6 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:    4
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		_xtoa
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text43
  6992  012AA8                     __ptext43:
  6993                           	callstack 0
  6994  012AA8                     _isalpha:
  6995                           	callstack 20
  6996  012AA8  0E9F               	movlw	159
  6997  012AAA  6E09               	movwf	??_isalpha^0,c
  6998  012AAC  0EFF               	movlw	255
  6999  012AAE  6E0A               	movwf	(??_isalpha+1)^0,c
  7000  012AB0  0E20               	movlw	32
  7001  012AB2  1007               	iorwf	isalpha@c^0,w,c
  7002  012AB4  6E0B               	movwf	(??_isalpha+2)^0,c
  7003  012AB6  0E00               	movlw	0
  7004  012AB8  1008               	iorwf	(isalpha@c+1)^0,w,c
  7005  012ABA  6E0C               	movwf	(??_isalpha+3)^0,c
  7006  012ABC  5009               	movf	??_isalpha^0,w,c
  7007  012ABE  260B               	addwf	(??_isalpha+2)^0,f,c
  7008  012AC0  500A               	movf	(??_isalpha+1)^0,w,c
  7009  012AC2  220C               	addwfc	(??_isalpha+3)^0,f,c
  7010  012AC4  500C               	movf	(??_isalpha+3)^0,w,c
  7011  012AC6  E10A               	bnz	u5200
  7012  012AC8  0E1A               	movlw	26
  7013  012ACA  5C0B               	subwf	(??_isalpha+2)^0,w,c
  7014  012ACC  A0D8               	btfss	status,0,c
  7015  012ACE  EF6B  F095         	goto	u5201
  7016  012AD2  EF6E  F095         	goto	u5200
  7017  012AD6                     u5201:
  7018  012AD6  0E01               	movlw	1
  7019  012AD8  EF6F  F095         	goto	u5210
  7020  012ADC                     u5200:
  7021  012ADC  0E00               	movlw	0
  7022  012ADE                     u5210:
  7023  012ADE  6E07               	movwf	?_isalpha^0,c
  7024  012AE0  6A08               	clrf	(?_isalpha+1)^0,c
  7025  012AE2  0012               	return		;funcret
  7026  012AE4                     __end_of_isalpha:
  7027                           	callstack 0
  7028                           
  7029 ;; *************** function _atoi *****************
  7030 ;; Defined at:
  7031 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7034 ;;		 -> STR_2(5), STR_1(5), 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  n               2   26[COMRAM] int 
  7037 ;;  neg             2   19[COMRAM] int 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  2   13[COMRAM] int 
  7040 ;; Registers used:
  7041 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7048 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7049 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7050 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7051 ;;Total ram usage:       15 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    5
  7054 ;; This function calls:
  7055 ;;		___wmul
  7056 ;;		_isdigit
  7057 ;;		_isspace
  7058 ;; This function is called by:
  7059 ;;		_vfpfcnvrt
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	text44
  7064  0116FC                     __ptext44:
  7065                           	callstack 0
  7066  0116FC                     _atoi:
  7067                           	callstack 20
  7068  0116FC  0E00               	movlw	0
  7069  0116FE  6E1C               	movwf	(atoi@n+1)^0,c
  7070  011700  0E00               	movlw	0
  7071  011702  6E1B               	movwf	atoi@n^0,c
  7072  011704  0E00               	movlw	0
  7073  011706  6E15               	movwf	(atoi@neg+1)^0,c
  7074  011708  0E00               	movlw	0
  7075  01170A  6E14               	movwf	atoi@neg^0,c
  7076  01170C  EF8A  F08B         	goto	l6301
  7077  011710                     l6299:
  7078  011710  4A0E               	infsnz	atoi@s^0,f,c
  7079  011712  2A0F               	incf	(atoi@s+1)^0,f,c
  7080  011714                     l6301:
  7081  011714  0E01               	movlw	1
  7082  011716  6E1A               	movwf	_atoi$2817^0,c
  7083  011718  C00E  FFF6         	movff	atoi@s,tblptrl
  7084  01171C  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7085  011720                     	if	0	;tblptru may be non-zero
  7086  011720                     	endif
  7087  011720                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7088  011720  0E00               	movlw	low (__mediumconst shr (0+16))
  7089  011722  6EF8               	movwf	tblptru,c
  7090  011724                     	endif
  7091  011724  0008               	tblrd		*
  7092  011726  50F5               	movf	tablat,w,c
  7093  011728  0A20               	xorlw	32
  7094  01172A  B4D8               	btfsc	status,2,c
  7095  01172C  EF9A  F08B         	goto	u5461
  7096  011730  EF9C  F08B         	goto	u5460
  7097  011734                     u5461:
  7098  011734  EFBB  F08B         	goto	l6309
  7099  011738                     u5460:
  7100  011738  0EF7               	movlw	247
  7101  01173A  6E10               	movwf	??_atoi^0,c
  7102  01173C  0EFF               	movlw	255
  7103  01173E  6E11               	movwf	(??_atoi+1)^0,c
  7104  011740  C00E  FFF6         	movff	atoi@s,tblptrl
  7105  011744  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7106  011748                     	if	0	;tblptru may be non-zero
  7107  011748                     	endif
  7108  011748                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7109  011748  0E00               	movlw	low (__mediumconst shr (0+16))
  7110  01174A  6EF8               	movwf	tblptru,c
  7111  01174C                     	endif
  7112  01174C  0008               	tblrd		*
  7113  01174E  50F5               	movf	tablat,w,c
  7114  011750  6E12               	movwf	(??_atoi+2)^0,c
  7115  011752  6A13               	clrf	(??_atoi+3)^0,c
  7116  011754  5010               	movf	??_atoi^0,w,c
  7117  011756  2612               	addwf	(??_atoi+2)^0,f,c
  7118  011758  5011               	movf	(??_atoi+1)^0,w,c
  7119  01175A  2213               	addwfc	(??_atoi+3)^0,f,c
  7120  01175C  5013               	movf	(??_atoi+3)^0,w,c
  7121  01175E  E109               	bnz	u5470
  7122  011760  0E05               	movlw	5
  7123  011762  5C12               	subwf	(??_atoi+2)^0,w,c
  7124  011764  A0D8               	btfss	status,0,c
  7125  011766  EFB7  F08B         	goto	u5471
  7126  01176A  EFB9  F08B         	goto	u5470
  7127  01176E                     u5471:
  7128  01176E  EFBB  F08B         	goto	l6309
  7129  011772                     u5470:
  7130  011772  0E00               	movlw	0
  7131  011774  6E1A               	movwf	_atoi$2817^0,c
  7132  011776                     l6309:
  7133  011776  C01A  F016         	movff	_atoi$2817,_atoi$2816
  7134  01177A  6A17               	clrf	(_atoi$2816+1)^0,c
  7135  01177C  5016               	movf	_atoi$2816^0,w,c
  7136  01177E  1017               	iorwf	(_atoi$2816+1)^0,w,c
  7137  011780  A4D8               	btfss	status,2,c
  7138  011782  EFC5  F08B         	goto	u5481
  7139  011786  EFC7  F08B         	goto	u5480
  7140  01178A                     u5481:
  7141  01178A  EF88  F08B         	goto	l6299
  7142  01178E                     u5480:
  7143  01178E  EFD1  F08B         	goto	l6319
  7144  011792                     l6315:
  7145  011792  0E00               	movlw	0
  7146  011794  6E15               	movwf	(atoi@neg+1)^0,c
  7147  011796  0E01               	movlw	1
  7148  011798  6E14               	movwf	atoi@neg^0,c
  7149  01179A                     l6317:
  7150  01179A  4A0E               	infsnz	atoi@s^0,f,c
  7151  01179C  2A0F               	incf	(atoi@s+1)^0,f,c
  7152  01179E  EF0A  F08C         	goto	l6325
  7153  0117A2                     l6319:
  7154  0117A2  C00E  FFF6         	movff	atoi@s,tblptrl
  7155  0117A6  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7156  0117AA                     	if	0	;tblptru may be non-zero
  7157  0117AA                     	endif
  7158  0117AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7159  0117AA  0E00               	movlw	low (__mediumconst shr (0+16))
  7160  0117AC  6EF8               	movwf	tblptru,c
  7161  0117AE                     	endif
  7162  0117AE  0008               	tblrd		*
  7163  0117B0  50F5               	movf	tablat,w,c
  7164  0117B2  6E10               	movwf	??_atoi^0,c
  7165  0117B4  6A11               	clrf	(??_atoi+1)^0,c
  7166                           
  7167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7168                           ; Switch size 1, requested type "simple"
  7169                           ; Number of cases is 1, Range of values is 0 to 0
  7170                           ; switch strategies available:
  7171                           ; Name         Instructions Cycles
  7172                           ; simple_byte            4     3 (average)
  7173                           ;	Chosen strategy is simple_byte
  7174  0117B6  5011               	movf	(??_atoi+1)^0,w,c
  7175  0117B8  0A00               	xorlw	0	; case 0
  7176  0117BA  B4D8               	btfsc	status,2,c
  7177  0117BC  EFE2  F08B         	goto	l7483
  7178  0117C0  EF0A  F08C         	goto	l6325
  7179  0117C4                     l7483:
  7180                           
  7181                           ; Switch size 1, requested type "simple"
  7182                           ; Number of cases is 2, Range of values is 43 to 45
  7183                           ; switch strategies available:
  7184                           ; Name         Instructions Cycles
  7185                           ; simple_byte            7     4 (average)
  7186                           ;	Chosen strategy is simple_byte
  7187  0117C4  5010               	movf	??_atoi^0,w,c
  7188  0117C6  0A2B               	xorlw	43	; case 43
  7189  0117C8  B4D8               	btfsc	status,2,c
  7190  0117CA  EFCD  F08B         	goto	l6317
  7191  0117CE  0A06               	xorlw	6	; case 45
  7192  0117D0  B4D8               	btfsc	status,2,c
  7193  0117D2  EFC9  F08B         	goto	l6315
  7194  0117D6  EF0A  F08C         	goto	l6325
  7195  0117DA                     l6321:
  7196  0117DA  C01B  F007         	movff	atoi@n,___wmul@multiplier
  7197  0117DE  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  7198  0117E2  0E00               	movlw	0
  7199  0117E4  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  7200  0117E6  0E0A               	movlw	10
  7201  0117E8  6E09               	movwf	___wmul@multiplicand^0,c
  7202  0117EA  EC01  F097         	call	___wmul	;wreg free
  7203  0117EE  C00E  FFF6         	movff	atoi@s,tblptrl
  7204  0117F2  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7205  0117F6                     	if	0	;tblptru may be non-zero
  7206  0117F6                     	endif
  7207  0117F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7208  0117F6  0E00               	movlw	low (__mediumconst shr (0+16))
  7209  0117F8  6EF8               	movwf	tblptru,c
  7210  0117FA                     	endif
  7211  0117FA  0008               	tblrd		*
  7212  0117FC  50F5               	movf	tablat,w,c
  7213  0117FE  5E07               	subwf	?___wmul^0,f,c
  7214  011800  0E00               	movlw	0
  7215  011802  5A08               	subwfb	(?___wmul+1)^0,f,c
  7216  011804  0E30               	movlw	48
  7217  011806  2407               	addwf	?___wmul^0,w,c
  7218  011808  6E1B               	movwf	atoi@n^0,c
  7219  01180A  0E00               	movlw	0
  7220  01180C  2008               	addwfc	(?___wmul+1)^0,w,c
  7221  01180E  6E1C               	movwf	(atoi@n+1)^0,c
  7222  011810  EFCD  F08B         	goto	l6317
  7223  011814                     l6325:
  7224  011814  0ED0               	movlw	208
  7225  011816  6E10               	movwf	??_atoi^0,c
  7226  011818  0EFF               	movlw	255
  7227  01181A  6E11               	movwf	(??_atoi+1)^0,c
  7228  01181C  C00E  FFF6         	movff	atoi@s,tblptrl
  7229  011820  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7230  011824                     	if	0	;tblptru may be non-zero
  7231  011824                     	endif
  7232  011824                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7233  011824  0E00               	movlw	low (__mediumconst shr (0+16))
  7234  011826  6EF8               	movwf	tblptru,c
  7235  011828                     	endif
  7236  011828  0008               	tblrd		*
  7237  01182A  50F5               	movf	tablat,w,c
  7238  01182C  6E12               	movwf	(??_atoi+2)^0,c
  7239  01182E  6A13               	clrf	(??_atoi+3)^0,c
  7240  011830  5010               	movf	??_atoi^0,w,c
  7241  011832  2612               	addwf	(??_atoi+2)^0,f,c
  7242  011834  5011               	movf	(??_atoi+1)^0,w,c
  7243  011836  2213               	addwfc	(??_atoi+3)^0,f,c
  7244  011838  5013               	movf	(??_atoi+3)^0,w,c
  7245  01183A  E10A               	bnz	u5490
  7246  01183C  0E0A               	movlw	10
  7247  01183E  5C12               	subwf	(??_atoi+2)^0,w,c
  7248  011840  A0D8               	btfss	status,0,c
  7249  011842  EF25  F08C         	goto	u5491
  7250  011846  EF28  F08C         	goto	u5490
  7251  01184A                     u5491:
  7252  01184A  0E01               	movlw	1
  7253  01184C  EF29  F08C         	goto	u5500
  7254  011850                     u5490:
  7255  011850  0E00               	movlw	0
  7256  011852                     u5500:
  7257  011852  6E18               	movwf	_atoi$2818^0,c
  7258  011854  6A19               	clrf	(_atoi$2818+1)^0,c
  7259  011856  5018               	movf	_atoi$2818^0,w,c
  7260  011858  1019               	iorwf	(_atoi$2818+1)^0,w,c
  7261  01185A  A4D8               	btfss	status,2,c
  7262  01185C  EF32  F08C         	goto	u5511
  7263  011860  EF34  F08C         	goto	u5510
  7264  011864                     u5511:
  7265  011864  EFED  F08B         	goto	l6321
  7266  011868                     u5510:
  7267  011868  5014               	movf	atoi@neg^0,w,c
  7268  01186A  1015               	iorwf	(atoi@neg+1)^0,w,c
  7269  01186C  A4D8               	btfss	status,2,c
  7270  01186E  EF3B  F08C         	goto	u5521
  7271  011872  EF3D  F08C         	goto	u5520
  7272  011876                     u5521:
  7273  011876  EF4B  F08C         	goto	l2148
  7274  01187A                     u5520:
  7275  01187A  C01B  F010         	movff	atoi@n,??_atoi
  7276  01187E  C01C  F011         	movff	atoi@n+1,??_atoi+1
  7277  011882  1E10               	comf	??_atoi^0,f,c
  7278  011884  1E11               	comf	(??_atoi+1)^0,f,c
  7279  011886  4A10               	infsnz	??_atoi^0,f,c
  7280  011888  2A11               	incf	(??_atoi+1)^0,f,c
  7281  01188A  C010  F00E         	movff	??_atoi,?_atoi
  7282  01188E  C011  F00F         	movff	??_atoi+1,?_atoi+1
  7283  011892  EF4F  F08C         	goto	l2151
  7284  011896                     l2148:
  7285  011896  C01B  F00E         	movff	atoi@n,?_atoi
  7286  01189A  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  7287  01189E                     l2151:
  7288  01189E  0012               	return		;funcret
  7289  0118A0                     __end_of_atoi:
  7290                           	callstack 0
  7291                           
  7292 ;; *************** function _isspace *****************
  7293 ;; Defined at:
  7294 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  c               2    6[COMRAM] int 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  2    6[COMRAM] int 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7310 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;Total ram usage:        7 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:    4
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_atoi
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text45
  7323  01274E                     __ptext45:
  7324                           	callstack 0
  7325  01274E                     _isspace:
  7326                           	callstack 20
  7327  01274E  0E01               	movlw	1
  7328  012750  6E0D               	movwf	_isspace$2843^0,c
  7329  012752  0E20               	movlw	32
  7330  012754  1807               	xorwf	isspace@c^0,w,c
  7331  012756  1008               	iorwf	(isspace@c+1)^0,w,c
  7332  012758  B4D8               	btfsc	status,2,c
  7333  01275A  EFB1  F093         	goto	u5271
  7334  01275E  EFB3  F093         	goto	u5270
  7335  012762                     u5271:
  7336  012762  EFCC  F093         	goto	l6227
  7337  012766                     u5270:
  7338  012766  0EF7               	movlw	247
  7339  012768  6E09               	movwf	??_isspace^0,c
  7340  01276A  0EFF               	movlw	255
  7341  01276C  6E0A               	movwf	(??_isspace+1)^0,c
  7342  01276E  C007  F00B         	movff	isspace@c,??_isspace+2
  7343  012772  C008  F00C         	movff	isspace@c+1,??_isspace+3
  7344  012776  5009               	movf	??_isspace^0,w,c
  7345  012778  260B               	addwf	(??_isspace+2)^0,f,c
  7346  01277A  500A               	movf	(??_isspace+1)^0,w,c
  7347  01277C  220C               	addwfc	(??_isspace+3)^0,f,c
  7348  01277E  500C               	movf	(??_isspace+3)^0,w,c
  7349  012780  E109               	bnz	u5280
  7350  012782  0E05               	movlw	5
  7351  012784  5C0B               	subwf	(??_isspace+2)^0,w,c
  7352  012786  A0D8               	btfss	status,0,c
  7353  012788  EFC8  F093         	goto	u5281
  7354  01278C  EFCA  F093         	goto	u5280
  7355  012790                     u5281:
  7356  012790  EFCC  F093         	goto	l6227
  7357  012794                     u5280:
  7358  012794  0E00               	movlw	0
  7359  012796  6E0D               	movwf	_isspace$2843^0,c
  7360  012798                     l6227:
  7361  012798  C00D  F007         	movff	_isspace$2843,?_isspace
  7362  01279C  6A08               	clrf	(?_isspace+1)^0,c
  7363  01279E  0012               	return		;funcret
  7364  0127A0                     __end_of_isspace:
  7365                           	callstack 0
  7366                           
  7367 ;; *************** function _isdigit *****************
  7368 ;; Defined at:
  7369 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  c               2    6[COMRAM] int 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;		None
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  2    6[COMRAM] int 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, status,0
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7385 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7386 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7387 ;;Total ram usage:        6 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; Hardware stack levels required when called:    4
  7390 ;; This function calls:
  7391 ;;		Nothing
  7392 ;; This function is called by:
  7393 ;;		_vfpfcnvrt
  7394 ;;		_atoi
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398                           	psect	text46
  7399  012B8C                     __ptext46:
  7400                           	callstack 0
  7401  012B8C                     _isdigit:
  7402                           	callstack 21
  7403  012B8C  0ED0               	movlw	208
  7404  012B8E  6E09               	movwf	??_isdigit^0,c
  7405  012B90  0EFF               	movlw	255
  7406  012B92  6E0A               	movwf	(??_isdigit+1)^0,c
  7407  012B94  C007  F00B         	movff	isdigit@c,??_isdigit+2
  7408  012B98  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  7409  012B9C  5009               	movf	??_isdigit^0,w,c
  7410  012B9E  260B               	addwf	(??_isdigit+2)^0,f,c
  7411  012BA0  500A               	movf	(??_isdigit+1)^0,w,c
  7412  012BA2  220C               	addwfc	(??_isdigit+3)^0,f,c
  7413  012BA4  500C               	movf	(??_isdigit+3)^0,w,c
  7414  012BA6  E10A               	bnz	u5250
  7415  012BA8  0E0A               	movlw	10
  7416  012BAA  5C0B               	subwf	(??_isdigit+2)^0,w,c
  7417  012BAC  A0D8               	btfss	status,0,c
  7418  012BAE  EFDB  F095         	goto	u5251
  7419  012BB2  EFDE  F095         	goto	u5250
  7420  012BB6                     u5251:
  7421  012BB6  0E01               	movlw	1
  7422  012BB8  EFDF  F095         	goto	u5260
  7423  012BBC                     u5250:
  7424  012BBC  0E00               	movlw	0
  7425  012BBE                     u5260:
  7426  012BBE  6E07               	movwf	?_isdigit^0,c
  7427  012BC0  6A08               	clrf	(?_isdigit+1)^0,c
  7428  012BC2  0012               	return		;funcret
  7429  012BC4                     __end_of_isdigit:
  7430                           	callstack 0
  7431                           
  7432 ;; *************** function ___wmul *****************
  7433 ;; Defined at:
  7434 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  multiplier      2    6[COMRAM] unsigned int 
  7437 ;;  multiplicand    2    8[COMRAM] unsigned int 
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;  product         2   10[COMRAM] unsigned int 
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  2    6[COMRAM] unsigned int 
  7442 ;; Registers used:
  7443 ;;		wreg, status,2, status,0, prodl, prodh
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7452 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7453 ;;Total ram usage:        6 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; Hardware stack levels required when called:    4
  7456 ;; This function calls:
  7457 ;;		Nothing
  7458 ;; This function is called by:
  7459 ;;		_atoi
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text47
  7464  012E02                     __ptext47:
  7465                           	callstack 0
  7466  012E02                     ___wmul:
  7467                           	callstack 20
  7468  012E02  5007               	movf	___wmul@multiplier^0,w,c
  7469  012E04  0209               	mulwf	___wmul@multiplicand^0,c
  7470  012E06  CFF3 F00B          	movff	prodl,___wmul@product
  7471  012E0A  CFF4 F00C          	movff	prodh,___wmul@product+1
  7472  012E0E  5007               	movf	___wmul@multiplier^0,w,c
  7473  012E10  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  7474  012E12  50F3               	movf	243,w,c
  7475  012E14  260C               	addwf	(___wmul@product+1)^0,f,c
  7476  012E16  5008               	movf	(___wmul@multiplier+1)^0,w,c
  7477  012E18  0209               	mulwf	___wmul@multiplicand^0,c
  7478  012E1A  50F3               	movf	243,w,c
  7479  012E1C  260C               	addwf	(___wmul@product+1)^0,f,c
  7480  012E1E  C00B  F007         	movff	___wmul@product,?___wmul
  7481  012E22  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  7482  012E26  0012               	return		;funcret
  7483  012E28                     __end_of___wmul:
  7484                           	callstack 0
  7485                           
  7486 ;; *************** function _BLE2_SendString *****************
  7487 ;; Defined at:
  7488 ;;		line 61 in file "mcc_generated_files/BLE2_driver.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  command         2   13[COMRAM] PTR const unsigned char 
  7491 ;;		 -> cmd_reboot(6), cmd_adc_read(44), cmd_adc_write(44), cmd_UUID(38), 
  7492 ;;		 -> cmd_cleanprivateservice(5), cmd_peripheral(14), cmd_userdefineprofile(14), cmd_factoryreset(7), 
  7493 ;;		 -> STR_3(3), sendADCCValueBLE@result(2), cmd_adc_value_send(38), 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;		None
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      void 
  7498 ;; Registers used:
  7499 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7509 ;;Total ram usage:        2 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    7
  7512 ;; This function calls:
  7513 ;;		_BLE2_SendBuffer
  7514 ;;		_strlen
  7515 ;; This function is called by:
  7516 ;;		_sendADCCValueBLE
  7517 ;;		_BLE2ClickSetup
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text48
  7522  012E8C                     __ptext48:
  7523                           	callstack 0
  7524  012E8C                     _BLE2_SendString:
  7525                           	callstack 21
  7526  012E8C                     
  7527                           ;mcc_generated_files/BLE2_driver.c: 61: void BLE2_SendString(const char* command);mcc_ge
      +                          nerated_files/BLE2_driver.c: 62: {;mcc_generated_files/BLE2_driver.c: 63:     BLE2_SendB
      +                          uffer((uint8_t *)command, strlen(command));
  7528  012E8C  C00E  F00B         	movff	BLE2_SendString@command,BLE2_SendBuffer@buffer
  7529  012E90  C00F  F00C         	movff	BLE2_SendString@command+1,BLE2_SendBuffer@buffer+1
  7530  012E94  C00E  F007         	movff	BLE2_SendString@command,strlen@s
  7531  012E98  C00F  F008         	movff	BLE2_SendString@command+1,strlen@s+1
  7532  012E9C  ECD0  F093         	call	_strlen	;wreg free
  7533  012EA0  5007               	movf	?_strlen^0,w,c
  7534  012EA2  6E0D               	movwf	BLE2_SendBuffer@length^0,c
  7535  012EA4  ECB1  F094         	call	_BLE2_SendBuffer	;wreg free
  7536  012EA8  0012               	return		;funcret
  7537  012EAA                     __end_of_BLE2_SendString:
  7538                           	callstack 0
  7539                           
  7540 ;; *************** function _strlen *****************
  7541 ;; Defined at:
  7542 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7545 ;;		 -> dbuf(32), cmd_reboot(6), cmd_adc_read(44), cmd_adc_write(44), 
  7546 ;;		 -> cmd_UUID(38), cmd_cleanprivateservice(5), cmd_peripheral(14), cmd_userdefineprofile(14), 
  7547 ;;		 -> cmd_factoryreset(7), STR_3(3), sendADCCValueBLE@result(2), cmd_adc_value_send(38), 
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;  a               2    8[COMRAM] PTR const unsigned char 
  7550 ;;		 -> dbuf(32), cmd_reboot(6), cmd_adc_read(44), cmd_adc_write(44), 
  7551 ;;		 -> cmd_UUID(38), cmd_cleanprivateservice(5), cmd_peripheral(14), cmd_userdefineprofile(14), 
  7552 ;;		 -> cmd_factoryreset(7), STR_3(3), sendADCCValueBLE@result(2), cmd_adc_value_send(38), 
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  2    6[COMRAM] unsigned int 
  7555 ;; Registers used:
  7556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;Total ram usage:        4 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; Hardware stack levels required when called:    4
  7569 ;; This function calls:
  7570 ;;		Nothing
  7571 ;; This function is called by:
  7572 ;;		_BLE2_SendString
  7573 ;;		_pad
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text49
  7578  0127A0                     __ptext49:
  7579                           	callstack 0
  7580  0127A0                     _strlen:
  7581                           	callstack 23
  7582  0127A0  C007  F009         	movff	strlen@s,strlen@a
  7583  0127A4  C008  F00A         	movff	strlen@s+1,strlen@a+1
  7584  0127A8  EFD8  F093         	goto	l6151
  7585  0127AC                     l6149:
  7586  0127AC  4A07               	infsnz	strlen@s^0,f,c
  7587  0127AE  2A08               	incf	(strlen@s+1)^0,f,c
  7588  0127B0                     l6151:
  7589  0127B0  C007  FFF6         	movff	strlen@s,tblptrl
  7590  0127B4  C008  FFF7         	movff	strlen@s+1,tblptrh
  7591  0127B8  0E00               	movlw	low (__mediumconst shr (0+16))
  7592  0127BA  6EF8               	movwf	tblptru,c
  7593  0127BC  0E0E               	movlw	(high __ramtop+-1)
  7594  0127BE  64F7               	cpfsgt	tblptrh,c
  7595  0127C0  D003               	bra	u5097
  7596  0127C2  0008               	tblrd		*
  7597  0127C4  50F5               	movf	tablat,w,c
  7598  0127C6  D005               	bra	u5090
  7599  0127C8                     u5097:
  7600  0127C8  CFF6 FFE9          	movff	tblptrl,fsr0l
  7601  0127CC  CFF7 FFEA          	movff	tblptrh,fsr0h
  7602  0127D0  50EF               	movf	indf0,w,c
  7603  0127D2                     u5090:
  7604  0127D2  0900               	iorlw	0
  7605  0127D4  A4D8               	btfss	status,2,c
  7606  0127D6  EFEF  F093         	goto	u5101
  7607  0127DA  EFF1  F093         	goto	u5100
  7608  0127DE                     u5101:
  7609  0127DE  EFD6  F093         	goto	l6149
  7610  0127E2                     u5100:
  7611  0127E2  5009               	movf	strlen@a^0,w,c
  7612  0127E4  5C07               	subwf	strlen@s^0,w,c
  7613  0127E6  6E07               	movwf	?_strlen^0,c
  7614  0127E8  500A               	movf	(strlen@a+1)^0,w,c
  7615  0127EA  5808               	subwfb	(strlen@s+1)^0,w,c
  7616  0127EC  6E08               	movwf	(?_strlen+1)^0,c
  7617  0127EE  0012               	return		;funcret
  7618  0127F0                     __end_of_strlen:
  7619                           	callstack 0
  7620                           
  7621 ;; *************** function _BLE2_SendBuffer *****************
  7622 ;; Defined at:
  7623 ;;		line 65 in file "mcc_generated_files/BLE2_driver.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  buffer          2   10[COMRAM] PTR unsigned char 
  7626 ;;		 -> cmd_reboot(6), cmd_adc_read(44), cmd_adc_write(44), cmd_UUID(38), 
  7627 ;;		 -> cmd_cleanprivateservice(5), cmd_peripheral(14), cmd_userdefineprofile(14), cmd_factoryreset(7), 
  7628 ;;		 -> STR_3(3), sendADCCValueBLE@result(2), cmd_adc_value_send(38), 
  7629 ;;  length          1   12[COMRAM] unsigned char 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7641 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7644 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7645 ;;Total ram usage:        3 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; Hardware stack levels required when called:    6
  7648 ;; This function calls:
  7649 ;;		_BLE2_SendByte
  7650 ;; This function is called by:
  7651 ;;		_BLE2_SendString
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           	psect	text50
  7656  012962                     __ptext50:
  7657                           	callstack 0
  7658  012962                     _BLE2_SendBuffer:
  7659                           	callstack 21
  7660  012962                     
  7661                           ;mcc_generated_files/BLE2_driver.c: 65: void BLE2_SendBuffer(uint8_t *buffer, uint8_t le
      +                          ngth);mcc_generated_files/BLE2_driver.c: 66: {;mcc_generated_files/BLE2_driver.c: 67:   
      +                            while(length--)
  7662  012962  EFC8  F094         	goto	l6449
  7663  012966                     l6445:
  7664                           
  7665                           ;mcc_generated_files/BLE2_driver.c: 68:         BLE2_SendByte(*buffer++);
  7666  012966  C00B  FFF6         	movff	BLE2_SendBuffer@buffer,tblptrl
  7667  01296A  C00C  FFF7         	movff	BLE2_SendBuffer@buffer+1,tblptrh
  7668  01296E  0E00               	movlw	low (__mediumconst shr (0+16))
  7669  012970  6EF8               	movwf	tblptru,c
  7670  012972  0E0E               	movlw	(high __ramtop+-1)
  7671  012974  64F7               	cpfsgt	tblptrh,c
  7672  012976  D003               	bra	u5657
  7673  012978  0008               	tblrd		*
  7674  01297A  50F5               	movf	tablat,w,c
  7675  01297C  D005               	bra	u5650
  7676  01297E                     u5657:
  7677  01297E  CFF6 FFE9          	movff	tblptrl,fsr0l
  7678  012982  CFF7 FFEA          	movff	tblptrh,fsr0h
  7679  012986  50EF               	movf	indf0,w,c
  7680  012988                     u5650:
  7681  012988  EC18  F096         	call	_BLE2_SendByte
  7682  01298C  4A0B               	infsnz	BLE2_SendBuffer@buffer^0,f,c
  7683  01298E  2A0C               	incf	(BLE2_SendBuffer@buffer+1)^0,f,c
  7684  012990                     l6449:
  7685                           
  7686                           ;mcc_generated_files/BLE2_driver.c: 67:     while(length--)
  7687  012990  060D               	decf	BLE2_SendBuffer@length^0,f,c
  7688  012992  280D               	incf	BLE2_SendBuffer@length^0,w,c
  7689  012994  A4D8               	btfss	status,2,c
  7690  012996  EFCF  F094         	goto	u5661
  7691  01299A  EFD1  F094         	goto	u5660
  7692  01299E                     u5661:
  7693  01299E  EFB3  F094         	goto	l6445
  7694  0129A2                     u5660:
  7695  0129A2  0012               	return		;funcret
  7696  0129A4                     __end_of_BLE2_SendBuffer:
  7697                           	callstack 0
  7698                           
  7699 ;; *************** function _BLE2_SendByte *****************
  7700 ;; Defined at:
  7701 ;;		line 70 in file "mcc_generated_files/BLE2_driver.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;  byte            1    wreg     unsigned char 
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;  byte            1    7[COMRAM] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      void 
  7708 ;; Registers used:
  7709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7718 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7719 ;;Total ram usage:        1 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:    5
  7722 ;; This function calls:
  7723 ;;		_EUSART1_Write
  7724 ;; This function is called by:
  7725 ;;		_BLE2_SendBuffer
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text51
  7730  012C30                     __ptext51:
  7731                           	callstack 0
  7732  012C30                     _BLE2_SendByte:
  7733                           	callstack 21
  7734                           
  7735                           ;incstack = 0
  7736                           ;BLE2_SendByte@byte stored from wreg
  7737  012C30  6E08               	movwf	BLE2_SendByte@byte^0,c
  7738  012C32                     
  7739                           ;mcc_generated_files/BLE2_driver.c: 70: void BLE2_SendByte(uint8_t byte);mcc_generated_f
      +                          iles/BLE2_driver.c: 71: {;mcc_generated_files/BLE2_driver.c: 72:     uart[BLE2].Write(by
      +                          te);
  7740  012C32  0EB6               	movlw	low (_uart+3)
  7741  012C34  6EF6               	movwf	tblptrl,c
  7742  012C36  0EFE               	movlw	high (_uart+3)
  7743  012C38  6EF7               	movwf	tblptrh,c
  7744  012C3A                     	if	0	;tblptru may be non-zero
  7745  012C3A                     	endif
  7746  012C3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7747  012C3A  0E00               	movlw	low (__mediumconst shr (0+16))
  7748  012C3C  6EF8               	movwf	tblptru,c
  7749  012C3E                     	endif
  7750  012C3E  D802               	call	u5538
  7751  012C40  EF30  F096         	goto	u5539
  7752  012C44                     u5538:
  7753  012C44  0005               	push	
  7754  012C46  6EFA               	movwf	pclath,c
  7755  012C48  0009               	tblrd		*+
  7756  012C4A  50F5               	movf	tablat,w,c
  7757  012C4C  6EFD               	movwf	tosl,c
  7758  012C4E  0009               	tblrd		*+
  7759  012C50  50F5               	movf	tablat,w,c
  7760  012C52  6EFE               	movwf	tosh,c
  7761  012C54  0009               	tblrd		*+
  7762  012C56  50F5               	movf	tablat,w,c
  7763  012C58  6EFF               	movwf	tosu,c
  7764  012C5A  50FA               	movf	pclath,w,c
  7765  012C5C  5008               	movf	BLE2_SendByte@byte^0,w,c
  7766  012C5E  0012               	return		;indir
  7767  012C60                     u5539:
  7768  012C60  0012               	return		;funcret
  7769  012C62                     __end_of_BLE2_SendByte:
  7770                           	callstack 0
  7771                           
  7772 ;; *************** function _EUSART1_Write *****************
  7773 ;; Defined at:
  7774 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  txData          1    wreg     unsigned char 
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;  txData          1    6[COMRAM] unsigned char 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      void 
  7781 ;; Registers used:
  7782 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7792 ;;Total ram usage:        1 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    4
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_putch
  7799 ;;		_BLE2_SendByte
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           	psect	text52
  7804  01259E                     __ptext52:
  7805                           	callstack 0
  7806  01259E                     _EUSART1_Write:
  7807                           	callstack 21
  7808                           
  7809                           ;incstack = 0
  7810                           ;EUSART1_Write@txData stored from wreg
  7811  01259E  6E07               	movwf	EUSART1_Write@txData^0,c
  7812  0125A0                     l6115:
  7813                           
  7814                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  7815  0125A0  0100               	movlb	0	; () banked
  7816  0125A2  51FC               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  7817  0125A4  B4D8               	btfsc	status,2,c
  7818  0125A6  EFD7  F092         	goto	u5021
  7819  0125AA  EFD9  F092         	goto	u5020
  7820  0125AE                     u5021:
  7821  0125AE  EFD0  F092         	goto	l6115
  7822  0125B2                     u5020:
  7823  0125B2                     
  7824                           ; BSR set to: 0
  7825                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  7826  0125B2  010E               	movlb	14	; () banked
  7827  0125B4  B9C0               	btfsc	192,4,b	;volatile
  7828  0125B6  EFDF  F092         	goto	u5031
  7829  0125BA  EFE1  F092         	goto	u5030
  7830  0125BE                     u5031:
  7831  0125BE  EFE5  F092         	goto	l122
  7832  0125C2                     u5030:
  7833  0125C2                     
  7834                           ; BSR set to: 14
  7835                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  7836  0125C2  C007  FF99         	movff	EUSART1_Write@txData,3993	;volatile
  7837                           
  7838                           ;mcc_generated_files/eusart1.c: 182:     }
  7839  0125C6  EFFB  F092         	goto	l6129
  7840  0125CA                     l122:
  7841                           
  7842                           ; BSR set to: 14
  7843                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  7844  0125CA  99C0               	bcf	192,4,b	;volatile
  7845  0125CC                     
  7846                           ; BSR set to: 14
  7847                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  7848  0125CC  0E70               	movlw	low _eusart1TxBuffer
  7849  0125CE  2458               	addwf	_eusart1TxHead^0,w,c	;volatile
  7850  0125D0  6ED9               	movwf	fsr2l,c
  7851  0125D2  6ADA               	clrf	fsr2h,c
  7852  0125D4  0E00               	movlw	high _eusart1TxBuffer
  7853  0125D6  22DA               	addwfc	fsr2h,f,c
  7854  0125D8  C007  FFDF         	movff	EUSART1_Write@txData,indf2
  7855  0125DC                     
  7856                           ; BSR set to: 14
  7857  0125DC  2A58               	incf	_eusart1TxHead^0,f,c	;volatile
  7858  0125DE                     
  7859                           ; BSR set to: 14
  7860                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  7861  0125DE  0E07               	movlw	7
  7862  0125E0  6458               	cpfsgt	_eusart1TxHead^0,c	;volatile
  7863  0125E2  EFF5  F092         	goto	u5041
  7864  0125E6  EFF7  F092         	goto	u5040
  7865  0125EA                     u5041:
  7866  0125EA  EFF9  F092         	goto	l6127
  7867  0125EE                     u5040:
  7868  0125EE                     
  7869                           ; BSR set to: 14
  7870                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  7871  0125EE  0E00               	movlw	0
  7872  0125F0  6E58               	movwf	_eusart1TxHead^0,c	;volatile
  7873  0125F2                     l6127:
  7874                           
  7875                           ; BSR set to: 14
  7876                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  7877  0125F2  0100               	movlb	0	; () banked
  7878  0125F4  07FC               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  7879  0125F6                     l6129:
  7880                           
  7881                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  7882  0125F6  010E               	movlb	14	; () banked
  7883  0125F8  89C0               	bsf	192,4,b	;volatile
  7884  0125FA                     
  7885                           ; BSR set to: 14
  7886  0125FA  0012               	return		;funcret
  7887  0125FC                     __end_of_EUSART1_Write:
  7888                           	callstack 0
  7889                           
  7890 ;; *************** function _getADCCommand *****************
  7891 ;; Defined at:
  7892 ;;		line 207 in file "application.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  data            2   16[COMRAM] struct .
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  2   14[COMRAM] struct .
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0, cstack
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7909 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7910 ;;Total ram usage:        4 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    6
  7913 ;; This function calls:
  7914 ;;		_getADCCharacteristic
  7915 ;;		_getADCMode
  7916 ;; This function is called by:
  7917 ;;		_processADCCommand
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text53
  7922  012F0C                     __ptext53:
  7923                           	callstack 0
  7924  012F0C                     _getADCCommand:
  7925                           	callstack 22
  7926  012F0C                     
  7927                           ;application.c: 208:     ADC_data data;;application.c: 209:     data.ADC_CHARACTERISTIC 
      +                          = getADCCharacteristic();
  7928  012F0C  EC20  F094         	call	_getADCCharacteristic
  7929  012F10  6E11               	movwf	getADCCommand@data^0,c
  7930                           
  7931                           ;application.c: 210:     data.ADC_VALUE = getADCMode();
  7932  012F12  ECF8  F093         	call	_getADCMode	;wreg free
  7933  012F16  6E12               	movwf	(getADCCommand@data+1)^0,c
  7934  012F18                     
  7935                           ;application.c: 211:     return data;
  7936  012F18  C011  F00F         	movff	getADCCommand@data,?_getADCCommand
  7937  012F1C  C012  F010         	movff	getADCCommand@data+1,?_getADCCommand+1
  7938  012F20  0012               	return		;funcret
  7939  012F22                     __end_of_getADCCommand:
  7940                           	callstack 0
  7941                           
  7942 ;; *************** function _getADCMode *****************
  7943 ;; Defined at:
  7944 ;;		line 195 in file "application.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;		None
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;  ch              1   13[COMRAM] unsigned char 
  7949 ;;  num             1   10[COMRAM] unsigned char 
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  1    wreg      unsigned char 
  7952 ;; Registers used:
  7953 ;;		wreg, status,2, status,0, cstack
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7960 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7961 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7962 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;Total ram usage:        6 bytes
  7964 ;; Hardware stack levels used:    1
  7965 ;; Hardware stack levels required when called:    5
  7966 ;; This function calls:
  7967 ;;		_getHexValue
  7968 ;; This function is called by:
  7969 ;;		_getADCCommand
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           	psect	text54
  7974  0127F0                     __ptext54:
  7975                           	callstack 0
  7976  0127F0                     _getADCMode:
  7977                           	callstack 22
  7978  0127F0                     
  7979                           ;application.c: 196:     uint8_t ch = (getHexValue(buf[10]) << 4) | getHexValue(buf[11])
      +                          ;
  7980  0127F0  0101               	movlb	1	; () banked
  7981  0127F2  510B               	movf	(_buf+11)& (0+255),w,b
  7982  0127F4  EC50  F08C         	call	_getHexValue
  7983  0127F8  6E09               	movwf	??_getADCMode^0,c
  7984  0127FA  0101               	movlb	1	; () banked
  7985  0127FC  510A               	movf	(_buf+10)& (0+255),w,b
  7986  0127FE  EC50  F08C         	call	_getHexValue
  7987  012802  6E0A               	movwf	(??_getADCMode+1)^0,c
  7988  012804  380A               	swapf	(??_getADCMode+1)^0,w,c
  7989  012806  0BF0               	andlw	240
  7990  012808  1009               	iorwf	??_getADCMode^0,w,c
  7991  01280A  6E0E               	movwf	getADCMode@ch^0,c
  7992  01280C                     
  7993                           ;application.c: 197:     uint8_t num = (ch<='9') ? (ch-'0') : (ch-'A'+10) ;
  7994  01280C  0E39               	movlw	57
  7995  01280E  640E               	cpfsgt	getADCMode@ch^0,c
  7996  012810  EF0C  F094         	goto	u5861
  7997  012814  EF0E  F094         	goto	u5860
  7998  012818                     u5861:
  7999  012818  EF16  F094         	goto	l6553
  8000  01281C                     u5860:
  8001  01281C  0EC9               	movlw	201
  8002  01281E  240E               	addwf	getADCMode@ch^0,w,c
  8003  012820  6E0C               	movwf	_getADCMode$2132^0,c
  8004  012822  6A0D               	clrf	(_getADCMode$2132+1)^0,c
  8005  012824  0EFF               	movlw	255
  8006  012826  220D               	addwfc	(_getADCMode$2132+1)^0,f,c
  8007  012828  EF1C  F094         	goto	l6555
  8008  01282C                     l6553:
  8009  01282C  0ED0               	movlw	208
  8010  01282E  240E               	addwf	getADCMode@ch^0,w,c
  8011  012830  6E0C               	movwf	_getADCMode$2132^0,c
  8012  012832  6A0D               	clrf	(_getADCMode$2132+1)^0,c
  8013  012834  0EFF               	movlw	255
  8014  012836  220D               	addwfc	(_getADCMode$2132+1)^0,f,c
  8015  012838                     l6555:
  8016  012838  C00C  F00B         	movff	_getADCMode$2132,getADCMode@num
  8017  01283C                     
  8018                           ;application.c: 198:     return num;
  8019  01283C  500B               	movf	getADCMode@num^0,w,c
  8020  01283E  0012               	return		;funcret
  8021  012840                     __end_of_getADCMode:
  8022                           	callstack 0
  8023                           
  8024 ;; *************** function _getADCCharacteristic *****************
  8025 ;; Defined at:
  8026 ;;		line 201 in file "application.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;		None
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  ch              1   13[COMRAM] unsigned char 
  8031 ;;  num             1   10[COMRAM] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      unsigned char 
  8034 ;; Registers used:
  8035 ;;		wreg, status,2, status,0, cstack
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8042 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8044 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8045 ;;Total ram usage:        6 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:    5
  8048 ;; This function calls:
  8049 ;;		_getHexValue
  8050 ;; This function is called by:
  8051 ;;		_getADCCommand
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           	psect	text55
  8056  012840                     __ptext55:
  8057                           	callstack 0
  8058  012840                     _getADCCharacteristic:
  8059                           	callstack 22
  8060  012840                     
  8061                           ;application.c: 202:     uint8_t ch = (getHexValue(buf[8]) << 4) | getHexValue(buf[9]);
  8062  012840  0101               	movlb	1	; () banked
  8063  012842  5109               	movf	(_buf+9)& (0+255),w,b
  8064  012844  EC50  F08C         	call	_getHexValue
  8065  012848  6E09               	movwf	??_getADCCharacteristic^0,c
  8066  01284A  0101               	movlb	1	; () banked
  8067  01284C  5108               	movf	(_buf+8)& (0+255),w,b
  8068  01284E  EC50  F08C         	call	_getHexValue
  8069  012852  6E0A               	movwf	(??_getADCCharacteristic+1)^0,c
  8070  012854  380A               	swapf	(??_getADCCharacteristic+1)^0,w,c
  8071  012856  0BF0               	andlw	240
  8072  012858  1009               	iorwf	??_getADCCharacteristic^0,w,c
  8073  01285A  6E0E               	movwf	getADCCharacteristic@ch^0,c
  8074  01285C                     
  8075                           ;application.c: 203:     uint8_t num = (ch<='9') ? (ch-'0') : (ch-'A'+10) ;
  8076  01285C  0E39               	movlw	57
  8077  01285E  640E               	cpfsgt	getADCCharacteristic@ch^0,c
  8078  012860  EF34  F094         	goto	u5871
  8079  012864  EF36  F094         	goto	u5870
  8080  012868                     u5871:
  8081  012868  EF3E  F094         	goto	l6567
  8082  01286C                     u5870:
  8083  01286C  0EC9               	movlw	201
  8084  01286E  240E               	addwf	getADCCharacteristic@ch^0,w,c
  8085  012870  6E0C               	movwf	_getADCCharacteristic$2136^0,c
  8086  012872  6A0D               	clrf	(_getADCCharacteristic$2136+1)^0,c
  8087  012874  0EFF               	movlw	255
  8088  012876  220D               	addwfc	(_getADCCharacteristic$2136+1)^0,f,c
  8089  012878  EF44  F094         	goto	l6569
  8090  01287C                     l6567:
  8091  01287C  0ED0               	movlw	208
  8092  01287E  240E               	addwf	getADCCharacteristic@ch^0,w,c
  8093  012880  6E0C               	movwf	_getADCCharacteristic$2136^0,c
  8094  012882  6A0D               	clrf	(_getADCCharacteristic$2136+1)^0,c
  8095  012884  0EFF               	movlw	255
  8096  012886  220D               	addwfc	(_getADCCharacteristic$2136+1)^0,f,c
  8097  012888                     l6569:
  8098  012888  C00C  F00B         	movff	_getADCCharacteristic$2136,getADCCharacteristic@num
  8099  01288C                     
  8100                           ;application.c: 204:     return num;
  8101  01288C  500B               	movf	getADCCharacteristic@num^0,w,c
  8102  01288E  0012               	return		;funcret
  8103  012890                     __end_of_getADCCharacteristic:
  8104                           	callstack 0
  8105                           
  8106 ;; *************** function _getHexValue *****************
  8107 ;; Defined at:
  8108 ;;		line 142 in file "application.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  x               1    wreg     unsigned char 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  x               1    7[COMRAM] unsigned char 
  8113 ;;  hexvalue        1    6[COMRAM] unsigned char 
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      unsigned char 
  8116 ;; Registers used:
  8117 ;;		wreg, status,2, status,0
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8127 ;;Total ram usage:        2 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    4
  8130 ;; This function calls:
  8131 ;;		Nothing
  8132 ;; This function is called by:
  8133 ;;		_getADCMode
  8134 ;;		_getADCCharacteristic
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text56
  8139  0118A0                     __ptext56:
  8140                           	callstack 0
  8141  0118A0                     _getHexValue:
  8142                           	callstack 22
  8143                           
  8144                           ;incstack = 0
  8145                           ;getHexValue@x stored from wreg
  8146  0118A0  6E08               	movwf	getHexValue@x^0,c
  8147  0118A2                     
  8148                           ;application.c: 143:     uint8_t hexvalue;;application.c: 144:     if(x=='0') {
  8149  0118A2  0E30               	movlw	48
  8150  0118A4  1808               	xorwf	getHexValue@x^0,w,c
  8151  0118A6  A4D8               	btfss	status,2,c
  8152  0118A8  EF58  F08C         	goto	u5671
  8153  0118AC  EF5A  F08C         	goto	u5670
  8154  0118B0                     u5671:
  8155  0118B0  EF5C  F08C         	goto	l6455
  8156  0118B4                     u5670:
  8157  0118B4                     
  8158                           ;application.c: 145:         hexvalue = 0;
  8159  0118B4  0E00               	movlw	0
  8160  0118B6  6E07               	movwf	getHexValue@hexvalue^0,c
  8161  0118B8                     l6455:
  8162                           
  8163                           ;application.c: 147:     if(x=='1') {
  8164  0118B8  0E31               	movlw	49
  8165  0118BA  1808               	xorwf	getHexValue@x^0,w,c
  8166  0118BC  A4D8               	btfss	status,2,c
  8167  0118BE  EF63  F08C         	goto	u5681
  8168  0118C2  EF65  F08C         	goto	u5680
  8169  0118C6                     u5681:
  8170  0118C6  EF67  F08C         	goto	l6459
  8171  0118CA                     u5680:
  8172  0118CA                     
  8173                           ;application.c: 148:         hexvalue = 1;
  8174  0118CA  0E01               	movlw	1
  8175  0118CC  6E07               	movwf	getHexValue@hexvalue^0,c
  8176  0118CE                     l6459:
  8177                           
  8178                           ;application.c: 150:     if(x=='2') {
  8179  0118CE  0E32               	movlw	50
  8180  0118D0  1808               	xorwf	getHexValue@x^0,w,c
  8181  0118D2  A4D8               	btfss	status,2,c
  8182  0118D4  EF6E  F08C         	goto	u5691
  8183  0118D8  EF70  F08C         	goto	u5690
  8184  0118DC                     u5691:
  8185  0118DC  EF72  F08C         	goto	l6463
  8186  0118E0                     u5690:
  8187  0118E0                     
  8188                           ;application.c: 151:         hexvalue = 2;
  8189  0118E0  0E02               	movlw	2
  8190  0118E2  6E07               	movwf	getHexValue@hexvalue^0,c
  8191  0118E4                     l6463:
  8192                           
  8193                           ;application.c: 153:     if(x=='3') {
  8194  0118E4  0E33               	movlw	51
  8195  0118E6  1808               	xorwf	getHexValue@x^0,w,c
  8196  0118E8  A4D8               	btfss	status,2,c
  8197  0118EA  EF79  F08C         	goto	u5701
  8198  0118EE  EF7B  F08C         	goto	u5700
  8199  0118F2                     u5701:
  8200  0118F2  EF7D  F08C         	goto	l6467
  8201  0118F6                     u5700:
  8202  0118F6                     
  8203                           ;application.c: 154:         hexvalue = 3;
  8204  0118F6  0E03               	movlw	3
  8205  0118F8  6E07               	movwf	getHexValue@hexvalue^0,c
  8206  0118FA                     l6467:
  8207                           
  8208                           ;application.c: 156:     if(x=='4') {
  8209  0118FA  0E34               	movlw	52
  8210  0118FC  1808               	xorwf	getHexValue@x^0,w,c
  8211  0118FE  A4D8               	btfss	status,2,c
  8212  011900  EF84  F08C         	goto	u5711
  8213  011904  EF86  F08C         	goto	u5710
  8214  011908                     u5711:
  8215  011908  EF88  F08C         	goto	l6471
  8216  01190C                     u5710:
  8217  01190C                     
  8218                           ;application.c: 157:         hexvalue = 4;
  8219  01190C  0E04               	movlw	4
  8220  01190E  6E07               	movwf	getHexValue@hexvalue^0,c
  8221  011910                     l6471:
  8222                           
  8223                           ;application.c: 159:     if(x=='5') {
  8224  011910  0E35               	movlw	53
  8225  011912  1808               	xorwf	getHexValue@x^0,w,c
  8226  011914  A4D8               	btfss	status,2,c
  8227  011916  EF8F  F08C         	goto	u5721
  8228  01191A  EF91  F08C         	goto	u5720
  8229  01191E                     u5721:
  8230  01191E  EF93  F08C         	goto	l6475
  8231  011922                     u5720:
  8232  011922                     
  8233                           ;application.c: 160:         hexvalue = 5;
  8234  011922  0E05               	movlw	5
  8235  011924  6E07               	movwf	getHexValue@hexvalue^0,c
  8236  011926                     l6475:
  8237                           
  8238                           ;application.c: 162:     if(x=='6') {
  8239  011926  0E36               	movlw	54
  8240  011928  1808               	xorwf	getHexValue@x^0,w,c
  8241  01192A  A4D8               	btfss	status,2,c
  8242  01192C  EF9A  F08C         	goto	u5731
  8243  011930  EF9C  F08C         	goto	u5730
  8244  011934                     u5731:
  8245  011934  EF9E  F08C         	goto	l6479
  8246  011938                     u5730:
  8247  011938                     
  8248                           ;application.c: 163:         hexvalue = 6;
  8249  011938  0E06               	movlw	6
  8250  01193A  6E07               	movwf	getHexValue@hexvalue^0,c
  8251  01193C                     l6479:
  8252                           
  8253                           ;application.c: 165:     if(x=='7') {
  8254  01193C  0E37               	movlw	55
  8255  01193E  1808               	xorwf	getHexValue@x^0,w,c
  8256  011940  A4D8               	btfss	status,2,c
  8257  011942  EFA5  F08C         	goto	u5741
  8258  011946  EFA7  F08C         	goto	u5740
  8259  01194A                     u5741:
  8260  01194A  EFA9  F08C         	goto	l6483
  8261  01194E                     u5740:
  8262  01194E                     
  8263                           ;application.c: 166:         hexvalue = 7;
  8264  01194E  0E07               	movlw	7
  8265  011950  6E07               	movwf	getHexValue@hexvalue^0,c
  8266  011952                     l6483:
  8267                           
  8268                           ;application.c: 168:     if(x=='8') {
  8269  011952  0E38               	movlw	56
  8270  011954  1808               	xorwf	getHexValue@x^0,w,c
  8271  011956  A4D8               	btfss	status,2,c
  8272  011958  EFB0  F08C         	goto	u5751
  8273  01195C  EFB2  F08C         	goto	u5750
  8274  011960                     u5751:
  8275  011960  EFB4  F08C         	goto	l6487
  8276  011964                     u5750:
  8277  011964                     
  8278                           ;application.c: 169:         hexvalue = 8;
  8279  011964  0E08               	movlw	8
  8280  011966  6E07               	movwf	getHexValue@hexvalue^0,c
  8281  011968                     l6487:
  8282                           
  8283                           ;application.c: 171:     if(x=='9') {
  8284  011968  0E39               	movlw	57
  8285  01196A  1808               	xorwf	getHexValue@x^0,w,c
  8286  01196C  A4D8               	btfss	status,2,c
  8287  01196E  EFBB  F08C         	goto	u5761
  8288  011972  EFBD  F08C         	goto	u5760
  8289  011976                     u5761:
  8290  011976  EFBF  F08C         	goto	l6491
  8291  01197A                     u5760:
  8292  01197A                     
  8293                           ;application.c: 172:         hexvalue = 9;
  8294  01197A  0E09               	movlw	9
  8295  01197C  6E07               	movwf	getHexValue@hexvalue^0,c
  8296  01197E                     l6491:
  8297                           
  8298                           ;application.c: 174:     if(x=='A') {
  8299  01197E  0E41               	movlw	65
  8300  011980  1808               	xorwf	getHexValue@x^0,w,c
  8301  011982  A4D8               	btfss	status,2,c
  8302  011984  EFC6  F08C         	goto	u5771
  8303  011988  EFC8  F08C         	goto	u5770
  8304  01198C                     u5771:
  8305  01198C  EFCA  F08C         	goto	l6495
  8306  011990                     u5770:
  8307  011990                     
  8308                           ;application.c: 175:         hexvalue = 0x0A;
  8309  011990  0E0A               	movlw	10
  8310  011992  6E07               	movwf	getHexValue@hexvalue^0,c
  8311  011994                     l6495:
  8312                           
  8313                           ;application.c: 177:     if(x=='B') {
  8314  011994  0E42               	movlw	66
  8315  011996  1808               	xorwf	getHexValue@x^0,w,c
  8316  011998  A4D8               	btfss	status,2,c
  8317  01199A  EFD1  F08C         	goto	u5781
  8318  01199E  EFD3  F08C         	goto	u5780
  8319  0119A2                     u5781:
  8320  0119A2  EFD5  F08C         	goto	l6499
  8321  0119A6                     u5780:
  8322  0119A6                     
  8323                           ;application.c: 178:         hexvalue = 0x0B;
  8324  0119A6  0E0B               	movlw	11
  8325  0119A8  6E07               	movwf	getHexValue@hexvalue^0,c
  8326  0119AA                     l6499:
  8327                           
  8328                           ;application.c: 180:     if(x=='C') {
  8329  0119AA  0E43               	movlw	67
  8330  0119AC  1808               	xorwf	getHexValue@x^0,w,c
  8331  0119AE  A4D8               	btfss	status,2,c
  8332  0119B0  EFDC  F08C         	goto	u5791
  8333  0119B4  EFDE  F08C         	goto	u5790
  8334  0119B8                     u5791:
  8335  0119B8  EFE0  F08C         	goto	l6503
  8336  0119BC                     u5790:
  8337  0119BC                     
  8338                           ;application.c: 181:         hexvalue = 0x0C;
  8339  0119BC  0E0C               	movlw	12
  8340  0119BE  6E07               	movwf	getHexValue@hexvalue^0,c
  8341  0119C0                     l6503:
  8342                           
  8343                           ;application.c: 183:     if(x=='D') {
  8344  0119C0  0E44               	movlw	68
  8345  0119C2  1808               	xorwf	getHexValue@x^0,w,c
  8346  0119C4  A4D8               	btfss	status,2,c
  8347  0119C6  EFE7  F08C         	goto	u5801
  8348  0119CA  EFE9  F08C         	goto	u5800
  8349  0119CE                     u5801:
  8350  0119CE  EFEB  F08C         	goto	l6507
  8351  0119D2                     u5800:
  8352  0119D2                     
  8353                           ;application.c: 184:         hexvalue = 0x0D;
  8354  0119D2  0E0D               	movlw	13
  8355  0119D4  6E07               	movwf	getHexValue@hexvalue^0,c
  8356  0119D6                     l6507:
  8357                           
  8358                           ;application.c: 186:     if(x=='E') {
  8359  0119D6  0E45               	movlw	69
  8360  0119D8  1808               	xorwf	getHexValue@x^0,w,c
  8361  0119DA  A4D8               	btfss	status,2,c
  8362  0119DC  EFF2  F08C         	goto	u5811
  8363  0119E0  EFF4  F08C         	goto	u5810
  8364  0119E4                     u5811:
  8365  0119E4  EFF6  F08C         	goto	l6511
  8366  0119E8                     u5810:
  8367  0119E8                     
  8368                           ;application.c: 187:         hexvalue = 0x0E;
  8369  0119E8  0E0E               	movlw	14
  8370  0119EA  6E07               	movwf	getHexValue@hexvalue^0,c
  8371  0119EC                     l6511:
  8372                           
  8373                           ;application.c: 189:     if(x=='F') {
  8374  0119EC  0E46               	movlw	70
  8375  0119EE  1808               	xorwf	getHexValue@x^0,w,c
  8376  0119F0  A4D8               	btfss	status,2,c
  8377  0119F2  EFFD  F08C         	goto	u5821
  8378  0119F6  EFFF  F08C         	goto	u5820
  8379  0119FA                     u5821:
  8380  0119FA  EF01  F08D         	goto	l1169
  8381  0119FE                     u5820:
  8382  0119FE                     
  8383                           ;application.c: 190:         hexvalue = 0x0F;
  8384  0119FE  0E0F               	movlw	15
  8385  011A00  6E07               	movwf	getHexValue@hexvalue^0,c
  8386  011A02                     l1169:
  8387                           
  8388                           ;application.c: 192:     return hexvalue;
  8389  011A02  5007               	movf	getHexValue@hexvalue^0,w,c
  8390  011A04  0012               	return		;funcret
  8391  011A06                     __end_of_getHexValue:
  8392                           	callstack 0
  8393                           
  8394 ;; *************** function ___xxtofl *****************
  8395 ;; Defined at:
  8396 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  sign            1    wreg     unsigned char 
  8399 ;;  val             4    6[COMRAM] long 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;  sign            1   14[COMRAM] unsigned char 
  8402 ;;  arg             4   16[COMRAM] unsigned long 
  8403 ;;  exp             1   15[COMRAM] unsigned char 
  8404 ;; Return value:  Size  Location     Type
  8405 ;;                  4    6[COMRAM] unsigned char 
  8406 ;; Registers used:
  8407 ;;		wreg, status,2, status,0
  8408 ;; Tracked objects:
  8409 ;;		On entry : 0/0
  8410 ;;		On exit  : 0/0
  8411 ;;		Unchanged: 0/0
  8412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8414 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8415 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8416 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8417 ;;Total ram usage:       14 bytes
  8418 ;; Hardware stack levels used:    1
  8419 ;; Hardware stack levels required when called:    4
  8420 ;; This function calls:
  8421 ;;		Nothing
  8422 ;; This function is called by:
  8423 ;;		_ApplicationTask
  8424 ;;		_processADCCommand
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text57
  8429  011548                     __ptext57:
  8430                           	callstack 0
  8431  011548                     ___xxtofl:
  8432                           	callstack 24
  8433                           
  8434                           ;incstack = 0
  8435                           ;___xxtofl@sign stored from wreg
  8436  011548  6E0F               	movwf	___xxtofl@sign^0,c
  8437  01154A  500F               	movf	___xxtofl@sign^0,w,c
  8438  01154C  B4D8               	btfsc	status,2,c
  8439  01154E  EFAB  F08A         	goto	u6401
  8440  011552  EFAD  F08A         	goto	u6400
  8441  011556                     u6401:
  8442  011556  EFCF  F08A         	goto	l1991
  8443  01155A                     u6400:
  8444  01155A  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  8445  01155C  EFB4  F08A         	goto	u6410
  8446  011560  EFB2  F08A         	goto	u6411
  8447  011564                     u6411:
  8448  011564  EFCF  F08A         	goto	l1991
  8449  011568                     u6410:
  8450  011568  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  8451  01156C  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  8452  011570  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  8453  011574  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  8454  011578  1E0B               	comf	??___xxtofl^0,f,c
  8455  01157A  1E0C               	comf	(??___xxtofl+1)^0,f,c
  8456  01157C  1E0D               	comf	(??___xxtofl+2)^0,f,c
  8457  01157E  1E0E               	comf	(??___xxtofl+3)^0,f,c
  8458  011580  2A0B               	incf	??___xxtofl^0,f,c
  8459  011582  0E00               	movlw	0
  8460  011584  220C               	addwfc	(??___xxtofl+1)^0,f,c
  8461  011586  220D               	addwfc	(??___xxtofl+2)^0,f,c
  8462  011588  220E               	addwfc	(??___xxtofl+3)^0,f,c
  8463  01158A  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  8464  01158E  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  8465  011592  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  8466  011596  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  8467  01159A  EFD7  F08A         	goto	l6965
  8468  01159E                     l1991:
  8469  01159E  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  8470  0115A2  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8471  0115A6  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8472  0115AA  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8473  0115AE                     l6965:
  8474  0115AE  5007               	movf	___xxtofl@val^0,w,c
  8475  0115B0  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  8476  0115B2  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  8477  0115B4  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  8478  0115B6  A4D8               	btfss	status,2,c
  8479  0115B8  EFE0  F08A         	goto	u6421
  8480  0115BC  EFE2  F08A         	goto	u6420
  8481  0115C0                     u6421:
  8482  0115C0  EFEC  F08A         	goto	l6971
  8483  0115C4                     u6420:
  8484  0115C4  0E00               	movlw	0
  8485  0115C6  6E07               	movwf	?___xxtofl^0,c
  8486  0115C8  0E00               	movlw	0
  8487  0115CA  6E08               	movwf	(?___xxtofl+1)^0,c
  8488  0115CC  0E00               	movlw	0
  8489  0115CE  6E09               	movwf	(?___xxtofl+2)^0,c
  8490  0115D0  0E00               	movlw	0
  8491  0115D2  6E0A               	movwf	(?___xxtofl+3)^0,c
  8492  0115D4  EF7D  F08B         	goto	l1994
  8493  0115D8                     l6971:
  8494  0115D8  0E96               	movlw	150
  8495  0115DA  6E10               	movwf	___xxtofl@exp^0,c
  8496  0115DC  EFF6  F08A         	goto	l6975
  8497  0115E0                     l6973:
  8498  0115E0  2A10               	incf	___xxtofl@exp^0,f,c
  8499  0115E2  90D8               	bcf	status,0,c
  8500  0115E4  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  8501  0115E6  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  8502  0115E8  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  8503  0115EA  3211               	rrcf	___xxtofl@arg^0,f,c
  8504  0115EC                     l6975:
  8505  0115EC  0E00               	movlw	0
  8506  0115EE  1411               	andwf	___xxtofl@arg^0,w,c
  8507  0115F0  6E0B               	movwf	??___xxtofl^0,c
  8508  0115F2  0E00               	movlw	0
  8509  0115F4  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  8510  0115F6  6E0C               	movwf	(??___xxtofl+1)^0,c
  8511  0115F8  0E00               	movlw	0
  8512  0115FA  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  8513  0115FC  6E0D               	movwf	(??___xxtofl+2)^0,c
  8514  0115FE  0EFE               	movlw	254
  8515  011600  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  8516  011602  6E0E               	movwf	(??___xxtofl+3)^0,c
  8517  011604  500B               	movf	??___xxtofl^0,w,c
  8518  011606  100C               	iorwf	(??___xxtofl+1)^0,w,c
  8519  011608  100D               	iorwf	(??___xxtofl+2)^0,w,c
  8520  01160A  100E               	iorwf	(??___xxtofl+3)^0,w,c
  8521  01160C  A4D8               	btfss	status,2,c
  8522  01160E  EF0B  F08B         	goto	u6431
  8523  011612  EF0D  F08B         	goto	u6430
  8524  011616                     u6431:
  8525  011616  EFF0  F08A         	goto	l6973
  8526  01161A                     u6430:
  8527  01161A  EF1B  F08B         	goto	l1998
  8528  01161E                     l6977:
  8529  01161E  2A10               	incf	___xxtofl@exp^0,f,c
  8530  011620  0E01               	movlw	1
  8531  011622  2611               	addwf	___xxtofl@arg^0,f,c
  8532  011624  0E00               	movlw	0
  8533  011626  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  8534  011628  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  8535  01162A  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  8536  01162C  90D8               	bcf	status,0,c
  8537  01162E  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  8538  011630  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  8539  011632  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  8540  011634  3211               	rrcf	___xxtofl@arg^0,f,c
  8541  011636                     l1998:
  8542  011636  0E00               	movlw	0
  8543  011638  1411               	andwf	___xxtofl@arg^0,w,c
  8544  01163A  6E0B               	movwf	??___xxtofl^0,c
  8545  01163C  0E00               	movlw	0
  8546  01163E  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  8547  011640  6E0C               	movwf	(??___xxtofl+1)^0,c
  8548  011642  0E00               	movlw	0
  8549  011644  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  8550  011646  6E0D               	movwf	(??___xxtofl+2)^0,c
  8551  011648  0EFF               	movlw	255
  8552  01164A  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  8553  01164C  6E0E               	movwf	(??___xxtofl+3)^0,c
  8554  01164E  500B               	movf	??___xxtofl^0,w,c
  8555  011650  100C               	iorwf	(??___xxtofl+1)^0,w,c
  8556  011652  100D               	iorwf	(??___xxtofl+2)^0,w,c
  8557  011654  100E               	iorwf	(??___xxtofl+3)^0,w,c
  8558  011656  A4D8               	btfss	status,2,c
  8559  011658  EF30  F08B         	goto	u6441
  8560  01165C  EF32  F08B         	goto	u6440
  8561  011660                     u6441:
  8562  011660  EF0F  F08B         	goto	l6977
  8563  011664                     u6440:
  8564  011664  EF3A  F08B         	goto	l6985
  8565  011668                     l6983:
  8566  011668  0610               	decf	___xxtofl@exp^0,f,c
  8567  01166A  90D8               	bcf	status,0,c
  8568  01166C  3611               	rlcf	___xxtofl@arg^0,f,c
  8569  01166E  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  8570  011670  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  8571  011672  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  8572  011674                     l6985:
  8573  011674  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  8574  011676  EF3F  F08B         	goto	u6451
  8575  01167A  EF41  F08B         	goto	u6450
  8576  01167E                     u6451:
  8577  01167E  EF49  F08B         	goto	l2005
  8578  011682                     u6450:
  8579  011682  0E02               	movlw	2
  8580  011684  6010               	cpfslt	___xxtofl@exp^0,c
  8581  011686  EF47  F08B         	goto	u6461
  8582  01168A  EF49  F08B         	goto	u6460
  8583  01168E                     u6461:
  8584  01168E  EF34  F08B         	goto	l6983
  8585  011692                     u6460:
  8586  011692                     l2005:
  8587  011692  B010               	btfsc	___xxtofl@exp^0,0,c
  8588  011694  EF4E  F08B         	goto	u6471
  8589  011698  EF50  F08B         	goto	u6470
  8590  01169C                     u6471:
  8591  01169C  EF51  F08B         	goto	l6991
  8592  0116A0                     u6470:
  8593  0116A0  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  8594  0116A2                     l6991:
  8595  0116A2  90D8               	bcf	status,0,c
  8596  0116A4  3210               	rrcf	___xxtofl@exp^0,f,c
  8597  0116A6  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  8598  0116AA  6A0C               	clrf	(??___xxtofl+1)^0,c
  8599  0116AC  6A0D               	clrf	(??___xxtofl+2)^0,c
  8600  0116AE  6A0E               	clrf	(??___xxtofl+3)^0,c
  8601  0116B0  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  8602  0116B4  6A0D               	clrf	(??___xxtofl+2)^0,c
  8603  0116B6  6A0C               	clrf	(??___xxtofl+1)^0,c
  8604  0116B8  6A0B               	clrf	??___xxtofl^0,c
  8605  0116BA  500B               	movf	??___xxtofl^0,w,c
  8606  0116BC  1211               	iorwf	___xxtofl@arg^0,f,c
  8607  0116BE  500C               	movf	(??___xxtofl+1)^0,w,c
  8608  0116C0  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  8609  0116C2  500D               	movf	(??___xxtofl+2)^0,w,c
  8610  0116C4  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  8611  0116C6  500E               	movf	(??___xxtofl+3)^0,w,c
  8612  0116C8  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  8613  0116CA  500F               	movf	___xxtofl@sign^0,w,c
  8614  0116CC  B4D8               	btfsc	status,2,c
  8615  0116CE  EF6B  F08B         	goto	u6481
  8616  0116D2  EF6D  F08B         	goto	u6480
  8617  0116D6                     u6481:
  8618  0116D6  EF75  F08B         	goto	l7001
  8619  0116DA                     u6480:
  8620  0116DA  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  8621  0116DC  EF74  F08B         	goto	u6490
  8622  0116E0  EF72  F08B         	goto	u6491
  8623  0116E4                     u6491:
  8624  0116E4  EF75  F08B         	goto	l7001
  8625  0116E8                     u6490:
  8626  0116E8  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  8627  0116EA                     l7001:
  8628  0116EA  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  8629  0116EE  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  8630  0116F2  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  8631  0116F6  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  8632  0116FA                     l1994:
  8633  0116FA  0012               	return		;funcret
  8634  0116FC                     __end_of___xxtofl:
  8635                           	callstack 0
  8636                           
  8637 ;; *************** function ___fltol *****************
  8638 ;; Defined at:
  8639 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  f1              4   70[COMRAM] unsigned char 
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;  exp1            1   79[COMRAM] unsigned char 
  8644 ;;  sign1           1   78[COMRAM] unsigned char 
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  4   70[COMRAM] long 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8656 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8657 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8658 ;;Total ram usage:       10 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    4
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		_ApplicationTask
  8665 ;;		_processADCCommand
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           	psect	text58
  8670  011A06                     __ptext58:
  8671                           	callstack 0
  8672  011A06                     ___fltol:
  8673                           	callstack 24
  8674  011A06  3449               	rlcf	(___fltol@f1+2)^0,w,c
  8675  011A08  344A               	rlcf	(___fltol@f1+3)^0,w,c
  8676  011A0A  6E50               	movwf	___fltol@exp1^0,c
  8677  011A0C  5050               	movf	___fltol@exp1^0,w,c
  8678  011A0E  A4D8               	btfss	status,2,c
  8679  011A10  EF0C  F08D         	goto	u6331
  8680  011A14  EF0E  F08D         	goto	u6330
  8681  011A18                     u6331:
  8682  011A18  EF18  F08D         	goto	l6921
  8683  011A1C                     u6330:
  8684  011A1C                     l6917:
  8685  011A1C  0E00               	movlw	0
  8686  011A1E  6E47               	movwf	?___fltol^0,c
  8687  011A20  0E00               	movlw	0
  8688  011A22  6E48               	movwf	(?___fltol+1)^0,c
  8689  011A24  0E00               	movlw	0
  8690  011A26  6E49               	movwf	(?___fltol+2)^0,c
  8691  011A28  0E00               	movlw	0
  8692  011A2A  6E4A               	movwf	(?___fltol+3)^0,c
  8693  011A2C  EF85  F08D         	goto	l1633
  8694  011A30                     l6921:
  8695  011A30  C047  F04B         	movff	___fltol@f1,??___fltol
  8696  011A34  C048  F04C         	movff	___fltol@f1+1,??___fltol+1
  8697  011A38  C049  F04D         	movff	___fltol@f1+2,??___fltol+2
  8698  011A3C  C04A  F04E         	movff	___fltol@f1+3,??___fltol+3
  8699  011A40  0E20               	movlw	32
  8700  011A42  EF28  F08D         	goto	u6340
  8701  011A46                     u6345:
  8702  011A46  90D8               	bcf	status,0,c
  8703  011A48  324E               	rrcf	(??___fltol+3)^0,f,c
  8704  011A4A  324D               	rrcf	(??___fltol+2)^0,f,c
  8705  011A4C  324C               	rrcf	(??___fltol+1)^0,f,c
  8706  011A4E  324B               	rrcf	??___fltol^0,f,c
  8707  011A50                     u6340:
  8708  011A50  2EE8               	decfsz	wreg,f,c
  8709  011A52  EF23  F08D         	goto	u6345
  8710  011A56  504B               	movf	??___fltol^0,w,c
  8711  011A58  6E4F               	movwf	___fltol@sign1^0,c
  8712  011A5A  8E49               	bsf	(___fltol@f1+2)^0,7,c
  8713  011A5C  0EFF               	movlw	255
  8714  011A5E  1647               	andwf	___fltol@f1^0,f,c
  8715  011A60  0EFF               	movlw	255
  8716  011A62  1648               	andwf	(___fltol@f1+1)^0,f,c
  8717  011A64  0EFF               	movlw	255
  8718  011A66  1649               	andwf	(___fltol@f1+2)^0,f,c
  8719  011A68  0E00               	movlw	0
  8720  011A6A  164A               	andwf	(___fltol@f1+3)^0,f,c
  8721  011A6C  0E96               	movlw	150
  8722  011A6E  5E50               	subwf	___fltol@exp1^0,f,c
  8723  011A70  BE50               	btfsc	___fltol@exp1^0,7,c
  8724  011A72  EF3F  F08D         	goto	u6350
  8725  011A76  EF3D  F08D         	goto	u6351
  8726  011A7A                     u6351:
  8727  011A7A  EF55  F08D         	goto	l6941
  8728  011A7E                     u6350:
  8729  011A7E  5050               	movf	___fltol@exp1^0,w,c
  8730  011A80  0A80               	xorlw	128
  8731  011A82  0F97               	addlw	151
  8732  011A84  B0D8               	btfsc	status,0,c
  8733  011A86  EF47  F08D         	goto	u6361
  8734  011A8A  EF49  F08D         	goto	u6360
  8735  011A8E                     u6361:
  8736  011A8E  EF4B  F08D         	goto	l6937
  8737  011A92                     u6360:
  8738  011A92  EF0E  F08D         	goto	l6917
  8739  011A96                     l6937:
  8740  011A96  90D8               	bcf	status,0,c
  8741  011A98  324A               	rrcf	(___fltol@f1+3)^0,f,c
  8742  011A9A  3249               	rrcf	(___fltol@f1+2)^0,f,c
  8743  011A9C  3248               	rrcf	(___fltol@f1+1)^0,f,c
  8744  011A9E  3247               	rrcf	___fltol@f1^0,f,c
  8745  011AA0  3E50               	incfsz	___fltol@exp1^0,f,c
  8746  011AA2  EF4B  F08D         	goto	l6937
  8747  011AA6  EF6D  F08D         	goto	l6951
  8748  011AAA                     l6941:
  8749  011AAA  0E1F               	movlw	31
  8750  011AAC  6450               	cpfsgt	___fltol@exp1^0,c
  8751  011AAE  EF5B  F08D         	goto	u6371
  8752  011AB2  EF5D  F08D         	goto	u6370
  8753  011AB6                     u6371:
  8754  011AB6  EF65  F08D         	goto	l6949
  8755  011ABA                     u6370:
  8756  011ABA  EF0E  F08D         	goto	l6917
  8757  011ABE                     l6947:
  8758  011ABE  90D8               	bcf	status,0,c
  8759  011AC0  3647               	rlcf	___fltol@f1^0,f,c
  8760  011AC2  3648               	rlcf	(___fltol@f1+1)^0,f,c
  8761  011AC4  3649               	rlcf	(___fltol@f1+2)^0,f,c
  8762  011AC6  364A               	rlcf	(___fltol@f1+3)^0,f,c
  8763  011AC8  0650               	decf	___fltol@exp1^0,f,c
  8764  011ACA                     l6949:
  8765  011ACA  5050               	movf	___fltol@exp1^0,w,c
  8766  011ACC  A4D8               	btfss	status,2,c
  8767  011ACE  EF6B  F08D         	goto	u6381
  8768  011AD2  EF6D  F08D         	goto	u6380
  8769  011AD6                     u6381:
  8770  011AD6  EF5F  F08D         	goto	l6947
  8771  011ADA                     u6380:
  8772  011ADA                     l6951:
  8773  011ADA  504F               	movf	___fltol@sign1^0,w,c
  8774  011ADC  B4D8               	btfsc	status,2,c
  8775  011ADE  EF73  F08D         	goto	u6391
  8776  011AE2  EF75  F08D         	goto	u6390
  8777  011AE6                     u6391:
  8778  011AE6  EF7D  F08D         	goto	l6955
  8779  011AEA                     u6390:
  8780  011AEA  1E4A               	comf	(___fltol@f1+3)^0,f,c
  8781  011AEC  1E49               	comf	(___fltol@f1+2)^0,f,c
  8782  011AEE  1E48               	comf	(___fltol@f1+1)^0,f,c
  8783  011AF0  6C47               	negf	___fltol@f1^0,c
  8784  011AF2  0E00               	movlw	0
  8785  011AF4  2248               	addwfc	(___fltol@f1+1)^0,f,c
  8786  011AF6  2249               	addwfc	(___fltol@f1+2)^0,f,c
  8787  011AF8  224A               	addwfc	(___fltol@f1+3)^0,f,c
  8788  011AFA                     l6955:
  8789  011AFA  C047  F047         	movff	___fltol@f1,?___fltol
  8790  011AFE  C048  F048         	movff	___fltol@f1+1,?___fltol+1
  8791  011B02  C049  F049         	movff	___fltol@f1+2,?___fltol+2
  8792  011B06  C04A  F04A         	movff	___fltol@f1+3,?___fltol+3
  8793  011B0A                     l1633:
  8794  011B0A  0012               	return		;funcret
  8795  011B0C                     __end_of___fltol:
  8796                           	callstack 0
  8797                           
  8798 ;; *************** function ___flmul *****************
  8799 ;; Defined at:
  8800 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcmul.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;  b               4   45[COMRAM] long 
  8803 ;;  a               4   49[COMRAM] long 
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;  prod            4   64[COMRAM] struct .
  8806 ;;  grs             4   59[COMRAM] unsigned long 
  8807 ;;  temp            2   68[COMRAM] struct .
  8808 ;;  bexp            1   63[COMRAM] unsigned char 
  8809 ;;  aexp            1   58[COMRAM] unsigned char 
  8810 ;;  sign            1   57[COMRAM] unsigned char 
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  4   45[COMRAM] unsigned char 
  8813 ;; Registers used:
  8814 ;;		wreg, status,2, status,0, prodl, prodh
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  8820 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8824 ;;Total ram usage:       25 bytes
  8825 ;; Hardware stack levels used:    1
  8826 ;; Hardware stack levels required when called:    4
  8827 ;; This function calls:
  8828 ;;		Nothing
  8829 ;; This function is called by:
  8830 ;;		_ApplicationTask
  8831 ;;		_processADCCommand
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text59
  8836  010000                     __ptext59:
  8837                           	callstack 0
  8838  010000                     ___flmul:
  8839                           	callstack 24
  8840  010000  5031               	movf	(___flmul@b+3)^0,w,c
  8841  010002  0B80               	andlw	128
  8842  010004  6E3A               	movwf	___flmul@sign^0,c
  8843  010006  5031               	movf	(___flmul@b+3)^0,w,c
  8844  010008  2431               	addwf	(___flmul@b+3)^0,w,c
  8845  01000A  6E40               	movwf	___flmul@bexp^0,c
  8846  01000C  AE30               	btfss	(___flmul@b+2)^0,7,c
  8847  01000E  EF0B  F080         	goto	u6141
  8848  010012  EF0D  F080         	goto	u6140
  8849  010016                     u6141:
  8850  010016  EF0E  F080         	goto	l6791
  8851  01001A                     u6140:
  8852  01001A  8040               	bsf	___flmul@bexp^0,0,c
  8853  01001C                     l6791:
  8854  01001C  5040               	movf	___flmul@bexp^0,w,c
  8855  01001E  B4D8               	btfsc	status,2,c
  8856  010020  EF14  F080         	goto	u6151
  8857  010024  EF16  F080         	goto	u6150
  8858  010028                     u6151:
  8859  010028  EF29  F080         	goto	l6799
  8860  01002C                     u6150:
  8861  01002C  2840               	incf	___flmul@bexp^0,w,c
  8862  01002E  A4D8               	btfss	status,2,c
  8863  010030  EF1C  F080         	goto	u6161
  8864  010034  EF1E  F080         	goto	u6160
  8865  010038                     u6161:
  8866  010038  EF26  F080         	goto	l6797
  8867  01003C                     u6160:
  8868  01003C  0E00               	movlw	0
  8869  01003E  6E2E               	movwf	___flmul@b^0,c
  8870  010040  0E00               	movlw	0
  8871  010042  6E2F               	movwf	(___flmul@b+1)^0,c
  8872  010044  0E00               	movlw	0
  8873  010046  6E30               	movwf	(___flmul@b+2)^0,c
  8874  010048  0E00               	movlw	0
  8875  01004A  6E31               	movwf	(___flmul@b+3)^0,c
  8876  01004C                     l6797:
  8877  01004C  8E30               	bsf	(___flmul@b+2)^0,7,c
  8878  01004E  EF31  F080         	goto	l6801
  8879  010052                     l6799:
  8880  010052  0E00               	movlw	0
  8881  010054  6E2E               	movwf	___flmul@b^0,c
  8882  010056  0E00               	movlw	0
  8883  010058  6E2F               	movwf	(___flmul@b+1)^0,c
  8884  01005A  0E00               	movlw	0
  8885  01005C  6E30               	movwf	(___flmul@b+2)^0,c
  8886  01005E  0E00               	movlw	0
  8887  010060  6E31               	movwf	(___flmul@b+3)^0,c
  8888  010062                     l6801:
  8889  010062  5035               	movf	(___flmul@a+3)^0,w,c
  8890  010064  0B80               	andlw	128
  8891  010066  1A3A               	xorwf	___flmul@sign^0,f,c
  8892  010068  5035               	movf	(___flmul@a+3)^0,w,c
  8893  01006A  2435               	addwf	(___flmul@a+3)^0,w,c
  8894  01006C  6E3B               	movwf	___flmul@aexp^0,c
  8895  01006E  AE34               	btfss	(___flmul@a+2)^0,7,c
  8896  010070  EF3C  F080         	goto	u6171
  8897  010074  EF3E  F080         	goto	u6170
  8898  010078                     u6171:
  8899  010078  EF3F  F080         	goto	l6809
  8900  01007C                     u6170:
  8901  01007C  803B               	bsf	___flmul@aexp^0,0,c
  8902  01007E                     l6809:
  8903  01007E  503B               	movf	___flmul@aexp^0,w,c
  8904  010080  B4D8               	btfsc	status,2,c
  8905  010082  EF45  F080         	goto	u6181
  8906  010086  EF47  F080         	goto	u6180
  8907  01008A                     u6181:
  8908  01008A  EF5A  F080         	goto	l6817
  8909  01008E                     u6180:
  8910  01008E  283B               	incf	___flmul@aexp^0,w,c
  8911  010090  A4D8               	btfss	status,2,c
  8912  010092  EF4D  F080         	goto	u6191
  8913  010096  EF4F  F080         	goto	u6190
  8914  01009A                     u6191:
  8915  01009A  EF57  F080         	goto	l6815
  8916  01009E                     u6190:
  8917  01009E  0E00               	movlw	0
  8918  0100A0  6E32               	movwf	___flmul@a^0,c
  8919  0100A2  0E00               	movlw	0
  8920  0100A4  6E33               	movwf	(___flmul@a+1)^0,c
  8921  0100A6  0E00               	movlw	0
  8922  0100A8  6E34               	movwf	(___flmul@a+2)^0,c
  8923  0100AA  0E00               	movlw	0
  8924  0100AC  6E35               	movwf	(___flmul@a+3)^0,c
  8925  0100AE                     l6815:
  8926  0100AE  8E34               	bsf	(___flmul@a+2)^0,7,c
  8927  0100B0  EF62  F080         	goto	l1950
  8928  0100B4                     l6817:
  8929  0100B4  0E00               	movlw	0
  8930  0100B6  6E32               	movwf	___flmul@a^0,c
  8931  0100B8  0E00               	movlw	0
  8932  0100BA  6E33               	movwf	(___flmul@a+1)^0,c
  8933  0100BC  0E00               	movlw	0
  8934  0100BE  6E34               	movwf	(___flmul@a+2)^0,c
  8935  0100C0  0E00               	movlw	0
  8936  0100C2  6E35               	movwf	(___flmul@a+3)^0,c
  8937  0100C4                     l1950:
  8938  0100C4  503B               	movf	___flmul@aexp^0,w,c
  8939  0100C6  B4D8               	btfsc	status,2,c
  8940  0100C8  EF68  F080         	goto	u6201
  8941  0100CC  EF6A  F080         	goto	u6200
  8942  0100D0                     u6201:
  8943  0100D0  EF72  F080         	goto	l6821
  8944  0100D4                     u6200:
  8945  0100D4  5040               	movf	___flmul@bexp^0,w,c
  8946  0100D6  A4D8               	btfss	status,2,c
  8947  0100D8  EF70  F080         	goto	u6211
  8948  0100DC  EF72  F080         	goto	u6210
  8949  0100E0                     u6211:
  8950  0100E0  EF7C  F080         	goto	l6825
  8951  0100E4                     u6210:
  8952  0100E4                     l6821:
  8953  0100E4  0E00               	movlw	0
  8954  0100E6  6E2E               	movwf	?___flmul^0,c
  8955  0100E8  0E00               	movlw	0
  8956  0100EA  6E2F               	movwf	(?___flmul+1)^0,c
  8957  0100EC  0E00               	movlw	0
  8958  0100EE  6E30               	movwf	(?___flmul+2)^0,c
  8959  0100F0  0E00               	movlw	0
  8960  0100F2  6E31               	movwf	(?___flmul+3)^0,c
  8961  0100F4  EF14  F082         	goto	l1954
  8962  0100F8                     l6825:
  8963  0100F8  5034               	movf	(___flmul@a+2)^0,w,c
  8964  0100FA  022E               	mulwf	___flmul@b^0,c
  8965  0100FC  CFF3 F045          	movff	prodl,___flmul@temp
  8966  010100  CFF4 F046          	movff	prodh,___flmul@temp+1
  8967  010104  5045               	movf	___flmul@temp^0,w,c
  8968  010106  6E3C               	movwf	___flmul@grs^0,c
  8969  010108  6A3D               	clrf	(___flmul@grs+1)^0,c
  8970  01010A  6A3E               	clrf	(___flmul@grs+2)^0,c
  8971  01010C  6A3F               	clrf	(___flmul@grs+3)^0,c
  8972  01010E  5046               	movf	(___flmul@temp+1)^0,w,c
  8973  010110  6E41               	movwf	___flmul@prod^0,c
  8974  010112  6A42               	clrf	(___flmul@prod+1)^0,c
  8975  010114  6A43               	clrf	(___flmul@prod+2)^0,c
  8976  010116  6A44               	clrf	(___flmul@prod+3)^0,c
  8977  010118  5033               	movf	(___flmul@a+1)^0,w,c
  8978  01011A  022F               	mulwf	(___flmul@b+1)^0,c
  8979  01011C  CFF3 F045          	movff	prodl,___flmul@temp
  8980  010120  CFF4 F046          	movff	prodh,___flmul@temp+1
  8981  010124  5045               	movf	___flmul@temp^0,w,c
  8982  010126  263C               	addwf	___flmul@grs^0,f,c
  8983  010128  0E00               	movlw	0
  8984  01012A  223D               	addwfc	(___flmul@grs+1)^0,f,c
  8985  01012C  223E               	addwfc	(___flmul@grs+2)^0,f,c
  8986  01012E  223F               	addwfc	(___flmul@grs+3)^0,f,c
  8987  010130  5046               	movf	(___flmul@temp+1)^0,w,c
  8988  010132  2641               	addwf	___flmul@prod^0,f,c
  8989  010134  0E00               	movlw	0
  8990  010136  2242               	addwfc	(___flmul@prod+1)^0,f,c
  8991  010138  2243               	addwfc	(___flmul@prod+2)^0,f,c
  8992  01013A  2244               	addwfc	(___flmul@prod+3)^0,f,c
  8993  01013C  5032               	movf	___flmul@a^0,w,c
  8994  01013E  0230               	mulwf	(___flmul@b+2)^0,c
  8995  010140  CFF3 F045          	movff	prodl,___flmul@temp
  8996  010144  CFF4 F046          	movff	prodh,___flmul@temp+1
  8997  010148  5045               	movf	___flmul@temp^0,w,c
  8998  01014A  263C               	addwf	___flmul@grs^0,f,c
  8999  01014C  0E00               	movlw	0
  9000  01014E  223D               	addwfc	(___flmul@grs+1)^0,f,c
  9001  010150  223E               	addwfc	(___flmul@grs+2)^0,f,c
  9002  010152  223F               	addwfc	(___flmul@grs+3)^0,f,c
  9003  010154  5046               	movf	(___flmul@temp+1)^0,w,c
  9004  010156  2641               	addwf	___flmul@prod^0,f,c
  9005  010158  0E00               	movlw	0
  9006  01015A  2242               	addwfc	(___flmul@prod+1)^0,f,c
  9007  01015C  2243               	addwfc	(___flmul@prod+2)^0,f,c
  9008  01015E  2244               	addwfc	(___flmul@prod+3)^0,f,c
  9009  010160  C03E  F03F         	movff	___flmul@grs+2,___flmul@grs+3
  9010  010164  C03D  F03E         	movff	___flmul@grs+1,___flmul@grs+2
  9011  010168  C03C  F03D         	movff	___flmul@grs,___flmul@grs+1
  9012  01016C  6A3C               	clrf	___flmul@grs^0,c
  9013  01016E  5032               	movf	___flmul@a^0,w,c
  9014  010170  022F               	mulwf	(___flmul@b+1)^0,c
  9015  010172  CFF3 F045          	movff	prodl,___flmul@temp
  9016  010176  CFF4 F046          	movff	prodh,___flmul@temp+1
  9017  01017A  5045               	movf	___flmul@temp^0,w,c
  9018  01017C  263C               	addwf	___flmul@grs^0,f,c
  9019  01017E  5046               	movf	(___flmul@temp+1)^0,w,c
  9020  010180  223D               	addwfc	(___flmul@grs+1)^0,f,c
  9021  010182  0E00               	movlw	0
  9022  010184  223E               	addwfc	(___flmul@grs+2)^0,f,c
  9023  010186  0E00               	movlw	0
  9024  010188  223F               	addwfc	(___flmul@grs+3)^0,f,c
  9025  01018A  5033               	movf	(___flmul@a+1)^0,w,c
  9026  01018C  022E               	mulwf	___flmul@b^0,c
  9027  01018E  CFF3 F045          	movff	prodl,___flmul@temp
  9028  010192  CFF4 F046          	movff	prodh,___flmul@temp+1
  9029  010196  5045               	movf	___flmul@temp^0,w,c
  9030  010198  263C               	addwf	___flmul@grs^0,f,c
  9031  01019A  5046               	movf	(___flmul@temp+1)^0,w,c
  9032  01019C  223D               	addwfc	(___flmul@grs+1)^0,f,c
  9033  01019E  0E00               	movlw	0
  9034  0101A0  223E               	addwfc	(___flmul@grs+2)^0,f,c
  9035  0101A2  0E00               	movlw	0
  9036  0101A4  223F               	addwfc	(___flmul@grs+3)^0,f,c
  9037  0101A6  C03E  F03F         	movff	___flmul@grs+2,___flmul@grs+3
  9038  0101AA  C03D  F03E         	movff	___flmul@grs+1,___flmul@grs+2
  9039  0101AE  C03C  F03D         	movff	___flmul@grs,___flmul@grs+1
  9040  0101B2  6A3C               	clrf	___flmul@grs^0,c
  9041  0101B4  5032               	movf	___flmul@a^0,w,c
  9042  0101B6  022E               	mulwf	___flmul@b^0,c
  9043  0101B8  CFF3 F045          	movff	prodl,___flmul@temp
  9044  0101BC  CFF4 F046          	movff	prodh,___flmul@temp+1
  9045  0101C0  5045               	movf	___flmul@temp^0,w,c
  9046  0101C2  263C               	addwf	___flmul@grs^0,f,c
  9047  0101C4  5046               	movf	(___flmul@temp+1)^0,w,c
  9048  0101C6  223D               	addwfc	(___flmul@grs+1)^0,f,c
  9049  0101C8  0E00               	movlw	0
  9050  0101CA  223E               	addwfc	(___flmul@grs+2)^0,f,c
  9051  0101CC  0E00               	movlw	0
  9052  0101CE  223F               	addwfc	(___flmul@grs+3)^0,f,c
  9053  0101D0  5034               	movf	(___flmul@a+2)^0,w,c
  9054  0101D2  022F               	mulwf	(___flmul@b+1)^0,c
  9055  0101D4  CFF3 F045          	movff	prodl,___flmul@temp
  9056  0101D8  CFF4 F046          	movff	prodh,___flmul@temp+1
  9057  0101DC  5045               	movf	___flmul@temp^0,w,c
  9058  0101DE  2641               	addwf	___flmul@prod^0,f,c
  9059  0101E0  5046               	movf	(___flmul@temp+1)^0,w,c
  9060  0101E2  2242               	addwfc	(___flmul@prod+1)^0,f,c
  9061  0101E4  0E00               	movlw	0
  9062  0101E6  2243               	addwfc	(___flmul@prod+2)^0,f,c
  9063  0101E8  0E00               	movlw	0
  9064  0101EA  2244               	addwfc	(___flmul@prod+3)^0,f,c
  9065  0101EC  5033               	movf	(___flmul@a+1)^0,w,c
  9066  0101EE  0230               	mulwf	(___flmul@b+2)^0,c
  9067  0101F0  CFF3 F045          	movff	prodl,___flmul@temp
  9068  0101F4  CFF4 F046          	movff	prodh,___flmul@temp+1
  9069  0101F8  5045               	movf	___flmul@temp^0,w,c
  9070  0101FA  2641               	addwf	___flmul@prod^0,f,c
  9071  0101FC  5046               	movf	(___flmul@temp+1)^0,w,c
  9072  0101FE  2242               	addwfc	(___flmul@prod+1)^0,f,c
  9073  010200  0E00               	movlw	0
  9074  010202  2243               	addwfc	(___flmul@prod+2)^0,f,c
  9075  010204  0E00               	movlw	0
  9076  010206  2244               	addwfc	(___flmul@prod+3)^0,f,c
  9077  010208  5034               	movf	(___flmul@a+2)^0,w,c
  9078  01020A  0230               	mulwf	(___flmul@b+2)^0,c
  9079  01020C  CFF3 F045          	movff	prodl,___flmul@temp
  9080  010210  CFF4 F046          	movff	prodh,___flmul@temp+1
  9081  010214  5045               	movf	___flmul@temp^0,w,c
  9082  010216  6E36               	movwf	??___flmul^0,c
  9083  010218  5046               	movf	(___flmul@temp+1)^0,w,c
  9084  01021A  6E37               	movwf	(??___flmul+1)^0,c
  9085  01021C  6A38               	clrf	(??___flmul+2)^0,c
  9086  01021E  6A39               	clrf	(??___flmul+3)^0,c
  9087  010220  C038  F039         	movff	??___flmul+2,??___flmul+3
  9088  010224  C037  F038         	movff	??___flmul+1,??___flmul+2
  9089  010228  C036  F037         	movff	??___flmul,??___flmul+1
  9090  01022C  6A36               	clrf	??___flmul^0,c
  9091  01022E  5036               	movf	??___flmul^0,w,c
  9092  010230  2641               	addwf	___flmul@prod^0,f,c
  9093  010232  5037               	movf	(??___flmul+1)^0,w,c
  9094  010234  2242               	addwfc	(___flmul@prod+1)^0,f,c
  9095  010236  5038               	movf	(??___flmul+2)^0,w,c
  9096  010238  2243               	addwfc	(___flmul@prod+2)^0,f,c
  9097  01023A  5039               	movf	(??___flmul+3)^0,w,c
  9098  01023C  2244               	addwfc	(___flmul@prod+3)^0,f,c
  9099  01023E  C03C  F036         	movff	___flmul@grs,??___flmul
  9100  010242  C03D  F037         	movff	___flmul@grs+1,??___flmul+1
  9101  010246  C03E  F038         	movff	___flmul@grs+2,??___flmul+2
  9102  01024A  C03F  F039         	movff	___flmul@grs+3,??___flmul+3
  9103  01024E  0E19               	movlw	25
  9104  010250  EF2F  F081         	goto	u6220
  9105  010254                     u6225:
  9106  010254  90D8               	bcf	status,0,c
  9107  010256  3239               	rrcf	(??___flmul+3)^0,f,c
  9108  010258  3238               	rrcf	(??___flmul+2)^0,f,c
  9109  01025A  3237               	rrcf	(??___flmul+1)^0,f,c
  9110  01025C  3236               	rrcf	??___flmul^0,f,c
  9111  01025E                     u6220:
  9112  01025E  2EE8               	decfsz	wreg,f,c
  9113  010260  EF2A  F081         	goto	u6225
  9114  010264  5036               	movf	??___flmul^0,w,c
  9115  010266  2641               	addwf	___flmul@prod^0,f,c
  9116  010268  5037               	movf	(??___flmul+1)^0,w,c
  9117  01026A  2242               	addwfc	(___flmul@prod+1)^0,f,c
  9118  01026C  5038               	movf	(??___flmul+2)^0,w,c
  9119  01026E  2243               	addwfc	(___flmul@prod+2)^0,f,c
  9120  010270  5039               	movf	(??___flmul+3)^0,w,c
  9121  010272  2244               	addwfc	(___flmul@prod+3)^0,f,c
  9122  010274  C03E  F03F         	movff	___flmul@grs+2,___flmul@grs+3
  9123  010278  C03D  F03E         	movff	___flmul@grs+1,___flmul@grs+2
  9124  01027C  C03C  F03D         	movff	___flmul@grs,___flmul@grs+1
  9125  010280  6A3C               	clrf	___flmul@grs^0,c
  9126  010282  503B               	movf	___flmul@aexp^0,w,c
  9127  010284  C040  F036         	movff	___flmul@bexp,??___flmul
  9128  010288  6A37               	clrf	(??___flmul+1)^0,c
  9129  01028A  2636               	addwf	??___flmul^0,f,c
  9130  01028C  0E00               	movlw	0
  9131  01028E  2237               	addwfc	(??___flmul+1)^0,f,c
  9132  010290  0E82               	movlw	130
  9133  010292  2436               	addwf	??___flmul^0,w,c
  9134  010294  6E45               	movwf	___flmul@temp^0,c
  9135  010296  0EFF               	movlw	255
  9136  010298  2037               	addwfc	(??___flmul+1)^0,w,c
  9137  01029A  6E46               	movwf	(___flmul@temp+1)^0,c
  9138  01029C  EF65  F081         	goto	l6873
  9139  0102A0                     l6867:
  9140  0102A0  90D8               	bcf	status,0,c
  9141  0102A2  3641               	rlcf	___flmul@prod^0,f,c
  9142  0102A4  3642               	rlcf	(___flmul@prod+1)^0,f,c
  9143  0102A6  3643               	rlcf	(___flmul@prod+2)^0,f,c
  9144  0102A8  3644               	rlcf	(___flmul@prod+3)^0,f,c
  9145  0102AA  AE3F               	btfss	(___flmul@grs+3)^0,7,c
  9146  0102AC  EF5A  F081         	goto	u6231
  9147  0102B0  EF5C  F081         	goto	u6230
  9148  0102B4                     u6231:
  9149  0102B4  EF5D  F081         	goto	l1957
  9150  0102B8                     u6230:
  9151  0102B8  8041               	bsf	___flmul@prod^0,0,c
  9152  0102BA                     l1957:
  9153  0102BA  90D8               	bcf	status,0,c
  9154  0102BC  363C               	rlcf	___flmul@grs^0,f,c
  9155  0102BE  363D               	rlcf	(___flmul@grs+1)^0,f,c
  9156  0102C0  363E               	rlcf	(___flmul@grs+2)^0,f,c
  9157  0102C2  363F               	rlcf	(___flmul@grs+3)^0,f,c
  9158  0102C4  0645               	decf	___flmul@temp^0,f,c
  9159  0102C6  A0D8               	btfss	status,0,c
  9160  0102C8  0646               	decf	(___flmul@temp+1)^0,f,c
  9161  0102CA                     l6873:
  9162  0102CA  AE43               	btfss	(___flmul@prod+2)^0,7,c
  9163  0102CC  EF6A  F081         	goto	u6241
  9164  0102D0  EF6C  F081         	goto	u6240
  9165  0102D4                     u6241:
  9166  0102D4  EF50  F081         	goto	l6867
  9167  0102D8                     u6240:
  9168  0102D8  0E00               	movlw	0
  9169  0102DA  6E3B               	movwf	___flmul@aexp^0,c
  9170  0102DC  AE3F               	btfss	(___flmul@grs+3)^0,7,c
  9171  0102DE  EF73  F081         	goto	u6251
  9172  0102E2  EF75  F081         	goto	u6250
  9173  0102E6                     u6251:
  9174  0102E6  EF99  F081         	goto	l1959
  9175  0102EA                     u6250:
  9176  0102EA  0EFF               	movlw	255
  9177  0102EC  143C               	andwf	___flmul@grs^0,w,c
  9178  0102EE  6E36               	movwf	??___flmul^0,c
  9179  0102F0  0EFF               	movlw	255
  9180  0102F2  143D               	andwf	(___flmul@grs+1)^0,w,c
  9181  0102F4  6E37               	movwf	(??___flmul+1)^0,c
  9182  0102F6  0EFF               	movlw	255
  9183  0102F8  143E               	andwf	(___flmul@grs+2)^0,w,c
  9184  0102FA  6E38               	movwf	(??___flmul+2)^0,c
  9185  0102FC  0E7F               	movlw	127
  9186  0102FE  143F               	andwf	(___flmul@grs+3)^0,w,c
  9187  010300  6E39               	movwf	(??___flmul+3)^0,c
  9188  010302  5036               	movf	??___flmul^0,w,c
  9189  010304  1037               	iorwf	(??___flmul+1)^0,w,c
  9190  010306  1038               	iorwf	(??___flmul+2)^0,w,c
  9191  010308  1039               	iorwf	(??___flmul+3)^0,w,c
  9192  01030A  B4D8               	btfsc	status,2,c
  9193  01030C  EF8A  F081         	goto	u6261
  9194  010310  EF8C  F081         	goto	u6260
  9195  010314                     u6261:
  9196  010314  EF90  F081         	goto	l1960
  9197  010318                     u6260:
  9198  010318                     l6881:
  9199  010318  0E01               	movlw	1
  9200  01031A  6E3B               	movwf	___flmul@aexp^0,c
  9201  01031C  EF99  F081         	goto	l1959
  9202  010320                     l1960:
  9203  010320  A041               	btfss	___flmul@prod^0,0,c
  9204  010322  EF95  F081         	goto	u6271
  9205  010326  EF97  F081         	goto	u6270
  9206  01032A                     u6271:
  9207  01032A  EF99  F081         	goto	l1959
  9208  01032E                     u6270:
  9209  01032E  EF8C  F081         	goto	l6881
  9210  010332                     l1959:
  9211  010332  503B               	movf	___flmul@aexp^0,w,c
  9212  010334  B4D8               	btfsc	status,2,c
  9213  010336  EF9F  F081         	goto	u6281
  9214  01033A  EFA1  F081         	goto	u6280
  9215  01033E                     u6281:
  9216  01033E  EFC5  F081         	goto	l6893
  9217  010342                     u6280:
  9218  010342  0E01               	movlw	1
  9219  010344  2641               	addwf	___flmul@prod^0,f,c
  9220  010346  0E00               	movlw	0
  9221  010348  2242               	addwfc	(___flmul@prod+1)^0,f,c
  9222  01034A  2243               	addwfc	(___flmul@prod+2)^0,f,c
  9223  01034C  2244               	addwfc	(___flmul@prod+3)^0,f,c
  9224  01034E  A044               	btfss	(___flmul@prod+3)^0,0,c
  9225  010350  EFAC  F081         	goto	u6291
  9226  010354  EFAE  F081         	goto	u6290
  9227  010358                     u6291:
  9228  010358  EFC5  F081         	goto	l6893
  9229  01035C                     u6290:
  9230  01035C  C041  F036         	movff	___flmul@prod,??___flmul
  9231  010360  C042  F037         	movff	___flmul@prod+1,??___flmul+1
  9232  010364  C043  F038         	movff	___flmul@prod+2,??___flmul+2
  9233  010368  C044  F039         	movff	___flmul@prod+3,??___flmul+3
  9234  01036C  3439               	rlcf	(??___flmul+3)^0,w,c
  9235  01036E  3239               	rrcf	(??___flmul+3)^0,f,c
  9236  010370  3238               	rrcf	(??___flmul+2)^0,f,c
  9237  010372  3237               	rrcf	(??___flmul+1)^0,f,c
  9238  010374  3236               	rrcf	??___flmul^0,f,c
  9239  010376  C036  F041         	movff	??___flmul,___flmul@prod
  9240  01037A  C037  F042         	movff	??___flmul+1,___flmul@prod+1
  9241  01037E  C038  F043         	movff	??___flmul+2,___flmul@prod+2
  9242  010382  C039  F044         	movff	??___flmul+3,___flmul@prod+3
  9243  010386  4A45               	infsnz	___flmul@temp^0,f,c
  9244  010388  2A46               	incf	(___flmul@temp+1)^0,f,c
  9245  01038A                     l6893:
  9246  01038A  BE46               	btfsc	(___flmul@temp+1)^0,7,c
  9247  01038C  EFD0  F081         	goto	u6301
  9248  010390  5046               	movf	(___flmul@temp+1)^0,w,c
  9249  010392  E108               	bnz	u6300
  9250  010394  2845               	incf	___flmul@temp^0,w,c
  9251  010396  A0D8               	btfss	status,0,c
  9252  010398  EFD0  F081         	goto	u6301
  9253  01039C  EFD2  F081         	goto	u6300
  9254  0103A0                     u6301:
  9255  0103A0  EFDC  F081         	goto	l6897
  9256  0103A4                     u6300:
  9257  0103A4  0E00               	movlw	0
  9258  0103A6  6E41               	movwf	___flmul@prod^0,c
  9259  0103A8  0E00               	movlw	0
  9260  0103AA  6E42               	movwf	(___flmul@prod+1)^0,c
  9261  0103AC  0E80               	movlw	128
  9262  0103AE  6E43               	movwf	(___flmul@prod+2)^0,c
  9263  0103B0  0E7F               	movlw	127
  9264  0103B2  6E44               	movwf	(___flmul@prod+3)^0,c
  9265  0103B4  EF0A  F082         	goto	l6909
  9266  0103B8                     l6897:
  9267  0103B8  BE46               	btfsc	(___flmul@temp+1)^0,7,c
  9268  0103BA  EFE9  F081         	goto	u6310
  9269  0103BE  5046               	movf	(___flmul@temp+1)^0,w,c
  9270  0103C0  E106               	bnz	u6311
  9271  0103C2  0445               	decf	___flmul@temp^0,w,c
  9272  0103C4  B0D8               	btfsc	status,0,c
  9273  0103C6  EFE7  F081         	goto	u6311
  9274  0103CA  EFE9  F081         	goto	u6310
  9275  0103CE                     u6311:
  9276  0103CE  EFF5  F081         	goto	l1967
  9277  0103D2                     u6310:
  9278  0103D2  0E00               	movlw	0
  9279  0103D4  6E41               	movwf	___flmul@prod^0,c
  9280  0103D6  0E00               	movlw	0
  9281  0103D8  6E42               	movwf	(___flmul@prod+1)^0,c
  9282  0103DA  0E00               	movlw	0
  9283  0103DC  6E43               	movwf	(___flmul@prod+2)^0,c
  9284  0103DE  0E00               	movlw	0
  9285  0103E0  6E44               	movwf	(___flmul@prod+3)^0,c
  9286  0103E2  0E00               	movlw	0
  9287  0103E4  6E3A               	movwf	___flmul@sign^0,c
  9288  0103E6  EF0A  F082         	goto	l6909
  9289  0103EA                     l1967:
  9290  0103EA  C045  F040         	movff	___flmul@temp,___flmul@bexp
  9291  0103EE  0EFF               	movlw	255
  9292  0103F0  1641               	andwf	___flmul@prod^0,f,c
  9293  0103F2  0EFF               	movlw	255
  9294  0103F4  1642               	andwf	(___flmul@prod+1)^0,f,c
  9295  0103F6  0E7F               	movlw	127
  9296  0103F8  1643               	andwf	(___flmul@prod+2)^0,f,c
  9297  0103FA  0E00               	movlw	0
  9298  0103FC  1644               	andwf	(___flmul@prod+3)^0,f,c
  9299  0103FE  A040               	btfss	___flmul@bexp^0,0,c
  9300  010400  EF04  F082         	goto	u6321
  9301  010404  EF06  F082         	goto	u6320
  9302  010408                     u6321:
  9303  010408  EF07  F082         	goto	l6907
  9304  01040C                     u6320:
  9305  01040C  8E43               	bsf	(___flmul@prod+2)^0,7,c
  9306  01040E                     l6907:
  9307  01040E  90D8               	bcf	status,0,c
  9308  010410  3040               	rrcf	___flmul@bexp^0,w,c
  9309  010412  6E44               	movwf	(___flmul@prod+3)^0,c
  9310  010414                     l6909:
  9311  010414  503A               	movf	___flmul@sign^0,w,c
  9312  010416  1244               	iorwf	(___flmul@prod+3)^0,f,c
  9313  010418  C041  F02E         	movff	___flmul@prod,?___flmul
  9314  01041C  C042  F02F         	movff	___flmul@prod+1,?___flmul+1
  9315  010420  C043  F030         	movff	___flmul@prod+2,?___flmul+2
  9316  010424  C044  F031         	movff	___flmul@prod+3,?___flmul+3
  9317  010428                     l1954:
  9318  010428  0012               	return		;funcret
  9319  01042A                     __end_of___flmul:
  9320                           	callstack 0
  9321                           
  9322 ;; *************** function ___fldiv *****************
  9323 ;; Defined at:
  9324 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcdiv.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  b               4   20[COMRAM] unsigned char 
  9327 ;;  a               4   24[COMRAM] unsigned char 
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;  grs             4   39[COMRAM] unsigned long 
  9330 ;;  rem             4   32[COMRAM] unsigned long 
  9331 ;;  new_exp         2   37[COMRAM] short 
  9332 ;;  aexp            1   44[COMRAM] unsigned char 
  9333 ;;  bexp            1   43[COMRAM] unsigned char 
  9334 ;;  sign            1   36[COMRAM] unsigned char 
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  4   20[COMRAM] unsigned char 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2, status,0
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9344 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9345 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9346 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9347 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9348 ;;Total ram usage:       25 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    4
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_ApplicationTask
  9355 ;;		_processADCCommand
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text60
  9360  010B94                     __ptext60:
  9361                           	callstack 0
  9362  010B94                     ___fldiv:
  9363                           	callstack 24
  9364  010B94  5018               	movf	(___fldiv@b+3)^0,w,c
  9365  010B96  0B80               	andlw	128
  9366  010B98  6E25               	movwf	___fldiv@sign^0,c
  9367  010B9A  5018               	movf	(___fldiv@b+3)^0,w,c
  9368  010B9C  2418               	addwf	(___fldiv@b+3)^0,w,c
  9369  010B9E  6E2C               	movwf	___fldiv@bexp^0,c
  9370  010BA0  AE17               	btfss	(___fldiv@b+2)^0,7,c
  9371  010BA2  EFD5  F085         	goto	u5911
  9372  010BA6  EFD7  F085         	goto	u5910
  9373  010BAA                     u5911:
  9374  010BAA  EFD8  F085         	goto	l6653
  9375  010BAE                     u5910:
  9376  010BAE  802C               	bsf	___fldiv@bexp^0,0,c
  9377  010BB0                     l6653:
  9378  010BB0  502C               	movf	___fldiv@bexp^0,w,c
  9379  010BB2  B4D8               	btfsc	status,2,c
  9380  010BB4  EFDE  F085         	goto	u5921
  9381  010BB8  EFE0  F085         	goto	u5920
  9382  010BBC                     u5921:
  9383  010BBC  EFF5  F085         	goto	l6663
  9384  010BC0                     u5920:
  9385  010BC0  282C               	incf	___fldiv@bexp^0,w,c
  9386  010BC2  A4D8               	btfss	status,2,c
  9387  010BC4  EFE6  F085         	goto	u5931
  9388  010BC8  EFE8  F085         	goto	u5930
  9389  010BCC                     u5931:
  9390  010BCC  EFF0  F085         	goto	l6659
  9391  010BD0                     u5930:
  9392  010BD0  0E00               	movlw	0
  9393  010BD2  6E15               	movwf	___fldiv@b^0,c
  9394  010BD4  0E00               	movlw	0
  9395  010BD6  6E16               	movwf	(___fldiv@b+1)^0,c
  9396  010BD8  0E00               	movlw	0
  9397  010BDA  6E17               	movwf	(___fldiv@b+2)^0,c
  9398  010BDC  0E00               	movlw	0
  9399  010BDE  6E18               	movwf	(___fldiv@b+3)^0,c
  9400  010BE0                     l6659:
  9401  010BE0  8E17               	bsf	(___fldiv@b+2)^0,7,c
  9402  010BE2  0E00               	movlw	0
  9403  010BE4  6E18               	movwf	(___fldiv@b+3)^0,c
  9404  010BE6  EFFD  F085         	goto	l6665
  9405  010BEA                     l6663:
  9406  010BEA  0E00               	movlw	0
  9407  010BEC  6E15               	movwf	___fldiv@b^0,c
  9408  010BEE  0E00               	movlw	0
  9409  010BF0  6E16               	movwf	(___fldiv@b+1)^0,c
  9410  010BF2  0E00               	movlw	0
  9411  010BF4  6E17               	movwf	(___fldiv@b+2)^0,c
  9412  010BF6  0E00               	movlw	0
  9413  010BF8  6E18               	movwf	(___fldiv@b+3)^0,c
  9414  010BFA                     l6665:
  9415  010BFA  501C               	movf	(___fldiv@a+3)^0,w,c
  9416  010BFC  0B80               	andlw	128
  9417  010BFE  1A25               	xorwf	___fldiv@sign^0,f,c
  9418  010C00  501C               	movf	(___fldiv@a+3)^0,w,c
  9419  010C02  241C               	addwf	(___fldiv@a+3)^0,w,c
  9420  010C04  6E2D               	movwf	___fldiv@aexp^0,c
  9421  010C06  AE1B               	btfss	(___fldiv@a+2)^0,7,c
  9422  010C08  EF08  F086         	goto	u5941
  9423  010C0C  EF0A  F086         	goto	u5940
  9424  010C10                     u5941:
  9425  010C10  EF0B  F086         	goto	l6673
  9426  010C14                     u5940:
  9427  010C14  802D               	bsf	___fldiv@aexp^0,0,c
  9428  010C16                     l6673:
  9429  010C16  502D               	movf	___fldiv@aexp^0,w,c
  9430  010C18  B4D8               	btfsc	status,2,c
  9431  010C1A  EF11  F086         	goto	u5951
  9432  010C1E  EF13  F086         	goto	u5950
  9433  010C22                     u5951:
  9434  010C22  EF28  F086         	goto	l6683
  9435  010C26                     u5950:
  9436  010C26  282D               	incf	___fldiv@aexp^0,w,c
  9437  010C28  A4D8               	btfss	status,2,c
  9438  010C2A  EF19  F086         	goto	u5961
  9439  010C2E  EF1B  F086         	goto	u5960
  9440  010C32                     u5961:
  9441  010C32  EF23  F086         	goto	l6679
  9442  010C36                     u5960:
  9443  010C36  0E00               	movlw	0
  9444  010C38  6E19               	movwf	___fldiv@a^0,c
  9445  010C3A  0E00               	movlw	0
  9446  010C3C  6E1A               	movwf	(___fldiv@a+1)^0,c
  9447  010C3E  0E00               	movlw	0
  9448  010C40  6E1B               	movwf	(___fldiv@a+2)^0,c
  9449  010C42  0E00               	movlw	0
  9450  010C44  6E1C               	movwf	(___fldiv@a+3)^0,c
  9451  010C46                     l6679:
  9452  010C46  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  9453  010C48  0E00               	movlw	0
  9454  010C4A  6E1C               	movwf	(___fldiv@a+3)^0,c
  9455  010C4C  EF30  F086         	goto	l6685
  9456  010C50                     l6683:
  9457  010C50  0E00               	movlw	0
  9458  010C52  6E19               	movwf	___fldiv@a^0,c
  9459  010C54  0E00               	movlw	0
  9460  010C56  6E1A               	movwf	(___fldiv@a+1)^0,c
  9461  010C58  0E00               	movlw	0
  9462  010C5A  6E1B               	movwf	(___fldiv@a+2)^0,c
  9463  010C5C  0E00               	movlw	0
  9464  010C5E  6E1C               	movwf	(___fldiv@a+3)^0,c
  9465  010C60                     l6685:
  9466  010C60  5019               	movf	___fldiv@a^0,w,c
  9467  010C62  101A               	iorwf	(___fldiv@a+1)^0,w,c
  9468  010C64  101B               	iorwf	(___fldiv@a+2)^0,w,c
  9469  010C66  101C               	iorwf	(___fldiv@a+3)^0,w,c
  9470  010C68  A4D8               	btfss	status,2,c
  9471  010C6A  EF39  F086         	goto	u5971
  9472  010C6E  EF3B  F086         	goto	u5970
  9473  010C72                     u5971:
  9474  010C72  EF53  F086         	goto	l6697
  9475  010C76                     u5970:
  9476  010C76  0E00               	movlw	0
  9477  010C78  6E15               	movwf	___fldiv@b^0,c
  9478  010C7A  0E00               	movlw	0
  9479  010C7C  6E16               	movwf	(___fldiv@b+1)^0,c
  9480  010C7E  0E00               	movlw	0
  9481  010C80  6E17               	movwf	(___fldiv@b+2)^0,c
  9482  010C82  0E00               	movlw	0
  9483  010C84  6E18               	movwf	(___fldiv@b+3)^0,c
  9484  010C86  0E80               	movlw	128
  9485  010C88  1217               	iorwf	(___fldiv@b+2)^0,f,c
  9486  010C8A  0E7F               	movlw	127
  9487  010C8C  1218               	iorwf	(___fldiv@b+3)^0,f,c
  9488  010C8E                     l6691:
  9489  010C8E  5025               	movf	___fldiv@sign^0,w,c
  9490  010C90  1218               	iorwf	(___fldiv@b+3)^0,f,c
  9491  010C92  C015  F015         	movff	___fldiv@b,?___fldiv
  9492  010C96  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  9493  010C9A  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  9494  010C9E  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  9495  010CA2  EF96  F087         	goto	l1918
  9496  010CA6                     l6697:
  9497  010CA6  502C               	movf	___fldiv@bexp^0,w,c
  9498  010CA8  A4D8               	btfss	status,2,c
  9499  010CAA  EF59  F086         	goto	u5981
  9500  010CAE  EF5B  F086         	goto	u5980
  9501  010CB2                     u5981:
  9502  010CB2  EF65  F086         	goto	l6705
  9503  010CB6                     u5980:
  9504  010CB6  0E00               	movlw	0
  9505  010CB8  6E15               	movwf	?___fldiv^0,c
  9506  010CBA  0E00               	movlw	0
  9507  010CBC  6E16               	movwf	(?___fldiv+1)^0,c
  9508  010CBE  0E00               	movlw	0
  9509  010CC0  6E17               	movwf	(?___fldiv+2)^0,c
  9510  010CC2  0E00               	movlw	0
  9511  010CC4  6E18               	movwf	(?___fldiv+3)^0,c
  9512  010CC6  EF96  F087         	goto	l1918
  9513  010CCA                     l6705:
  9514  010CCA  502D               	movf	___fldiv@aexp^0,w,c
  9515  010CCC  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  9516  010CD0  6A1E               	clrf	(??___fldiv+1)^0,c
  9517  010CD2  5E1D               	subwf	??___fldiv^0,f,c
  9518  010CD4  0E00               	movlw	0
  9519  010CD6  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  9520  010CD8  0E7F               	movlw	127
  9521  010CDA  241D               	addwf	??___fldiv^0,w,c
  9522  010CDC  6E26               	movwf	___fldiv@new_exp^0,c
  9523  010CDE  0E00               	movlw	0
  9524  010CE0  201E               	addwfc	(??___fldiv+1)^0,w,c
  9525  010CE2  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9526  010CE4  C015  F021         	movff	___fldiv@b,___fldiv@rem
  9527  010CE8  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  9528  010CEC  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  9529  010CF0  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  9530  010CF4  0E00               	movlw	0
  9531  010CF6  6E15               	movwf	___fldiv@b^0,c
  9532  010CF8  0E00               	movlw	0
  9533  010CFA  6E16               	movwf	(___fldiv@b+1)^0,c
  9534  010CFC  0E00               	movlw	0
  9535  010CFE  6E17               	movwf	(___fldiv@b+2)^0,c
  9536  010D00  0E00               	movlw	0
  9537  010D02  6E18               	movwf	(___fldiv@b+3)^0,c
  9538  010D04  0E00               	movlw	0
  9539  010D06  6E28               	movwf	___fldiv@grs^0,c
  9540  010D08  0E00               	movlw	0
  9541  010D0A  6E29               	movwf	(___fldiv@grs+1)^0,c
  9542  010D0C  0E00               	movlw	0
  9543  010D0E  6E2A               	movwf	(___fldiv@grs+2)^0,c
  9544  010D10  0E00               	movlw	0
  9545  010D12  6E2B               	movwf	(___fldiv@grs+3)^0,c
  9546  010D14  0E00               	movlw	0
  9547  010D16  6E2D               	movwf	___fldiv@aexp^0,c
  9548  010D18  EFC6  F086         	goto	l1920
  9549  010D1C                     l6715:
  9550  010D1C  502D               	movf	___fldiv@aexp^0,w,c
  9551  010D1E  B4D8               	btfsc	status,2,c
  9552  010D20  EF94  F086         	goto	u5991
  9553  010D24  EF96  F086         	goto	u5990
  9554  010D28                     u5991:
  9555  010D28  EFAD  F086         	goto	l6723
  9556  010D2C                     u5990:
  9557  010D2C  90D8               	bcf	status,0,c
  9558  010D2E  3621               	rlcf	___fldiv@rem^0,f,c
  9559  010D30  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  9560  010D32  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  9561  010D34  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  9562  010D36  90D8               	bcf	status,0,c
  9563  010D38  3615               	rlcf	___fldiv@b^0,f,c
  9564  010D3A  3616               	rlcf	(___fldiv@b+1)^0,f,c
  9565  010D3C  3617               	rlcf	(___fldiv@b+2)^0,f,c
  9566  010D3E  3618               	rlcf	(___fldiv@b+3)^0,f,c
  9567  010D40  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  9568  010D42  EFA5  F086         	goto	u6001
  9569  010D46  EFA7  F086         	goto	u6000
  9570  010D4A                     u6001:
  9571  010D4A  EFA8  F086         	goto	l1923
  9572  010D4E                     u6000:
  9573  010D4E  8015               	bsf	___fldiv@b^0,0,c
  9574  010D50                     l1923:
  9575  010D50  90D8               	bcf	status,0,c
  9576  010D52  3628               	rlcf	___fldiv@grs^0,f,c
  9577  010D54  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  9578  010D56  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  9579  010D58  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  9580  010D5A                     l6723:
  9581  010D5A  5019               	movf	___fldiv@a^0,w,c
  9582  010D5C  5C21               	subwf	___fldiv@rem^0,w,c
  9583  010D5E  501A               	movf	(___fldiv@a+1)^0,w,c
  9584  010D60  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  9585  010D62  501B               	movf	(___fldiv@a+2)^0,w,c
  9586  010D64  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  9587  010D66  501C               	movf	(___fldiv@a+3)^0,w,c
  9588  010D68  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  9589  010D6A  A0D8               	btfss	status,0,c
  9590  010D6C  EFBA  F086         	goto	u6011
  9591  010D70  EFBC  F086         	goto	u6010
  9592  010D74                     u6011:
  9593  010D74  EFC5  F086         	goto	l6729
  9594  010D78                     u6010:
  9595  010D78  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  9596  010D7A  5019               	movf	___fldiv@a^0,w,c
  9597  010D7C  5E21               	subwf	___fldiv@rem^0,f,c
  9598  010D7E  501A               	movf	(___fldiv@a+1)^0,w,c
  9599  010D80  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  9600  010D82  501B               	movf	(___fldiv@a+2)^0,w,c
  9601  010D84  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  9602  010D86  501C               	movf	(___fldiv@a+3)^0,w,c
  9603  010D88  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  9604  010D8A                     l6729:
  9605  010D8A  2A2D               	incf	___fldiv@aexp^0,f,c
  9606  010D8C                     l1920:
  9607  010D8C  0E19               	movlw	25
  9608  010D8E  642D               	cpfsgt	___fldiv@aexp^0,c
  9609  010D90  EFCC  F086         	goto	u6021
  9610  010D94  EFCE  F086         	goto	u6020
  9611  010D98                     u6021:
  9612  010D98  EF8E  F086         	goto	l6715
  9613  010D9C                     u6020:
  9614  010D9C  5021               	movf	___fldiv@rem^0,w,c
  9615  010D9E  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  9616  010DA0  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  9617  010DA2  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  9618  010DA4  B4D8               	btfsc	status,2,c
  9619  010DA6  EFD7  F086         	goto	u6031
  9620  010DAA  EFD9  F086         	goto	u6030
  9621  010DAE                     u6031:
  9622  010DAE  EFF1  F086         	goto	l6741
  9623  010DB2                     u6030:
  9624  010DB2  8028               	bsf	___fldiv@grs^0,0,c
  9625  010DB4  EFF1  F086         	goto	l6741
  9626  010DB8                     l6735:
  9627  010DB8  90D8               	bcf	status,0,c
  9628  010DBA  3615               	rlcf	___fldiv@b^0,f,c
  9629  010DBC  3616               	rlcf	(___fldiv@b+1)^0,f,c
  9630  010DBE  3617               	rlcf	(___fldiv@b+2)^0,f,c
  9631  010DC0  3618               	rlcf	(___fldiv@b+3)^0,f,c
  9632  010DC2  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  9633  010DC4  EFE6  F086         	goto	u6041
  9634  010DC8  EFE8  F086         	goto	u6040
  9635  010DCC                     u6041:
  9636  010DCC  EFE9  F086         	goto	l1929
  9637  010DD0                     u6040:
  9638  010DD0  8015               	bsf	___fldiv@b^0,0,c
  9639  010DD2                     l1929:
  9640  010DD2  90D8               	bcf	status,0,c
  9641  010DD4  3628               	rlcf	___fldiv@grs^0,f,c
  9642  010DD6  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  9643  010DD8  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  9644  010DDA  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  9645  010DDC  0626               	decf	___fldiv@new_exp^0,f,c
  9646  010DDE  A0D8               	btfss	status,0,c
  9647  010DE0  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  9648  010DE2                     l6741:
  9649  010DE2  AE17               	btfss	(___fldiv@b+2)^0,7,c
  9650  010DE4  EFF6  F086         	goto	u6051
  9651  010DE8  EFF8  F086         	goto	u6050
  9652  010DEC                     u6051:
  9653  010DEC  EFDC  F086         	goto	l6735
  9654  010DF0                     u6050:
  9655  010DF0  0E00               	movlw	0
  9656  010DF2  6E2D               	movwf	___fldiv@aexp^0,c
  9657  010DF4  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  9658  010DF6  EFFF  F086         	goto	u6061
  9659  010DFA  EF01  F087         	goto	u6060
  9660  010DFE                     u6061:
  9661  010DFE  EF25  F087         	goto	l1931
  9662  010E02                     u6060:
  9663  010E02  0EFF               	movlw	255
  9664  010E04  1428               	andwf	___fldiv@grs^0,w,c
  9665  010E06  6E1D               	movwf	??___fldiv^0,c
  9666  010E08  0EFF               	movlw	255
  9667  010E0A  1429               	andwf	(___fldiv@grs+1)^0,w,c
  9668  010E0C  6E1E               	movwf	(??___fldiv+1)^0,c
  9669  010E0E  0EFF               	movlw	255
  9670  010E10  142A               	andwf	(___fldiv@grs+2)^0,w,c
  9671  010E12  6E1F               	movwf	(??___fldiv+2)^0,c
  9672  010E14  0E7F               	movlw	127
  9673  010E16  142B               	andwf	(___fldiv@grs+3)^0,w,c
  9674  010E18  6E20               	movwf	(??___fldiv+3)^0,c
  9675  010E1A  501D               	movf	??___fldiv^0,w,c
  9676  010E1C  101E               	iorwf	(??___fldiv+1)^0,w,c
  9677  010E1E  101F               	iorwf	(??___fldiv+2)^0,w,c
  9678  010E20  1020               	iorwf	(??___fldiv+3)^0,w,c
  9679  010E22  B4D8               	btfsc	status,2,c
  9680  010E24  EF16  F087         	goto	u6071
  9681  010E28  EF18  F087         	goto	u6070
  9682  010E2C                     u6071:
  9683  010E2C  EF1C  F087         	goto	l1932
  9684  010E30                     u6070:
  9685  010E30                     l6749:
  9686  010E30  0E01               	movlw	1
  9687  010E32  6E2D               	movwf	___fldiv@aexp^0,c
  9688  010E34  EF25  F087         	goto	l1931
  9689  010E38                     l1932:
  9690  010E38  A015               	btfss	___fldiv@b^0,0,c
  9691  010E3A  EF21  F087         	goto	u6081
  9692  010E3E  EF23  F087         	goto	u6080
  9693  010E42                     u6081:
  9694  010E42  EF25  F087         	goto	l1931
  9695  010E46                     u6080:
  9696  010E46  EF18  F087         	goto	l6749
  9697  010E4A                     l1931:
  9698  010E4A  502D               	movf	___fldiv@aexp^0,w,c
  9699  010E4C  B4D8               	btfsc	status,2,c
  9700  010E4E  EF2B  F087         	goto	u6091
  9701  010E52  EF2D  F087         	goto	u6090
  9702  010E56                     u6091:
  9703  010E56  EF51  F087         	goto	l6761
  9704  010E5A                     u6090:
  9705  010E5A  0E01               	movlw	1
  9706  010E5C  2615               	addwf	___fldiv@b^0,f,c
  9707  010E5E  0E00               	movlw	0
  9708  010E60  2216               	addwfc	(___fldiv@b+1)^0,f,c
  9709  010E62  2217               	addwfc	(___fldiv@b+2)^0,f,c
  9710  010E64  2218               	addwfc	(___fldiv@b+3)^0,f,c
  9711  010E66  A018               	btfss	(___fldiv@b+3)^0,0,c
  9712  010E68  EF38  F087         	goto	u6101
  9713  010E6C  EF3A  F087         	goto	u6100
  9714  010E70                     u6101:
  9715  010E70  EF51  F087         	goto	l6761
  9716  010E74                     u6100:
  9717  010E74  C015  F01D         	movff	___fldiv@b,??___fldiv
  9718  010E78  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  9719  010E7C  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  9720  010E80  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  9721  010E84  3420               	rlcf	(??___fldiv+3)^0,w,c
  9722  010E86  3220               	rrcf	(??___fldiv+3)^0,f,c
  9723  010E88  321F               	rrcf	(??___fldiv+2)^0,f,c
  9724  010E8A  321E               	rrcf	(??___fldiv+1)^0,f,c
  9725  010E8C  321D               	rrcf	??___fldiv^0,f,c
  9726  010E8E  C01D  F015         	movff	??___fldiv,___fldiv@b
  9727  010E92  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  9728  010E96  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  9729  010E9A  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  9730  010E9E  4A26               	infsnz	___fldiv@new_exp^0,f,c
  9731  010EA0  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  9732  010EA2                     l6761:
  9733  010EA2  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9734  010EA4  EF5C  F087         	goto	u6111
  9735  010EA8  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  9736  010EAA  E108               	bnz	u6110
  9737  010EAC  2826               	incf	___fldiv@new_exp^0,w,c
  9738  010EAE  A0D8               	btfss	status,0,c
  9739  010EB0  EF5C  F087         	goto	u6111
  9740  010EB4  EF5E  F087         	goto	u6110
  9741  010EB8                     u6111:
  9742  010EB8  EF69  F087         	goto	l6765
  9743  010EBC                     u6110:
  9744  010EBC  0E00               	movlw	0
  9745  010EBE  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9746  010EC0  6826               	setf	___fldiv@new_exp^0,c
  9747  010EC2  0E00               	movlw	0
  9748  010EC4  6E15               	movwf	___fldiv@b^0,c
  9749  010EC6  0E00               	movlw	0
  9750  010EC8  6E16               	movwf	(___fldiv@b+1)^0,c
  9751  010ECA  0E00               	movlw	0
  9752  010ECC  6E17               	movwf	(___fldiv@b+2)^0,c
  9753  010ECE  0E00               	movlw	0
  9754  010ED0  6E18               	movwf	(___fldiv@b+3)^0,c
  9755  010ED2                     l6765:
  9756  010ED2  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9757  010ED4  EF76  F087         	goto	u6120
  9758  010ED8  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  9759  010EDA  E106               	bnz	u6121
  9760  010EDC  0426               	decf	___fldiv@new_exp^0,w,c
  9761  010EDE  B0D8               	btfsc	status,0,c
  9762  010EE0  EF74  F087         	goto	u6121
  9763  010EE4  EF76  F087         	goto	u6120
  9764  010EE8                     u6121:
  9765  010EE8  EF84  F087         	goto	l6769
  9766  010EEC                     u6120:
  9767  010EEC  0E00               	movlw	0
  9768  010EEE  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9769  010EF0  0E00               	movlw	0
  9770  010EF2  6E26               	movwf	___fldiv@new_exp^0,c
  9771  010EF4  0E00               	movlw	0
  9772  010EF6  6E15               	movwf	___fldiv@b^0,c
  9773  010EF8  0E00               	movlw	0
  9774  010EFA  6E16               	movwf	(___fldiv@b+1)^0,c
  9775  010EFC  0E00               	movlw	0
  9776  010EFE  6E17               	movwf	(___fldiv@b+2)^0,c
  9777  010F00  0E00               	movlw	0
  9778  010F02  6E18               	movwf	(___fldiv@b+3)^0,c
  9779  010F04  0E00               	movlw	0
  9780  010F06  6E25               	movwf	___fldiv@sign^0,c
  9781  010F08                     l6769:
  9782  010F08  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  9783  010F0C  A02C               	btfss	___fldiv@bexp^0,0,c
  9784  010F0E  EF8B  F087         	goto	u6131
  9785  010F12  EF8D  F087         	goto	u6130
  9786  010F16                     u6131:
  9787  010F16  EF90  F087         	goto	l6775
  9788  010F1A                     u6130:
  9789  010F1A  8E17               	bsf	(___fldiv@b+2)^0,7,c
  9790  010F1C  EF91  F087         	goto	l6777
  9791  010F20                     l6775:
  9792  010F20  9E17               	bcf	(___fldiv@b+2)^0,7,c
  9793  010F22                     l6777:
  9794  010F22  90D8               	bcf	status,0,c
  9795  010F24  302C               	rrcf	___fldiv@bexp^0,w,c
  9796  010F26  6E18               	movwf	(___fldiv@b+3)^0,c
  9797  010F28  EF47  F086         	goto	l6691
  9798  010F2C                     l1918:
  9799  010F2C  0012               	return		;funcret
  9800  010F2E                     __end_of___fldiv:
  9801                           	callstack 0
  9802                           
  9803 ;; *************** function _TMR1_StopTimer *****************
  9804 ;; Defined at:
  9805 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;		None
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		None
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9823 ;;Total ram usage:        0 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:    4
  9826 ;; This function calls:
  9827 ;;		Nothing
  9828 ;; This function is called by:
  9829 ;;		_processADCCommand
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text61
  9834  013054                     __ptext61:
  9835                           	callstack 0
  9836  013054                     _TMR1_StopTimer:
  9837                           	callstack 24
  9838  013054                     
  9839                           ;mcc_generated_files/tmr1.c: 108:     T1CONbits.TMR1ON = 0;
  9840  013054  90CE               	bcf	206,0,c	;volatile
  9841  013056  0012               	return		;funcret
  9842  013058                     __end_of_TMR1_StopTimer:
  9843                           	callstack 0
  9844                           
  9845 ;; *************** function _TMR1_StartTimer *****************
  9846 ;; Defined at:
  9847 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  9848 ;; Parameters:    Size  Location     Type
  9849 ;;		None
  9850 ;; Auto vars:     Size  Location     Type
  9851 ;;		None
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  1    wreg      void 
  9854 ;; Registers used:
  9855 ;;		None
  9856 ;; Tracked objects:
  9857 ;;		On entry : 0/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9865 ;;Total ram usage:        0 bytes
  9866 ;; Hardware stack levels used:    1
  9867 ;; Hardware stack levels required when called:    4
  9868 ;; This function calls:
  9869 ;;		Nothing
  9870 ;; This function is called by:
  9871 ;;		_ApplicationTask
  9872 ;;		_processADCCommand
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876                           	psect	text62
  9877  013058                     __ptext62:
  9878                           	callstack 0
  9879  013058                     _TMR1_StartTimer:
  9880                           	callstack 24
  9881  013058                     
  9882                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
  9883  013058  80CE               	bsf	206,0,c	;volatile
  9884  01305A  0012               	return		;funcret
  9885  01305C                     __end_of_TMR1_StartTimer:
  9886                           	callstack 0
  9887                           
  9888 ;; *************** function _TMR1_Reload *****************
  9889 ;; Defined at:
  9890 ;;		line 149 in file "mcc_generated_files/tmr1.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;		None
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;		None
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, status,2, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9908 ;;Total ram usage:        0 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:    5
  9911 ;; This function calls:
  9912 ;;		_TMR1_WriteTimer
  9913 ;; This function is called by:
  9914 ;;		_ApplicationTask
  9915 ;;		_processADCCommand
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           	psect	text63
  9920  012FE4                     __ptext63:
  9921                           	callstack 0
  9922  012FE4                     _TMR1_Reload:
  9923                           	callstack 23
  9924  012FE4                     
  9925                           ;mcc_generated_files/tmr1.c: 151:     TMR1_WriteTimer(timer1ReloadVal);
  9926  012FE4  C0FA  F007         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  9927  012FE8  C0FB  F008         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  9928  012FEC  ECC6  F096         	call	_TMR1_WriteTimer	;wreg free
  9929  012FF0  0012               	return		;funcret
  9930  012FF2                     __end_of_TMR1_Reload:
  9931                           	callstack 0
  9932                           
  9933 ;; *************** function _TMR1_WriteTimer *****************
  9934 ;; Defined at:
  9935 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;  timerVal        2    6[COMRAM] unsigned short 
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;		None
  9940 ;; Return value:  Size  Location     Type
  9941 ;;                  1    wreg      void 
  9942 ;; Registers used:
  9943 ;;		wreg, status,2
  9944 ;; Tracked objects:
  9945 ;;		On entry : 0/0
  9946 ;;		On exit  : 0/0
  9947 ;;		Unchanged: 0/0
  9948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  9949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9953 ;;Total ram usage:        2 bytes
  9954 ;; Hardware stack levels used:    1
  9955 ;; Hardware stack levels required when called:    4
  9956 ;; This function calls:
  9957 ;;		Nothing
  9958 ;; This function is called by:
  9959 ;;		_TMR1_Reload
  9960 ;; This function uses a non-reentrant model
  9961 ;;
  9962                           
  9963                           	psect	text64
  9964  012D8C                     __ptext64:
  9965                           	callstack 0
  9966  012D8C                     _TMR1_WriteTimer:
  9967                           	callstack 23
  9968  012D8C                     
  9969                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
  9970  012D8C  A4CE               	btfss	206,2,c	;volatile
  9971  012D8E  EFCB  F096         	goto	u5841
  9972  012D92  EFCD  F096         	goto	u5840
  9973  012D96                     u5841:
  9974  012D96  EFD5  F096         	goto	l6535
  9975  012D9A                     u5840:
  9976  012D9A                     
  9977                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  9978  012D9A  90CE               	bcf	206,0,c	;volatile
  9979  012D9C                     
  9980                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
  9981  012D9C  5008               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  9982  012D9E  6ECD               	movwf	205,c	;volatile
  9983  012DA0                     
  9984                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
  9985  012DA0  C007  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  9986  012DA4                     
  9987                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  9988  012DA4  80CE               	bsf	206,0,c	;volatile
  9989                           
  9990                           ;mcc_generated_files/tmr1.c: 140:     }
  9991  012DA6  EFD9  F096         	goto	l707
  9992  012DAA                     l6535:
  9993                           
  9994                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
  9995  012DAA  5008               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  9996  012DAC  6ECD               	movwf	205,c	;volatile
  9997  012DAE                     
  9998                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
  9999  012DAE  C007  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
 10000  012DB2                     l707:
 10001  012DB2  0012               	return		;funcret
 10002  012DB4                     __end_of_TMR1_WriteTimer:
 10003                           	callstack 0
 10004                           
 10005 ;; *************** function _ADCCBurstModeInitialize *****************
 10006 ;; Defined at:
 10007 ;;		line 360 in file "application.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;		None
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;		None
 10012 ;; Return value:  Size  Location     Type
 10013 ;;                  1    wreg      void 
 10014 ;; Registers used:
 10015 ;;		wreg, status,2
 10016 ;; Tracked objects:
 10017 ;;		On entry : 0/0
 10018 ;;		On exit  : 0/0
 10019 ;;		Unchanged: 0/0
 10020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10025 ;;Total ram usage:        0 bytes
 10026 ;; Hardware stack levels used:    1
 10027 ;; Hardware stack levels required when called:    4
 10028 ;; This function calls:
 10029 ;;		Nothing
 10030 ;; This function is called by:
 10031 ;;		_processADCCommand
 10032 ;; This function uses a non-reentrant model
 10033 ;;
 10034                           
 10035                           	psect	text65
 10036  012FF2                     __ptext65:
 10037                           	callstack 0
 10038  012FF2                     _ADCCBurstModeInitialize:
 10039                           	callstack 24
 10040  012FF2                     
 10041                           ;application.c: 361:     ADCON2bits.ADMD = 0b011;
 10042  012FF2  010F               	movlb	15	; () banked
 10043  012FF4  5155               	movf	85,w,b	;volatile
 10044  012FF6  0BF8               	andlw	-8
 10045  012FF8  0903               	iorlw	3
 10046  012FFA  6F55               	movwf	85,b	;volatile
 10047  012FFC                     
 10048                           ; BSR set to: 15
 10049  012FFC  0012               	return		;funcret
 10050  012FFE                     __end_of_ADCCBurstModeInitialize:
 10051                           	callstack 0
 10052                           
 10053 ;; *************** function _ADCCBasicModeInitialize *****************
 10054 ;; Defined at:
 10055 ;;		line 364 in file "application.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;		None
 10058 ;; Auto vars:     Size  Location     Type
 10059 ;;		None
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  1    wreg      void 
 10062 ;; Registers used:
 10063 ;;		wreg, status,2
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10073 ;;Total ram usage:        0 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; Hardware stack levels required when called:    4
 10076 ;; This function calls:
 10077 ;;		Nothing
 10078 ;; This function is called by:
 10079 ;;		_processADCCommand
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           	psect	text66
 10084  013010                     __ptext66:
 10085                           	callstack 0
 10086  013010                     _ADCCBasicModeInitialize:
 10087                           	callstack 24
 10088  013010                     
 10089                           ;application.c: 365:     ADCON2bits.ADMD = 0b000;
 10090  013010  0EF8               	movlw	-8
 10091  013012  010F               	movlb	15	; () banked
 10092  013014  1755               	andwf	85,f,b	;volatile
 10093  013016                     
 10094                           ; BSR set to: 15
 10095  013016  0012               	return		;funcret
 10096  013018                     __end_of_ADCCBasicModeInitialize:
 10097                           	callstack 0
 10098                           
 10099 ;; *************** function _TMR0_WriteTimer *****************
 10100 ;; Defined at:
 10101 ;;		line 110 in file "mcc_generated_files/tmr0.c"
 10102 ;; Parameters:    Size  Location     Type
 10103 ;;  timerVal        1    wreg     unsigned char 
 10104 ;; Auto vars:     Size  Location     Type
 10105 ;;  timerVal        1    6[COMRAM] unsigned char 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  1    wreg      void 
 10108 ;; Registers used:
 10109 ;;		wreg
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10119 ;;Total ram usage:        1 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; Hardware stack levels required when called:    4
 10122 ;; This function calls:
 10123 ;;		Nothing
 10124 ;; This function is called by:
 10125 ;;		_ApplicationTask
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           	psect	text67
 10130  013018                     __ptext67:
 10131                           	callstack 0
 10132  013018                     _TMR0_WriteTimer:
 10133                           	callstack 25
 10134                           
 10135                           ; BSR set to: 15
 10136                           ;incstack = 0
 10137                           ;TMR0_WriteTimer@timerVal stored from wreg
 10138  013018  6E07               	movwf	TMR0_WriteTimer@timerVal^0,c
 10139  01301A                     
 10140                           ;mcc_generated_files/tmr0.c: 110: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr0.c: 111: {;mcc_generated_files/tmr0.c: 113:     TMR0L = timerVal;
 10141  01301A  C007  FFD2         	movff	TMR0_WriteTimer@timerVal,4050	;volatile
 10142  01301E  0012               	return		;funcret
 10143  013020                     __end_of_TMR0_WriteTimer:
 10144                           	callstack 0
 10145                           
 10146 ;; *************** function _TMR0_StopTimer *****************
 10147 ;; Defined at:
 10148 ;;		line 94 in file "mcc_generated_files/tmr0.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;		None
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;		None
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  1    wreg      void 
 10155 ;; Registers used:
 10156 ;;		None
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10166 ;;Total ram usage:        0 bytes
 10167 ;; Hardware stack levels used:    1
 10168 ;; Hardware stack levels required when called:    4
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_ApplicationTask
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           	psect	text68
 10177  01305C                     __ptext68:
 10178                           	callstack 0
 10179  01305C                     _TMR0_StopTimer:
 10180                           	callstack 25
 10181  01305C                     
 10182                           ;mcc_generated_files/tmr0.c: 97:     T0CON0bits.T0EN = 0;
 10183  01305C  9ED4               	bcf	212,7,c	;volatile
 10184  01305E  0012               	return		;funcret
 10185  013060                     __end_of_TMR0_StopTimer:
 10186                           	callstack 0
 10187                           
 10188 ;; *************** function _TMR0_StartTimer *****************
 10189 ;; Defined at:
 10190 ;;		line 88 in file "mcc_generated_files/tmr0.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;		None
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;		None
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  1    wreg      void 
 10197 ;; Registers used:
 10198 ;;		None
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10208 ;;Total ram usage:        0 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:    4
 10211 ;; This function calls:
 10212 ;;		Nothing
 10213 ;; This function is called by:
 10214 ;;		_InitialSetup
 10215 ;;		_ApplicationTask
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text69
 10220  013060                     __ptext69:
 10221                           	callstack 0
 10222  013060                     _TMR0_StartTimer:
 10223                           	callstack 25
 10224  013060                     
 10225                           ;mcc_generated_files/tmr0.c: 91:     T0CON0bits.T0EN = 1;
 10226  013060  8ED4               	bsf	212,7,c	;volatile
 10227  013062  0012               	return		;funcret
 10228  013064                     __end_of_TMR0_StartTimer:
 10229                           	callstack 0
 10230                           
 10231 ;; *************** function _StartCRCPeekMode *****************
 10232 ;; Defined at:
 10233 ;;		line 386 in file "application.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;		None
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;		None
 10238 ;; Return value:  Size  Location     Type
 10239 ;;                  1    wreg      void 
 10240 ;; Registers used:
 10241 ;;		wreg, status,2, status,0, cstack
 10242 ;; Tracked objects:
 10243 ;;		On entry : 0/0
 10244 ;;		On exit  : 0/0
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10251 ;;Total ram usage:        0 bytes
 10252 ;; Hardware stack levels used:    1
 10253 ;; Hardware stack levels required when called:    5
 10254 ;; This function calls:
 10255 ;;		_CRC_SCAN_SetAddressLimit
 10256 ;;		_CRC_SCAN_StartScanner
 10257 ;; This function is called by:
 10258 ;;		_ApplicationTask
 10259 ;; This function uses a non-reentrant model
 10260 ;;
 10261                           
 10262                           	psect	text70
 10263  012D10                     __ptext70:
 10264                           	callstack 0
 10265  012D10                     _StartCRCPeekMode:
 10266                           	callstack 24
 10267  012D10                     
 10268                           ;application.c: 388:     CRC_SCAN_SetAddressLimit(0x4000, 0x41FF);
 10269  012D10  0E00               	movlw	0
 10270  012D12  6E07               	movwf	CRC_SCAN_SetAddressLimit@startAddr^0,c
 10271  012D14  0E40               	movlw	64
 10272  012D16  6E08               	movwf	(CRC_SCAN_SetAddressLimit@startAddr+1)^0,c
 10273  012D18  0E00               	movlw	0
 10274  012D1A  6E09               	movwf	(CRC_SCAN_SetAddressLimit@startAddr+2)^0,c
 10275  012D1C  0E00               	movlw	0
 10276  012D1E  6E0A               	movwf	(CRC_SCAN_SetAddressLimit@startAddr+3)^0,c
 10277  012D20  0EFF               	movlw	255
 10278  012D22  6E0B               	movwf	CRC_SCAN_SetAddressLimit@endAddr^0,c
 10279  012D24  0E41               	movlw	65
 10280  012D26  6E0C               	movwf	(CRC_SCAN_SetAddressLimit@endAddr+1)^0,c
 10281  012D28  0E00               	movlw	0
 10282  012D2A  6E0D               	movwf	(CRC_SCAN_SetAddressLimit@endAddr+2)^0,c
 10283  012D2C  0E00               	movlw	0
 10284  012D2E  6E0E               	movwf	(CRC_SCAN_SetAddressLimit@endAddr+3)^0,c
 10285  012D30  EC36  F097         	call	_CRC_SCAN_SetAddressLimit	;wreg free
 10286  012D34                     
 10287                           ;application.c: 391:     CRC_SCAN_StartScanner();
 10288  012D34  EC14  F098         	call	_CRC_SCAN_StartScanner	;wreg free
 10289  012D38  0012               	return		;funcret
 10290  012D3A                     __end_of_StartCRCPeekMode:
 10291                           	callstack 0
 10292                           
 10293 ;; *************** function _LogDataToPFM *****************
 10294 ;; Defined at:
 10295 ;;		line 338 in file "application.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;  adcValue        2   21[COMRAM] unsigned short 
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;		None
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  1    wreg      void 
 10302 ;; Registers used:
 10303 ;;		wreg, status,2, status,0, cstack
 10304 ;; Tracked objects:
 10305 ;;		On entry : 0/0
 10306 ;;		On exit  : 0/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10313 ;;Total ram usage:        2 bytes
 10314 ;; Hardware stack levels used:    1
 10315 ;; Hardware stack levels required when called:    6
 10316 ;; This function calls:
 10317 ;;		_FLASHWriteWordSingle
 10318 ;;		_FLASH_EraseBlock
 10319 ;;		_writeDataPtr
 10320 ;; This function is called by:
 10321 ;;		_ApplicationTask
 10322 ;; This function uses a non-reentrant model
 10323 ;;
 10324                           
 10325                           	psect	text71
 10326  01239A                     __ptext71:
 10327                           	callstack 0
 10328  01239A                     _LogDataToPFM:
 10329                           	callstack 23
 10330  01239A                     
 10331                           ;application.c: 339:     if(currentAdcValuePtr > 0x41FF) {
 10332  01239A  0E00               	movlw	0
 10333  01239C  5C53               	subwf	_currentAdcValuePtr^0,w,c	;volatile
 10334  01239E  0E42               	movlw	66
 10335  0123A0  5854               	subwfb	(_currentAdcValuePtr+1)^0,w,c	;volatile
 10336  0123A2  A0D8               	btfss	status,0,c
 10337  0123A4  EFD6  F091         	goto	u6551
 10338  0123A8  EFD8  F091         	goto	u6550
 10339  0123AC                     u6551:
 10340  0123AC  EFDC  F091         	goto	l1231
 10341  0123B0                     u6550:
 10342  0123B0                     
 10343                           ;application.c: 340:         currentAdcValuePtr = 0x4000;
 10344  0123B0  0E40               	movlw	64
 10345  0123B2  6E54               	movwf	(_currentAdcValuePtr+1)^0,c	;volatile
 10346  0123B4  0E00               	movlw	0
 10347  0123B6  6E53               	movwf	_currentAdcValuePtr^0,c	;volatile
 10348  0123B8                     l1231:
 10349                           
 10350                           ;application.c: 342:     if(!(currentAdcValuePtr & 0x00FF)) {
 10351  0123B8  5053               	movf	_currentAdcValuePtr^0,w,c	;volatile
 10352  0123BA  0900               	iorlw	0
 10353  0123BC  A4D8               	btfss	status,2,c
 10354  0123BE  EFE3  F091         	goto	u6561
 10355  0123C2  EFE5  F091         	goto	u6560
 10356  0123C6                     u6561:
 10357  0123C6  EFED  F091         	goto	l7157
 10358  0123CA                     u6560:
 10359  0123CA                     
 10360                           ;application.c: 343:         FLASH_EraseBlock(currentAdcValuePtr);
 10361  0123CA  C053  F007         	movff	_currentAdcValuePtr,FLASH_EraseBlock@flashAddr	;volatile
 10362  0123CE  C054  F008         	movff	_currentAdcValuePtr+1,FLASH_EraseBlock@flashAddr+1	;volatile
 10363  0123D2  6A09               	clrf	(FLASH_EraseBlock@flashAddr+2)^0,c
 10364  0123D4  6A0A               	clrf	(FLASH_EraseBlock@flashAddr+3)^0,c
 10365  0123D6  EC35  F095         	call	_FLASH_EraseBlock	;wreg free
 10366  0123DA                     l7157:
 10367                           
 10368                           ;application.c: 345:     FLASHWriteWordSingle(currentAdcValuePtr,adcValue);
 10369  0123DA  C053  F00D         	movff	_currentAdcValuePtr,FLASHWriteWordSingle@flashAddr	;volatile
 10370  0123DE  C054  F00E         	movff	_currentAdcValuePtr+1,FLASHWriteWordSingle@flashAddr+1	;volatile
 10371  0123E2  6A0F               	clrf	(FLASHWriteWordSingle@flashAddr+2)^0,c
 10372  0123E4  6A10               	clrf	(FLASHWriteWordSingle@flashAddr+3)^0,c
 10373  0123E6  C016  F011         	movff	LogDataToPFM@adcValue,FLASHWriteWordSingle@word
 10374  0123EA  C017  F012         	movff	LogDataToPFM@adcValue+1,FLASHWriteWordSingle@word+1
 10375  0123EE  EC89  F090         	call	_FLASHWriteWordSingle	;wreg free
 10376  0123F2                     
 10377                           ;application.c: 346:     currentAdcValuePtr += 2;
 10378  0123F2  0E02               	movlw	2
 10379  0123F4  2653               	addwf	_currentAdcValuePtr^0,f,c	;volatile
 10380  0123F6  0E00               	movlw	0
 10381  0123F8  2254               	addwfc	(_currentAdcValuePtr+1)^0,f,c	;volatile
 10382  0123FA                     
 10383                           ;application.c: 347:     writeDataPtr(currentAdcValuePtr);
 10384  0123FA  C053  F00B         	movff	_currentAdcValuePtr,writeDataPtr@dataPtr	;volatile
 10385  0123FE  C054  F00C         	movff	_currentAdcValuePtr+1,writeDataPtr@dataPtr+1	;volatile
 10386  012402  EC25  F097         	call	_writeDataPtr	;wreg free
 10387  012406  0012               	return		;funcret
 10388  012408                     __end_of_LogDataToPFM:
 10389                           	callstack 0
 10390                           
 10391 ;; *************** function _writeDataPtr *****************
 10392 ;; Defined at:
 10393 ;;		line 421 in file "application.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;  dataPtr         2   10[COMRAM] unsigned short 
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;		None
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  1    wreg      void 
 10400 ;; Registers used:
 10401 ;;		wreg, status,2, cstack
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10411 ;;Total ram usage:        2 bytes
 10412 ;; Hardware stack levels used:    1
 10413 ;; Hardware stack levels required when called:    5
 10414 ;; This function calls:
 10415 ;;		_DATAEE_WriteByte
 10416 ;; This function is called by:
 10417 ;;		_InitialSetup
 10418 ;;		_LogDataToPFM
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           	psect	text72
 10423  012E4A                     __ptext72:
 10424                           	callstack 0
 10425  012E4A                     _writeDataPtr:
 10426                           	callstack 24
 10427  012E4A                     
 10428                           ;application.c: 423:     DATAEE_WriteByte(2,(dataPtr >> 8));
 10429  012E4A  0E00               	movlw	0
 10430  012E4C  6E08               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 10431  012E4E  0E02               	movlw	2
 10432  012E50  6E07               	movwf	DATAEE_WriteByte@bAdd^0,c
 10433  012E52  500C               	movf	(writeDataPtr@dataPtr+1)^0,w,c
 10434  012E54  6E09               	movwf	DATAEE_WriteByte@bData^0,c
 10435  012E56  ECD2  F094         	call	_DATAEE_WriteByte	;wreg free
 10436                           
 10437                           ;application.c: 424:     DATAEE_WriteByte(3,(uint8_t)dataPtr);
 10438  012E5A  0E00               	movlw	0
 10439  012E5C  6E08               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 10440  012E5E  0E03               	movlw	3
 10441  012E60  6E07               	movwf	DATAEE_WriteByte@bAdd^0,c
 10442  012E62  C00B  F009         	movff	writeDataPtr@dataPtr,DATAEE_WriteByte@bData
 10443  012E66  ECD2  F094         	call	_DATAEE_WriteByte	;wreg free
 10444  012E6A  0012               	return		;funcret
 10445  012E6C                     __end_of_writeDataPtr:
 10446                           	callstack 0
 10447                           
 10448 ;; *************** function _DATAEE_WriteByte *****************
 10449 ;; Defined at:
 10450 ;;		line 226 in file "mcc_generated_files/memory.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;  bAdd            2    6[COMRAM] unsigned short 
 10453 ;;  bData           1    8[COMRAM] unsigned char 
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;  GIEBitValue     1    9[COMRAM] unsigned char 
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  1    wreg      void 
 10458 ;; Registers used:
 10459 ;;		wreg, status,2
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10465 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10468 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10469 ;;Total ram usage:        4 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    4
 10472 ;; This function calls:
 10473 ;;		Nothing
 10474 ;; This function is called by:
 10475 ;;		_InitialSetup
 10476 ;;		_writeChecksum
 10477 ;;		_writeDataPtr
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           	psect	text73
 10482  0129A4                     __ptext73:
 10483                           	callstack 0
 10484  0129A4                     _DATAEE_WriteByte:
 10485                           	callstack 24
 10486  0129A4                     
 10487                           ;mcc_generated_files/memory.c: 226: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 227: {;mcc_generated_files/memory.c: 228:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 10488  0129A4  0E00               	movlw	0
 10489  0129A6  BEF2               	btfsc	242,7,c	;volatile
 10490  0129A8  0E01               	movlw	1
 10491  0129AA  6E0A               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 10492  0129AC                     
 10493                           ;mcc_generated_files/memory.c: 231:     NVMADRU = 0x31;
 10494  0129AC  0E31               	movlw	49
 10495  0129AE  6E7B               	movwf	123,c	;volatile
 10496  0129B0                     
 10497                           ;mcc_generated_files/memory.c: 232:     NVMADRH = (uint8_t)((bAdd & 0xFF00) >> 8);
 10498  0129B0  5008               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
 10499  0129B2  6E7A               	movwf	122,c	;volatile
 10500  0129B4                     
 10501                           ;mcc_generated_files/memory.c: 233:     NVMADRL = (uint8_t)(bAdd & 0x00FF);
 10502  0129B4  C007  FF79         	movff	DATAEE_WriteByte@bAdd,3961	;volatile
 10503  0129B8                     
 10504                           ;mcc_generated_files/memory.c: 236:     NVMDATL = (uint8_t)(bData & 0xFF);
 10505  0129B8  C009  FF7C         	movff	DATAEE_WriteByte@bData,3964	;volatile
 10506  0129BC                     
 10507                           ;mcc_generated_files/memory.c: 239:     NVMCON0bits.NVMEN = 1;
 10508  0129BC  8E7F               	bsf	127,7,c	;volatile
 10509  0129BE                     
 10510                           ;mcc_generated_files/memory.c: 242:     INTCONbits.GIE = 0;
 10511  0129BE  9EF2               	bcf	242,7,c	;volatile
 10512  0129C0                     
 10513                           ;mcc_generated_files/memory.c: 245:     NVMCON2 = 0x55;
 10514  0129C0  0E55               	movlw	85
 10515  0129C2  6E81               	movwf	129,c	;volsfr
 10516  0129C4                     
 10517                           ;mcc_generated_files/memory.c: 246:     NVMCON2 = 0xAA;
 10518  0129C4  0EAA               	movlw	170
 10519  0129C6  6E81               	movwf	129,c	;volsfr
 10520  0129C8                     
 10521                           ;mcc_generated_files/memory.c: 249:     NVMCON1bits.WR = 1;
 10522  0129C8  8880               	bsf	128,4,c	;volsfr
 10523  0129CA                     l799:
 10524  0129CA  B880               	btfsc	128,4,c	;volsfr
 10525  0129CC  EFEA  F094         	goto	u3421
 10526  0129D0  EFEC  F094         	goto	u3420
 10527  0129D4                     u3421:
 10528  0129D4  EFE5  F094         	goto	l799
 10529  0129D8                     u3420:
 10530  0129D8                     
 10531                           ;mcc_generated_files/memory.c: 253:     INTCONbits.GIE = GIEBitValue;
 10532  0129D8  B00A               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 10533  0129DA  D002               	bra	u3435
 10534  0129DC  9EF2               	bcf	242,7,c	;volatile
 10535  0129DE  D001               	bra	u3436
 10536  0129E0                     u3435:
 10537  0129E0  8EF2               	bsf	242,7,c	;volatile
 10538  0129E2                     u3436:
 10539                           
 10540                           ;mcc_generated_files/memory.c: 256:     NVMCON0bits.NVMEN = 0;
 10541  0129E2  9E7F               	bcf	127,7,c	;volatile
 10542  0129E4  0012               	return		;funcret
 10543  0129E6                     __end_of_DATAEE_WriteByte:
 10544                           	callstack 0
 10545                           
 10546 ;; *************** function _FLASH_EraseBlock *****************
 10547 ;; Defined at:
 10548 ;;		line 194 in file "mcc_generated_files/memory.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;  flashAddr       4    6[COMRAM] unsigned long 
 10551 ;; Auto vars:     Size  Location     Type
 10552 ;;  GIEBitValue     1   10[COMRAM] unsigned char 
 10553 ;; Return value:  Size  Location     Type
 10554 ;;                  1    wreg      void 
 10555 ;; Registers used:
 10556 ;;		wreg, status,2
 10557 ;; Tracked objects:
 10558 ;;		On entry : 0/0
 10559 ;;		On exit  : 0/0
 10560 ;;		Unchanged: 0/0
 10561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10565 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10566 ;;Total ram usage:        5 bytes
 10567 ;; Hardware stack levels used:    1
 10568 ;; Hardware stack levels required when called:    4
 10569 ;; This function calls:
 10570 ;;		Nothing
 10571 ;; This function is called by:
 10572 ;;		_LogDataToPFM
 10573 ;;		_FLASH_WriteWord
 10574 ;;		_FLASH_WriteBlock
 10575 ;; This function uses a non-reentrant model
 10576 ;;
 10577                           
 10578                           	psect	text74
 10579  012A6A                     __ptext74:
 10580                           	callstack 0
 10581  012A6A                     _FLASH_EraseBlock:
 10582                           	callstack 24
 10583  012A6A                     
 10584                           ;mcc_generated_files/memory.c: 194: void FLASH_EraseBlock(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
 10585  012A6A  0E00               	movlw	0
 10586  012A6C  BEF2               	btfsc	242,7,c	;volatile
 10587  012A6E  0E01               	movlw	1
 10588  012A70  6E0B               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
 10589  012A72                     
 10590                           ;mcc_generated_files/memory.c: 198:     NVMCON0bits.NVMEN = 1;
 10591  012A72  8E7F               	bsf	127,7,c	;volatile
 10592  012A74                     
 10593                           ;mcc_generated_files/memory.c: 201:     NVMADRU = (uint8_t) ((flashAddr & 0x00FF0000) >>
      +                           16);
 10594  012A74  C009  FF7B         	movff	FLASH_EraseBlock@flashAddr+2,3963	;volatile
 10595  012A78                     
 10596                           ;mcc_generated_files/memory.c: 202:     NVMADRH = (uint8_t) ((flashAddr & 0x0000FF00) >>
      +                           8);
 10597  012A78  C008  FF7A         	movff	FLASH_EraseBlock@flashAddr+1,3962	;volatile
 10598  012A7C                     
 10599                           ;mcc_generated_files/memory.c: 203:     NVMADRL = (uint8_t) (flashAddr & 0x000000FF);
 10600  012A7C  C007  FF79         	movff	FLASH_EraseBlock@flashAddr,3961	;volatile
 10601  012A80                     
 10602                           ;mcc_generated_files/memory.c: 206:     INTCONbits.GIE = 0;
 10603  012A80  9EF2               	bcf	242,7,c	;volatile
 10604  012A82                     
 10605                           ;mcc_generated_files/memory.c: 209:     NVMCON2 = 0xCC;
 10606  012A82  0ECC               	movlw	204
 10607  012A84  6E81               	movwf	129,c	;volsfr
 10608  012A86                     
 10609                           ;mcc_generated_files/memory.c: 210:     NVMCON2 = 0x33;
 10610  012A86  0E33               	movlw	51
 10611  012A88  6E81               	movwf	129,c	;volsfr
 10612  012A8A                     
 10613                           ;mcc_generated_files/memory.c: 213:     NVMCON1bits.SECER = 1;
 10614  012A8A  8C80               	bsf	128,6,c	;volsfr
 10615  012A8C                     l793:
 10616  012A8C  BC80               	btfsc	128,6,c	;volsfr
 10617  012A8E  EF4B  F095         	goto	u3551
 10618  012A92  EF4D  F095         	goto	u3550
 10619  012A96                     u3551:
 10620  012A96  EF46  F095         	goto	l793
 10621  012A9A                     u3550:
 10622  012A9A                     
 10623                           ;mcc_generated_files/memory.c: 217:     INTCONbits.GIE = GIEBitValue;
 10624  012A9A  B00B               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
 10625  012A9C  D002               	bra	u3565
 10626  012A9E  9EF2               	bcf	242,7,c	;volatile
 10627  012AA0  D001               	bra	u3566
 10628  012AA2                     u3565:
 10629  012AA2  8EF2               	bsf	242,7,c	;volatile
 10630  012AA4                     u3566:
 10631                           
 10632                           ;mcc_generated_files/memory.c: 220:     NVMCON0bits.NVMEN = 0;
 10633  012AA4  9E7F               	bcf	127,7,c	;volatile
 10634  012AA6  0012               	return		;funcret
 10635  012AA8                     __end_of_FLASH_EraseBlock:
 10636                           	callstack 0
 10637                           
 10638 ;; *************** function _FLASHWriteWordSingle *****************
 10639 ;; Defined at:
 10640 ;;		line 303 in file "application.c"
 10641 ;; Parameters:    Size  Location     Type
 10642 ;;  flashAddr       4   12[COMRAM] unsigned long 
 10643 ;;  word            2   16[COMRAM] unsigned short 
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;  data_check      2   18[COMRAM] unsigned short 
 10646 ;;  GIEBitValue     1   20[COMRAM] unsigned char 
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2, status,0, cstack
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10656 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10657 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;Total ram usage:        9 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; Hardware stack levels required when called:    5
 10663 ;; This function calls:
 10664 ;;		_FLASH_ReadWord
 10665 ;; This function is called by:
 10666 ;;		_LogDataToPFM
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           	psect	text75
 10671  012112                     __ptext75:
 10672                           	callstack 0
 10673  012112                     _FLASHWriteWordSingle:
 10674                           	callstack 23
 10675  012112                     
 10676                           ;application.c: 305:     uint8_t GIEBitValue = INTCONbits.GIE;
 10677  012112  0E00               	movlw	0
 10678  012114  BEF2               	btfsc	242,7,c	;volatile
 10679  012116  0E01               	movlw	1
 10680  012118  6E15               	movwf	FLASHWriteWordSingle@GIEBitValue^0,c
 10681  01211A                     
 10682                           ;application.c: 306:     uint16_t data_check;;application.c: 309:     NVMADRL = 0xFF & (
      +                          flashAddr);
 10683  01211A  C00D  FF79         	movff	FLASHWriteWordSingle@flashAddr,3961	;volatile
 10684  01211E                     
 10685                           ;application.c: 310:     NVMADRH = 0xFF & (flashAddr >> 8);
 10686  01211E  C00E  FF7A         	movff	FLASHWriteWordSingle@flashAddr+1,3962	;volatile
 10687  012122                     
 10688                           ;application.c: 311:     NVMADRU = 0xFF & (flashAddr >> 16);
 10689  012122  C00F  FF7B         	movff	FLASHWriteWordSingle@flashAddr+2,3963	;volatile
 10690  012126                     
 10691                           ;application.c: 314:     NVMDAT = word;
 10692  012126  C011  FF7C         	movff	FLASHWriteWordSingle@word,3964	;volatile
 10693  01212A  C012  FF7D         	movff	FLASHWriteWordSingle@word+1,3965	;volatile
 10694  01212E                     
 10695                           ;application.c: 317:     INTCONbits.GIE = 0;
 10696  01212E  9EF2               	bcf	242,7,c	;volatile
 10697  012130                     
 10698                           ;application.c: 319:     NVMCON0bits.NVMEN = 1;
 10699  012130  8E7F               	bsf	127,7,c	;volatile
 10700  012132                     
 10701                           ;application.c: 321:     NVMCON2 = 0x55;
 10702  012132  0E55               	movlw	85
 10703  012134  6E81               	movwf	129,c	;volsfr
 10704  012136                     
 10705                           ;application.c: 322:     NVMCON2 = 0xAA;
 10706  012136  0EAA               	movlw	170
 10707  012138  6E81               	movwf	129,c	;volsfr
 10708  01213A                     
 10709                           ;application.c: 323:     NVMCON1bits.WR = 1;
 10710  01213A  8880               	bsf	128,4,c	;volsfr
 10711  01213C                     
 10712                           ;application.c: 325:     if(NVMCON0bits.NVMERR) {
 10713  01213C  A87F               	btfss	127,4,c	;volatile
 10714  01213E  EFA3  F090         	goto	u5881
 10715  012142  EFA5  F090         	goto	u5880
 10716  012146                     u5881:
 10717  012146  EFAA  F090         	goto	l6637
 10718  01214A                     u5880:
 10719  01214A                     
 10720                           ;application.c: 326:         flashCrcErrorStatus = 0x03;
 10721  01214A  0E03               	movlw	3
 10722  01214C  0100               	movlb	0	; () banked
 10723  01214E  6F84               	movwf	_flashCrcErrorStatus& (0+255),b	;volatile
 10724                           
 10725                           ;application.c: 327:     } else {
 10726  012150  EFC7  F090         	goto	l6643
 10727  012154                     l6637:
 10728                           
 10729                           ;application.c: 328:         data_check = FLASH_ReadWord(flashAddr);
 10730  012154  C00D  F007         	movff	FLASHWriteWordSingle@flashAddr,FLASH_ReadWord@flashAddr
 10731  012158  C00E  F008         	movff	FLASHWriteWordSingle@flashAddr+1,FLASH_ReadWord@flashAddr+1
 10732  01215C  C00F  F009         	movff	FLASHWriteWordSingle@flashAddr+2,FLASH_ReadWord@flashAddr+2
 10733  012160  C010  F00A         	movff	FLASHWriteWordSingle@flashAddr+3,FLASH_ReadWord@flashAddr+3
 10734  012164  EC9D  F096         	call	_FLASH_ReadWord	;wreg free
 10735  012168  C007  F013         	movff	?_FLASH_ReadWord,FLASHWriteWordSingle@data_check
 10736  01216C  C008  F014         	movff	?_FLASH_ReadWord+1,FLASHWriteWordSingle@data_check+1
 10737  012170                     
 10738                           ;application.c: 329:         if(data_check != word) {
 10739  012170  5011               	movf	FLASHWriteWordSingle@word^0,w,c
 10740  012172  1813               	xorwf	FLASHWriteWordSingle@data_check^0,w,c
 10741  012174  E109               	bnz	u5890
 10742  012176  5012               	movf	(FLASHWriteWordSingle@word+1)^0,w,c
 10743  012178  1814               	xorwf	(FLASHWriteWordSingle@data_check+1)^0,w,c
 10744  01217A  B4D8               	btfsc	status,2,c
 10745  01217C  EFC2  F090         	goto	u5891
 10746  012180  EFC4  F090         	goto	u5890
 10747  012184                     u5891:
 10748  012184  EFC7  F090         	goto	l6643
 10749  012188                     u5890:
 10750  012188                     
 10751                           ;application.c: 330:             flashCrcErrorStatus = 0x01;
 10752  012188  0E01               	movlw	1
 10753  01218A  0100               	movlb	0	; () banked
 10754  01218C  6F84               	movwf	_flashCrcErrorStatus& (0+255),b	;volatile
 10755  01218E                     l6643:
 10756                           
 10757                           ;application.c: 334:     NVMCON0bits.NVMEN = 0;
 10758  01218E  9E7F               	bcf	127,7,c	;volatile
 10759  012190                     
 10760                           ;application.c: 335:     INTCONbits.GIE = GIEBitValue;
 10761  012190  B015               	btfsc	FLASHWriteWordSingle@GIEBitValue^0,0,c
 10762  012192  D002               	bra	u5905
 10763  012194  9EF2               	bcf	242,7,c	;volatile
 10764  012196  D001               	bra	u5906
 10765  012198                     u5905:
 10766  012198  8EF2               	bsf	242,7,c	;volatile
 10767  01219A                     u5906:
 10768  01219A  0012               	return		;funcret
 10769  01219C                     __end_of_FLASHWriteWordSingle:
 10770                           	callstack 0
 10771                           
 10772 ;; *************** function _FLASH_ReadWord *****************
 10773 ;; Defined at:
 10774 ;;		line 72 in file "mcc_generated_files/memory.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;  flashAddr       4    6[COMRAM] unsigned long 
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;		None
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  2    6[COMRAM] unsigned short 
 10781 ;; Registers used:
 10782 ;;		wreg, status,2
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10790 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10791 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10792 ;;Total ram usage:        6 bytes
 10793 ;; Hardware stack levels used:    1
 10794 ;; Hardware stack levels required when called:    4
 10795 ;; This function calls:
 10796 ;;		Nothing
 10797 ;; This function is called by:
 10798 ;;		_processADCCommand
 10799 ;;		_FLASHWriteWordSingle
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           	psect	text76
 10804  012D3A                     __ptext76:
 10805                           	callstack 0
 10806  012D3A                     _FLASH_ReadWord:
 10807                           	callstack 24
 10808  012D3A                     
 10809                           ;mcc_generated_files/memory.c: 72: uint16_t FLASH_ReadWord(uint32_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 73: {;mcc_generated_files/memory.c: 75:     NVMADRU = (uint8_t) ((f
      +                          lashAddr & 0x00FF0000) >> 16);
 10810  012D3A  C009  FF7B         	movff	FLASH_ReadWord@flashAddr+2,3963	;volatile
 10811                           
 10812                           ;mcc_generated_files/memory.c: 76:     NVMADRH = (uint8_t) ((flashAddr & 0x0000FF00) >> 
      +                          8);
 10813  012D3E  C008  FF7A         	movff	FLASH_ReadWord@flashAddr+1,3962	;volatile
 10814                           
 10815                           ;mcc_generated_files/memory.c: 77:     NVMADRL = (uint8_t) (flashAddr & 0x000000FF);
 10816  012D42  C007  FF79         	movff	FLASH_ReadWord@flashAddr,3961	;volatile
 10817                           
 10818                           ;mcc_generated_files/memory.c: 80:     NVMCON1bits.RD = 1;
 10819  012D46  8080               	bsf	128,0,c	;volsfr
 10820  012D48                     l764:
 10821  012D48  B080               	btfsc	128,0,c	;volsfr
 10822  012D4A  EFA9  F096         	goto	u5851
 10823  012D4E  EFAB  F096         	goto	u5850
 10824  012D52                     u5851:
 10825  012D52  EFA4  F096         	goto	l764
 10826  012D56                     u5850:
 10827  012D56                     
 10828                           ;mcc_generated_files/memory.c: 83:     return ((((uint16_t)NVMDATH) << 8) | NVMDATL);
 10829  012D56  507D               	movf	125,w,c	;volatile
 10830  012D58  6E0B               	movwf	??_FLASH_ReadWord^0,c
 10831  012D5A  507C               	movf	124,w,c	;volatile
 10832  012D5C  6E07               	movwf	?_FLASH_ReadWord^0,c
 10833  012D5E  C00B  F008         	movff	??_FLASH_ReadWord,?_FLASH_ReadWord+1
 10834  012D62  0012               	return		;funcret
 10835  012D64                     __end_of_FLASH_ReadWord:
 10836                           	callstack 0
 10837                           
 10838 ;; *************** function _EUSART1_is_rx_ready *****************
 10839 ;; Defined at:
 10840 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;		None
 10843 ;; Auto vars:     Size  Location     Type
 10844 ;;		None
 10845 ;; Return value:  Size  Location     Type
 10846 ;;                  1    wreg      _Bool 
 10847 ;; Registers used:
 10848 ;;		wreg, status,2
 10849 ;; Tracked objects:
 10850 ;;		On entry : 0/0
 10851 ;;		On exit  : 0/0
 10852 ;;		Unchanged: 0/0
 10853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10858 ;;Total ram usage:        0 bytes
 10859 ;; Hardware stack levels used:    1
 10860 ;; Hardware stack levels required when called:    4
 10861 ;; This function calls:
 10862 ;;		Nothing
 10863 ;; This function is called by:
 10864 ;;		_ApplicationTask
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           	psect	text77
 10869  012EDE                     __ptext77:
 10870                           	callstack 0
 10871  012EDE                     _EUSART1_is_rx_ready:
 10872                           	callstack 25
 10873  012EDE                     
 10874                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 10875  012EDE  0100               	movlb	0	; () banked
 10876  012EE0  518B               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 10877  012EE2  A4D8               	btfss	status,2,c
 10878  012EE4  EF76  F097         	goto	u4221
 10879  012EE8  EF79  F097         	goto	u4220
 10880  012EEC                     u4221:
 10881  012EEC  0E01               	movlw	1
 10882  012EEE  EF7A  F097         	goto	u4230
 10883  012EF2                     u4220:
 10884  012EF2  0E00               	movlw	0
 10885  012EF4                     u4230:
 10886  012EF4                     
 10887                           ; BSR set to: 0
 10888  012EF4  0012               	return		;funcret
 10889  012EF6                     __end_of_EUSART1_is_rx_ready:
 10890                           	callstack 0
 10891                           
 10892 ;; *************** function _CRC_CalculatedResultGet *****************
 10893 ;; Defined at:
 10894 ;;		line 160 in file "mcc_generated_files/crc.c"
 10895 ;; Parameters:    Size  Location     Type
 10896 ;;  reverse         1    wreg     _Bool 
 10897 ;;  xorValue        2   13[COMRAM] unsigned short 
 10898 ;; Auto vars:     Size  Location     Type
 10899 ;;  reverse         1   20[COMRAM] _Bool 
 10900 ;;  result          2   21[COMRAM] unsigned short 
 10901 ;;  mask            2   18[COMRAM] unsigned short 
 10902 ;; Return value:  Size  Location     Type
 10903 ;;                  2   13[COMRAM] unsigned short 
 10904 ;; Registers used:
 10905 ;;		wreg, status,2, status,0, cstack
 10906 ;; Tracked objects:
 10907 ;;		On entry : 0/0
 10908 ;;		On exit  : 0/0
 10909 ;;		Unchanged: 0/0
 10910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 10911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10912 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10913 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10914 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10915 ;;Total ram usage:       10 bytes
 10916 ;; Hardware stack levels used:    1
 10917 ;; Hardware stack levels required when called:    5
 10918 ;; This function calls:
 10919 ;;		_CRC_ReverseValue
 10920 ;; This function is called by:
 10921 ;;		_InitialSetup
 10922 ;;		_ApplicationTask
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926                           	psect	text78
 10927  011B0C                     __ptext78:
 10928                           	callstack 0
 10929  011B0C                     _CRC_CalculatedResultGet:
 10930                           	callstack 24
 10931                           
 10932                           ; BSR set to: 0
 10933                           ;incstack = 0
 10934                           ;CRC_CalculatedResultGet@reverse stored from wreg
 10935  011B0C  6E15               	movwf	CRC_CalculatedResultGet@reverse^0,c
 10936  011B0E                     
 10937                           ;mcc_generated_files/crc.c: 160: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 161: {;mcc_generated_files/crc.c: 162:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 165:      CRCCON0bits.CRCGO = 0;
 10938  011B0E  9C77               	bcf	119,6,c	;volatile
 10939                           
 10940                           ;mcc_generated_files/crc.c: 166:      PIR7bits.CRCIF = 0;
 10941  011B10  010E               	movlb	14	; () banked
 10942  011B12  9DCC               	bcf	204,6,b	;volatile
 10943  011B14                     
 10944                           ; BSR set to: 14
 10945                           ;mcc_generated_files/crc.c: 167:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 10946  011B14  5078               	movf	120,w,c	;volatile
 10947  011B16  0B0F               	andlw	15
 10948  011B18  6E10               	movwf	??_CRC_CalculatedResultGet^0,c
 10949  011B1A  3A10               	swapf	??_CRC_CalculatedResultGet^0,f,c
 10950  011B1C  5078               	movf	120,w,c	;volatile
 10951  011B1E  1810               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 10952  011B20  0B0F               	andlw	-241
 10953  011B22  1810               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 10954  011B24  6E78               	movwf	120,c	;volatile
 10955                           
 10956                           ;mcc_generated_files/crc.c: 169:      if(crcObj.polyWidth > 8)
 10957  011B26  0E08               	movlw	8
 10958  011B28  0100               	movlb	0	; () banked
 10959  011B2A  65AD               	cpfsgt	(_crcObj+1)& (0+255),b
 10960  011B2C  EF9A  F08D         	goto	u4241
 10961  011B30  EF9C  F08D         	goto	u4240
 10962  011B34                     u4241:
 10963  011B34  EFA2  F08D         	goto	l5445
 10964  011B38                     u4240:
 10965  011B38                     
 10966                           ; BSR set to: 0
 10967                           ;mcc_generated_files/crc.c: 170:      {;mcc_generated_files/crc.c: 171:          CRCDATH
      +                           = 0;
 10968  011B38  0E00               	movlw	0
 10969  011B3A  6E70               	movwf	112,c	;volatile
 10970                           
 10971                           ;mcc_generated_files/crc.c: 172:          CRCDATL = 0;
 10972  011B3C  0E00               	movlw	0
 10973  011B3E  6E6F               	movwf	111,c	;volatile
 10974                           
 10975                           ;mcc_generated_files/crc.c: 173:      }
 10976  011B40  EFA4  F08D         	goto	l5447
 10977  011B44                     l5445:
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;mcc_generated_files/crc.c: 175:      {;mcc_generated_files/crc.c: 176:          CRCDATL
      +                           = 0;
 10981  011B44  0E00               	movlw	0
 10982  011B46  6E6F               	movwf	111,c	;volatile
 10983  011B48                     l5447:
 10984                           
 10985                           ; BSR set to: 0
 10986                           ;mcc_generated_files/crc.c: 179:      CRCCON0bits.CRCGO = 1;
 10987  011B48  8C77               	bsf	119,6,c	;volatile
 10988  011B4A                     l334:
 10989  011B4A  010E               	movlb	14	; () banked
 10990  011B4C  ADCC               	btfss	204,6,b	;volatile
 10991  011B4E  EFAB  F08D         	goto	u4251
 10992  011B52  EFAD  F08D         	goto	u4250
 10993  011B56                     u4251:
 10994  011B56  EFA5  F08D         	goto	l334
 10995  011B5A                     u4250:
 10996  011B5A                     
 10997                           ; BSR set to: 14
 10998                           ;mcc_generated_files/crc.c: 181:      PIR7bits.CRCIF = 0;
 10999  011B5A  9DCC               	bcf	204,6,b	;volatile
 11000                           
 11001                           ;mcc_generated_files/crc.c: 183:      CRCCON0bits.CRCGO = 0;
 11002  011B5C  9C77               	bcf	119,6,c	;volatile
 11003  011B5E                     
 11004                           ; BSR set to: 14
 11005                           ;mcc_generated_files/crc.c: 184:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 11006  011B5E  C0AC  F010         	movff	_crcObj,??_CRC_CalculatedResultGet
 11007  011B62  0EFF               	movlw	255
 11008  011B64  2610               	addwf	??_CRC_CalculatedResultGet^0,f,c
 11009  011B66  3A10               	swapf	??_CRC_CalculatedResultGet^0,f,c
 11010  011B68  5078               	movf	120,w,c	;volatile
 11011  011B6A  1810               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11012  011B6C  0B0F               	andlw	-241
 11013  011B6E  1810               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11014  011B70  6E78               	movwf	120,c	;volatile
 11015  011B72                     
 11016                           ; BSR set to: 14
 11017                           ;mcc_generated_files/crc.c: 186:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 11018  011B72  5072               	movf	114,w,c	;volatile
 11019  011B74  6E10               	movwf	??_CRC_CalculatedResultGet^0,c
 11020  011B76  5071               	movf	113,w,c	;volatile
 11021  011B78  6E16               	movwf	CRC_CalculatedResultGet@result^0,c
 11022  011B7A  C010  F017         	movff	??_CRC_CalculatedResultGet,CRC_CalculatedResultGet@result+1
 11023  011B7E                     
 11024                           ; BSR set to: 14
 11025                           ;mcc_generated_files/crc.c: 187:      if(crcObj.polyWidth < 16)
 11026  011B7E  0E10               	movlw	16
 11027  011B80  0100               	movlb	0	; () banked
 11028  011B82  61AD               	cpfslt	(_crcObj+1)& (0+255),b
 11029  011B84  EFC6  F08D         	goto	u4261
 11030  011B88  EFC8  F08D         	goto	u4260
 11031  011B8C                     u4261:
 11032  011B8C  EFE1  F08D         	goto	l5457
 11033  011B90                     u4260:
 11034  011B90                     
 11035                           ; BSR set to: 0
 11036                           ;mcc_generated_files/crc.c: 188:      {;mcc_generated_files/crc.c: 190:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 11037  011B90  C0AD  F010         	movff	_crcObj+1,??_CRC_CalculatedResultGet
 11038  011B94  0E01               	movlw	1
 11039  011B96  6E11               	movwf	(??_CRC_CalculatedResultGet+1)^0,c
 11040  011B98  0E00               	movlw	0
 11041  011B9A  6E12               	movwf	(??_CRC_CalculatedResultGet+2)^0,c
 11042  011B9C  2A10               	incf	??_CRC_CalculatedResultGet^0,f,c
 11043  011B9E  EFD4  F08D         	goto	u4274
 11044  011BA2                     u4275:
 11045  011BA2  90D8               	bcf	status,0,c
 11046  011BA4  3611               	rlcf	(??_CRC_CalculatedResultGet+1)^0,f,c
 11047  011BA6  3612               	rlcf	(??_CRC_CalculatedResultGet+2)^0,f,c
 11048  011BA8                     u4274:
 11049  011BA8  2E10               	decfsz	??_CRC_CalculatedResultGet^0,f,c
 11050  011BAA  EFD1  F08D         	goto	u4275
 11051  011BAE  0EFF               	movlw	255
 11052  011BB0  2411               	addwf	(??_CRC_CalculatedResultGet+1)^0,w,c
 11053  011BB2  6E13               	movwf	CRC_CalculatedResultGet@mask^0,c
 11054  011BB4  0EFF               	movlw	255
 11055  011BB6  2012               	addwfc	(??_CRC_CalculatedResultGet+2)^0,w,c
 11056  011BB8  6E14               	movwf	(CRC_CalculatedResultGet@mask+1)^0,c
 11057                           
 11058                           ;mcc_generated_files/crc.c: 191:         result &= mask;
 11059  011BBA  5013               	movf	CRC_CalculatedResultGet@mask^0,w,c
 11060  011BBC  1616               	andwf	CRC_CalculatedResultGet@result^0,f,c
 11061  011BBE  5014               	movf	(CRC_CalculatedResultGet@mask+1)^0,w,c
 11062  011BC0  1617               	andwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11063  011BC2                     l5457:
 11064                           
 11065                           ;mcc_generated_files/crc.c: 194:     if(reverse)
 11066  011BC2  5015               	movf	CRC_CalculatedResultGet@reverse^0,w,c
 11067  011BC4  B4D8               	btfsc	status,2,c
 11068  011BC6  EFE7  F08D         	goto	u4281
 11069  011BCA  EFE9  F08D         	goto	u4280
 11070  011BCE                     u4281:
 11071  011BCE  EFF3  F08D         	goto	l5461
 11072  011BD2                     u4280:
 11073  011BD2                     
 11074                           ;mcc_generated_files/crc.c: 195:         result = CRC_ReverseValue(result);
 11075  011BD2  C016  F007         	movff	CRC_CalculatedResultGet@result,CRC_ReverseValue@crc
 11076  011BD6  C017  F008         	movff	CRC_CalculatedResultGet@result+1,CRC_ReverseValue@crc+1
 11077  011BDA  EC04  F092         	call	_CRC_ReverseValue	;wreg free
 11078  011BDE  C007  F016         	movff	?_CRC_ReverseValue,CRC_CalculatedResultGet@result
 11079  011BE2  C008  F017         	movff	?_CRC_ReverseValue+1,CRC_CalculatedResultGet@result+1
 11080  011BE6                     l5461:
 11081                           
 11082                           ;mcc_generated_files/crc.c: 197:     result ^= xorValue;
 11083  011BE6  500E               	movf	CRC_CalculatedResultGet@xorValue^0,w,c
 11084  011BE8  1A16               	xorwf	CRC_CalculatedResultGet@result^0,f,c
 11085  011BEA  500F               	movf	(CRC_CalculatedResultGet@xorValue+1)^0,w,c
 11086  011BEC  1A17               	xorwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11087  011BEE                     
 11088                           ;mcc_generated_files/crc.c: 199:     return result;
 11089  011BEE  C016  F00E         	movff	CRC_CalculatedResultGet@result,?_CRC_CalculatedResultGet
 11090  011BF2  C017  F00F         	movff	CRC_CalculatedResultGet@result+1,?_CRC_CalculatedResultGet+1
 11091  011BF6  0012               	return		;funcret
 11092  011BF8                     __end_of_CRC_CalculatedResultGet:
 11093                           	callstack 0
 11094                           
 11095 ;; *************** function _CRC_ReverseValue *****************
 11096 ;; Defined at:
 11097 ;;		line 139 in file "mcc_generated_files/crc.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;  crc             2    6[COMRAM] unsigned short 
 11100 ;; Auto vars:     Size  Location     Type
 11101 ;;  mask            2   11[COMRAM] unsigned short 
 11102 ;;  reverse         2    9[COMRAM] unsigned short 
 11103 ;; Return value:  Size  Location     Type
 11104 ;;                  2    6[COMRAM] unsigned short 
 11105 ;; Registers used:
 11106 ;;		wreg, status,2, status,0
 11107 ;; Tracked objects:
 11108 ;;		On entry : 0/0
 11109 ;;		On exit  : 0/0
 11110 ;;		Unchanged: 0/0
 11111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11113 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11114 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11115 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11116 ;;Total ram usage:        7 bytes
 11117 ;; Hardware stack levels used:    1
 11118 ;; Hardware stack levels required when called:    4
 11119 ;; This function calls:
 11120 ;;		Nothing
 11121 ;; This function is called by:
 11122 ;;		_CRC_CalculatedResultGet
 11123 ;; This function uses a non-reentrant model
 11124 ;;
 11125                           
 11126                           	psect	text79
 11127  012408                     __ptext79:
 11128                           	callstack 0
 11129  012408                     _CRC_ReverseValue:
 11130                           	callstack 24
 11131  012408                     
 11132                           ;mcc_generated_files/crc.c: 139: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 140: {;mcc_generated_files/crc.c: 141:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 142:     uint16_t reverse;;mcc_generated_files/crc.c: 144:     mask = 1;
 11133  012408  0E00               	movlw	0
 11134  01240A  6E0D               	movwf	(CRC_ReverseValue@mask+1)^0,c
 11135  01240C  0E01               	movlw	1
 11136  01240E  6E0C               	movwf	CRC_ReverseValue@mask^0,c
 11137  012410                     
 11138                           ;mcc_generated_files/crc.c: 145:     mask <<= crcObj.polyWidth - 1;
 11139  012410  C0AD  F009         	movff	_crcObj+1,??_CRC_ReverseValue
 11140  012414  0EFF               	movlw	255
 11141  012416  2609               	addwf	??_CRC_ReverseValue^0,f,c
 11142  012418  2809               	incf	??_CRC_ReverseValue^0,w,c
 11143  01241A  EF12  F092         	goto	u3470
 11144  01241E                     u3475:
 11145  01241E  90D8               	bcf	status,0,c
 11146  012420  360C               	rlcf	CRC_ReverseValue@mask^0,f,c
 11147  012422  360D               	rlcf	(CRC_ReverseValue@mask+1)^0,f,c
 11148  012424                     u3470:
 11149  012424  2EE8               	decfsz	wreg,f,c
 11150  012426  EF0F  F092         	goto	u3475
 11151  01242A                     
 11152                           ;mcc_generated_files/crc.c: 146:     reverse = 0;
 11153  01242A  0E00               	movlw	0
 11154  01242C  6E0B               	movwf	(CRC_ReverseValue@reverse+1)^0,c
 11155  01242E  0E00               	movlw	0
 11156  012430  6E0A               	movwf	CRC_ReverseValue@reverse^0,c
 11157                           
 11158                           ;mcc_generated_files/crc.c: 148:     while(crc)
 11159  012432  EF2C  F092         	goto	l325
 11160  012436                     l326:
 11161                           
 11162                           ;mcc_generated_files/crc.c: 149:     {;mcc_generated_files/crc.c: 150:         if(crc & 
      +                          0x01)
 11163  012436  A007               	btfss	CRC_ReverseValue@crc^0,0,c
 11164  012438  EF20  F092         	goto	u3481
 11165  01243C  EF22  F092         	goto	u3480
 11166  012440                     u3481:
 11167  012440  EF26  F092         	goto	l4855
 11168  012444                     u3480:
 11169  012444                     
 11170                           ;mcc_generated_files/crc.c: 151:         {;mcc_generated_files/crc.c: 152:             r
      +                          everse |= mask;
 11171  012444  500C               	movf	CRC_ReverseValue@mask^0,w,c
 11172  012446  120A               	iorwf	CRC_ReverseValue@reverse^0,f,c
 11173  012448  500D               	movf	(CRC_ReverseValue@mask+1)^0,w,c
 11174  01244A  120B               	iorwf	(CRC_ReverseValue@reverse+1)^0,f,c
 11175  01244C                     l4855:
 11176                           
 11177                           ;mcc_generated_files/crc.c: 154:         mask >>= 1;
 11178  01244C  90D8               	bcf	status,0,c
 11179  01244E  320D               	rrcf	(CRC_ReverseValue@mask+1)^0,f,c
 11180  012450  320C               	rrcf	CRC_ReverseValue@mask^0,f,c
 11181  012452                     
 11182                           ;mcc_generated_files/crc.c: 155:         crc >>= 1;
 11183  012452  90D8               	bcf	status,0,c
 11184  012454  3208               	rrcf	(CRC_ReverseValue@crc+1)^0,f,c
 11185  012456  3207               	rrcf	CRC_ReverseValue@crc^0,f,c
 11186  012458                     l325:
 11187                           
 11188                           ;mcc_generated_files/crc.c: 148:     while(crc)
 11189  012458  5007               	movf	CRC_ReverseValue@crc^0,w,c
 11190  01245A  1008               	iorwf	(CRC_ReverseValue@crc+1)^0,w,c
 11191  01245C  A4D8               	btfss	status,2,c
 11192  01245E  EF33  F092         	goto	u3491
 11193  012462  EF35  F092         	goto	u3490
 11194  012466                     u3491:
 11195  012466  EF1B  F092         	goto	l326
 11196  01246A                     u3490:
 11197  01246A                     
 11198                           ;mcc_generated_files/crc.c: 157:     return reverse;
 11199  01246A  C00A  F007         	movff	CRC_ReverseValue@reverse,?_CRC_ReverseValue
 11200  01246E  C00B  F008         	movff	CRC_ReverseValue@reverse+1,?_CRC_ReverseValue+1
 11201  012472  0012               	return		;funcret
 11202  012474                     __end_of_CRC_ReverseValue:
 11203                           	callstack 0
 11204                           
 11205 ;; *************** function _CRCInitializePeekMode *****************
 11206 ;; Defined at:
 11207 ;;		line 372 in file "application.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;		None
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;		None
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      void 
 11214 ;; Registers used:
 11215 ;;		wreg, status,2
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11225 ;;Total ram usage:        0 bytes
 11226 ;; Hardware stack levels used:    1
 11227 ;; Hardware stack levels required when called:    4
 11228 ;; This function calls:
 11229 ;;		Nothing
 11230 ;; This function is called by:
 11231 ;;		_ApplicationTask
 11232 ;; This function uses a non-reentrant model
 11233 ;;
 11234                           
 11235                           	psect	text80
 11236  012F38                     __ptext80:
 11237                           	callstack 0
 11238  012F38                     _CRCInitializePeekMode:
 11239                           	callstack 25
 11240  012F38                     
 11241                           ;application.c: 373:     CRCACCL = 0x00;
 11242  012F38  0E00               	movlw	0
 11243  012F3A  6E71               	movwf	113,c	;volatile
 11244                           
 11245                           ;application.c: 374:     CRCACCH = 0x00;
 11246  012F3C  0E00               	movlw	0
 11247  012F3E  6E72               	movwf	114,c	;volatile
 11248                           
 11249                           ;application.c: 376:     SCANCON0bits.MODE = 0x2;
 11250  012F40  010F               	movlb	15	; () banked
 11251  012F42  514A               	movf	74,w,b	;volatile
 11252  012F44  0BFC               	andlw	-4
 11253  012F46  0902               	iorlw	2
 11254  012F48  6F4A               	movwf	74,b	;volatile
 11255  012F4A                     
 11256                           ; BSR set to: 15
 11257  012F4A  0012               	return		;funcret
 11258  012F4C                     __end_of_CRCInitializePeekMode:
 11259                           	callstack 0
 11260                           
 11261 ;; *************** function _CRCInitializeBurstMode *****************
 11262 ;; Defined at:
 11263 ;;		line 379 in file "application.c"
 11264 ;; Parameters:    Size  Location     Type
 11265 ;;		None
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;		None
 11268 ;; Return value:  Size  Location     Type
 11269 ;;                  1    wreg      void 
 11270 ;; Registers used:
 11271 ;;		wreg, status,2
 11272 ;; Tracked objects:
 11273 ;;		On entry : 0/0
 11274 ;;		On exit  : 0/0
 11275 ;;		Unchanged: 0/0
 11276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11281 ;;Total ram usage:        0 bytes
 11282 ;; Hardware stack levels used:    1
 11283 ;; Hardware stack levels required when called:    4
 11284 ;; This function calls:
 11285 ;;		Nothing
 11286 ;; This function is called by:
 11287 ;;		_InitialSetup
 11288 ;;		_ApplicationTask
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           	psect	text81
 11293  012F4C                     __ptext81:
 11294                           	callstack 0
 11295  012F4C                     _CRCInitializeBurstMode:
 11296                           	callstack 25
 11297  012F4C                     
 11298                           ;application.c: 380:     CRCACCL = 0x00;
 11299  012F4C  0E00               	movlw	0
 11300  012F4E  6E71               	movwf	113,c	;volatile
 11301                           
 11302                           ;application.c: 381:     CRCACCH = 0x00;
 11303  012F50  0E00               	movlw	0
 11304  012F52  6E72               	movwf	114,c	;volatile
 11305                           
 11306                           ;application.c: 383:     SCANCON0bits.MODE = 0x1;
 11307  012F54  010F               	movlb	15	; () banked
 11308  012F56  514A               	movf	74,w,b	;volatile
 11309  012F58  0BFC               	andlw	-4
 11310  012F5A  0901               	iorlw	1
 11311  012F5C  6F4A               	movwf	74,b	;volatile
 11312  012F5E                     
 11313                           ; BSR set to: 15
 11314  012F5E  0012               	return		;funcret
 11315  012F60                     __end_of_CRCInitializeBurstMode:
 11316                           	callstack 0
 11317                           
 11318 ;; *************** function _CRCBurstMode *****************
 11319 ;; Defined at:
 11320 ;;		line 394 in file "application.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;		None
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;		None
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  1    wreg      void 
 11327 ;; Registers used:
 11328 ;;		wreg, status,2, status,0, cstack
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11338 ;;Total ram usage:        0 bytes
 11339 ;; Hardware stack levels used:    1
 11340 ;; Hardware stack levels required when called:    5
 11341 ;; This function calls:
 11342 ;;		_CRC_SCAN_HasScanCompleted
 11343 ;;		_CRC_SCAN_SetAddressLimit
 11344 ;;		_CRC_SCAN_StartScanner
 11345 ;;		_CRC_SCAN_StopScanner
 11346 ;; This function is called by:
 11347 ;;		_InitialSetup
 11348 ;;		_ApplicationTask
 11349 ;; This function uses a non-reentrant model
 11350 ;;
 11351                           
 11352                           	psect	text82
 11353  0129E6                     __ptext82:
 11354                           	callstack 0
 11355  0129E6                     _CRCBurstMode:
 11356                           	callstack 24
 11357  0129E6                     
 11358                           ;application.c: 396:     CRC_SCAN_SetAddressLimit(0x4000, 0x41FF);
 11359  0129E6  0E00               	movlw	0
 11360  0129E8  6E07               	movwf	CRC_SCAN_SetAddressLimit@startAddr^0,c
 11361  0129EA  0E40               	movlw	64
 11362  0129EC  6E08               	movwf	(CRC_SCAN_SetAddressLimit@startAddr+1)^0,c
 11363  0129EE  0E00               	movlw	0
 11364  0129F0  6E09               	movwf	(CRC_SCAN_SetAddressLimit@startAddr+2)^0,c
 11365  0129F2  0E00               	movlw	0
 11366  0129F4  6E0A               	movwf	(CRC_SCAN_SetAddressLimit@startAddr+3)^0,c
 11367  0129F6  0EFF               	movlw	255
 11368  0129F8  6E0B               	movwf	CRC_SCAN_SetAddressLimit@endAddr^0,c
 11369  0129FA  0E41               	movlw	65
 11370  0129FC  6E0C               	movwf	(CRC_SCAN_SetAddressLimit@endAddr+1)^0,c
 11371  0129FE  0E00               	movlw	0
 11372  012A00  6E0D               	movwf	(CRC_SCAN_SetAddressLimit@endAddr+2)^0,c
 11373  012A02  0E00               	movlw	0
 11374  012A04  6E0E               	movwf	(CRC_SCAN_SetAddressLimit@endAddr+3)^0,c
 11375  012A06  EC36  F097         	call	_CRC_SCAN_SetAddressLimit	;wreg free
 11376  012A0A                     
 11377                           ;application.c: 399:     CRC_SCAN_StartScanner();
 11378  012A0A  EC14  F098         	call	_CRC_SCAN_StartScanner	;wreg free
 11379  012A0E                     l5529:
 11380  012A0E  EC54  F093         	call	_CRC_SCAN_HasScanCompleted	;wreg free
 11381  012A12  0900               	iorlw	0
 11382  012A14  B4D8               	btfsc	status,2,c
 11383  012A16  EF0F  F095         	goto	u4301
 11384  012A1A  EF11  F095         	goto	u4300
 11385  012A1E                     u4301:
 11386  012A1E  EF07  F095         	goto	l5529
 11387  012A22                     u4300:
 11388  012A22                     
 11389                           ;application.c: 405:     CRC_SCAN_StopScanner();
 11390  012A22  EC10  F098         	call	_CRC_SCAN_StopScanner	;wreg free
 11391  012A26  0012               	return		;funcret
 11392  012A28                     __end_of_CRCBurstMode:
 11393                           	callstack 0
 11394                           
 11395 ;; *************** function _CRC_SCAN_StopScanner *****************
 11396 ;; Defined at:
 11397 ;;		line 217 in file "mcc_generated_files/crc.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;		None
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;		None
 11402 ;; Return value:  Size  Location     Type
 11403 ;;                  1    wreg      void 
 11404 ;; Registers used:
 11405 ;;		None
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11415 ;;Total ram usage:        0 bytes
 11416 ;; Hardware stack levels used:    1
 11417 ;; Hardware stack levels required when called:    4
 11418 ;; This function calls:
 11419 ;;		Nothing
 11420 ;; This function is called by:
 11421 ;;		_ApplicationTask
 11422 ;;		_CRCBurstMode
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           	psect	text83
 11427  013020                     __ptext83:
 11428                           	callstack 0
 11429  013020                     _CRC_SCAN_StopScanner:
 11430                           	callstack 24
 11431  013020                     
 11432                           ;mcc_generated_files/crc.c: 220:     SCANCON0bits.SCANGO = 0;
 11433  013020  010F               	movlb	15	; () banked
 11434  013022  9D4A               	bcf	74,6,b	;volatile
 11435                           
 11436                           ;mcc_generated_files/crc.c: 223:     CRCCON0bits.CRCGO = 0;
 11437  013024  9C77               	bcf	119,6,c	;volatile
 11438  013026                     
 11439                           ; BSR set to: 15
 11440  013026  0012               	return		;funcret
 11441  013028                     __end_of_CRC_SCAN_StopScanner:
 11442                           	callstack 0
 11443                           
 11444 ;; *************** function _CRC_SCAN_StartScanner *****************
 11445 ;; Defined at:
 11446 ;;		line 208 in file "mcc_generated_files/crc.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;		None
 11449 ;; Auto vars:     Size  Location     Type
 11450 ;;		None
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  1    wreg      void 
 11453 ;; Registers used:
 11454 ;;		None
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11464 ;;Total ram usage:        0 bytes
 11465 ;; Hardware stack levels used:    1
 11466 ;; Hardware stack levels required when called:    4
 11467 ;; This function calls:
 11468 ;;		Nothing
 11469 ;; This function is called by:
 11470 ;;		_StartCRCPeekMode
 11471 ;;		_CRCBurstMode
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           	psect	text84
 11476  013028                     __ptext84:
 11477                           	callstack 0
 11478  013028                     _CRC_SCAN_StartScanner:
 11479                           	callstack 24
 11480  013028                     
 11481                           ;mcc_generated_files/crc.c: 211:     CRCCON0bits.CRCGO = 1;
 11482  013028  8C77               	bsf	119,6,c	;volatile
 11483                           
 11484                           ;mcc_generated_files/crc.c: 214:     SCANCON0bits.SCANGO = 1;
 11485  01302A  010F               	movlb	15	; () banked
 11486  01302C  8D4A               	bsf	74,6,b	;volatile
 11487  01302E                     
 11488                           ; BSR set to: 15
 11489  01302E  0012               	return		;funcret
 11490  013030                     __end_of_CRC_SCAN_StartScanner:
 11491                           	callstack 0
 11492                           
 11493 ;; *************** function _CRC_SCAN_SetAddressLimit *****************
 11494 ;; Defined at:
 11495 ;;		line 226 in file "mcc_generated_files/crc.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;  startAddr       4    6[COMRAM] unsigned long 
 11498 ;;  endAddr         4   10[COMRAM] unsigned long 
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;		None
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  1    wreg      void 
 11503 ;; Registers used:
 11504 ;;		wreg, status,2, status,0
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11510 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11513 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11514 ;;Total ram usage:        8 bytes
 11515 ;; Hardware stack levels used:    1
 11516 ;; Hardware stack levels required when called:    4
 11517 ;; This function calls:
 11518 ;;		Nothing
 11519 ;; This function is called by:
 11520 ;;		_StartCRCPeekMode
 11521 ;;		_CRCBurstMode
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           
 11525                           	psect	text85
 11526  012E6C                     __ptext85:
 11527                           	callstack 0
 11528  012E6C                     _CRC_SCAN_SetAddressLimit:
 11529                           	callstack 24
 11530  012E6C                     
 11531                           ;mcc_generated_files/crc.c: 226: void CRC_SCAN_SetAddressLimit(uint32_t startAddr, uint3
      +                          2_t endAddr);mcc_generated_files/crc.c: 227: {;mcc_generated_files/crc.c: 229:  SCANHADR
      +                          U = 0x3F & (endAddr >> 16);
 11532  012E6C  500D               	movf	(CRC_SCAN_SetAddressLimit@endAddr+2)^0,w,c
 11533  012E6E  0B3F               	andlw	63
 11534  012E70  010F               	movlb	15	; () banked
 11535  012E72  6F49               	movwf	73,b	;volatile
 11536  012E74                     
 11537                           ; BSR set to: 15
 11538                           ;mcc_generated_files/crc.c: 230:  SCANHADRH = 0xFF & (endAddr >> 8);
 11539  012E74  C00C  FF48         	movff	CRC_SCAN_SetAddressLimit@endAddr+1,3912	;volatile
 11540  012E78                     
 11541                           ; BSR set to: 15
 11542                           ;mcc_generated_files/crc.c: 231:  SCANHADRL = 0xFF & endAddr;
 11543  012E78  C00B  FF47         	movff	CRC_SCAN_SetAddressLimit@endAddr,3911	;volatile
 11544                           
 11545                           ;mcc_generated_files/crc.c: 234:  SCANLADRU = 0x3F & (startAddr >> 16);
 11546  012E7C  5009               	movf	(CRC_SCAN_SetAddressLimit@startAddr+2)^0,w,c
 11547  012E7E  0B3F               	andlw	63
 11548  012E80  6F46               	movwf	70,b	;volatile
 11549  012E82                     
 11550                           ; BSR set to: 15
 11551                           ;mcc_generated_files/crc.c: 235:  SCANLADRH = 0xFF & (startAddr >> 8);
 11552  012E82  C008  FF45         	movff	CRC_SCAN_SetAddressLimit@startAddr+1,3909	;volatile
 11553  012E86                     
 11554                           ; BSR set to: 15
 11555                           ;mcc_generated_files/crc.c: 236:  SCANLADRL = 0xFF & startAddr;
 11556  012E86  C007  FF44         	movff	CRC_SCAN_SetAddressLimit@startAddr,3908	;volatile
 11557  012E8A                     
 11558                           ; BSR set to: 15
 11559  012E8A  0012               	return		;funcret
 11560  012E8C                     __end_of_CRC_SCAN_SetAddressLimit:
 11561                           	callstack 0
 11562                           
 11563 ;; *************** function _CRC_SCAN_HasScanCompleted *****************
 11564 ;; Defined at:
 11565 ;;		line 246 in file "mcc_generated_files/crc.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;		None
 11568 ;; Auto vars:     Size  Location     Type
 11569 ;;  status          1    7[COMRAM] _Bool 
 11570 ;; Return value:  Size  Location     Type
 11571 ;;                  1    wreg      _Bool 
 11572 ;; Registers used:
 11573 ;;		wreg, status,2
 11574 ;; Tracked objects:
 11575 ;;		On entry : 0/0
 11576 ;;		On exit  : 0/0
 11577 ;;		Unchanged: 0/0
 11578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11580 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11583 ;;Total ram usage:        2 bytes
 11584 ;; Hardware stack levels used:    1
 11585 ;; Hardware stack levels required when called:    4
 11586 ;; This function calls:
 11587 ;;		Nothing
 11588 ;; This function is called by:
 11589 ;;		_ApplicationTask
 11590 ;;		_CRCBurstMode
 11591 ;; This function uses a non-reentrant model
 11592 ;;
 11593                           
 11594                           	psect	text86
 11595  0126A8                     __ptext86:
 11596                           	callstack 0
 11597  0126A8                     _CRC_SCAN_HasScanCompleted:
 11598                           	callstack 24
 11599  0126A8                     
 11600                           ;mcc_generated_files/crc.c: 249:     _Bool status = (unsigned char)(PIR7bits.SCANIF && P
      +                          IR7bits.CRCIF);
 11601  0126A8  0E00               	movlw	0
 11602  0126AA  6E07               	movwf	_CRC_SCAN_HasScanCompleted$852^0,c
 11603  0126AC  010E               	movlb	14	; () banked
 11604  0126AE  AFCC               	btfss	204,7,b	;volatile
 11605  0126B0  EF5C  F093         	goto	u3501
 11606  0126B4  EF5E  F093         	goto	u3500
 11607  0126B8                     u3501:
 11608  0126B8  EF67  F093         	goto	l358
 11609  0126BC                     u3500:
 11610  0126BC                     
 11611                           ; BSR set to: 14
 11612  0126BC  ADCC               	btfss	204,6,b	;volatile
 11613  0126BE  EF63  F093         	goto	u3511
 11614  0126C2  EF65  F093         	goto	u3510
 11615  0126C6                     u3511:
 11616  0126C6  EF67  F093         	goto	l358
 11617  0126CA                     u3510:
 11618  0126CA                     
 11619                           ; BSR set to: 14
 11620  0126CA  0E01               	movlw	1
 11621  0126CC  6E07               	movwf	_CRC_SCAN_HasScanCompleted$852^0,c
 11622  0126CE                     l358:
 11623                           
 11624                           ; BSR set to: 14
 11625  0126CE  5007               	movf	_CRC_SCAN_HasScanCompleted$852^0,w,c
 11626  0126D0  A4D8               	btfss	status,2,c
 11627  0126D2  EF6D  F093         	goto	u3521
 11628  0126D6  EF70  F093         	goto	u3520
 11629  0126DA                     u3521:
 11630  0126DA  0E01               	movlw	1
 11631  0126DC  EF71  F093         	goto	u3530
 11632  0126E0                     u3520:
 11633  0126E0  0E00               	movlw	0
 11634  0126E2                     u3530:
 11635  0126E2  6E08               	movwf	CRC_SCAN_HasScanCompleted@status^0,c
 11636                           
 11637                           ;mcc_generated_files/crc.c: 250:     if(status)
 11638  0126E4  5008               	movf	CRC_SCAN_HasScanCompleted@status^0,w,c
 11639  0126E6  B4D8               	btfsc	status,2,c
 11640  0126E8  EF78  F093         	goto	u3541
 11641  0126EC  EF7A  F093         	goto	u3540
 11642  0126F0                     u3541:
 11643  0126F0  EF7C  F093         	goto	l4883
 11644  0126F4                     u3540:
 11645  0126F4                     
 11646                           ; BSR set to: 14
 11647                           ;mcc_generated_files/crc.c: 251:     {;mcc_generated_files/crc.c: 252:         PIR7bits.
      +                          CRCIF = 0;
 11648  0126F4  9DCC               	bcf	204,6,b	;volatile
 11649                           
 11650                           ;mcc_generated_files/crc.c: 253:         PIR7bits.SCANIF = 0;
 11651  0126F6  9FCC               	bcf	204,7,b	;volatile
 11652  0126F8                     l4883:
 11653                           
 11654                           ; BSR set to: 14
 11655                           ;mcc_generated_files/crc.c: 255:     return(status);
 11656  0126F8  5008               	movf	CRC_SCAN_HasScanCompleted@status^0,w,c
 11657  0126FA                     
 11658                           ; BSR set to: 14
 11659  0126FA  0012               	return		;funcret
 11660  0126FC                     __end_of_CRC_SCAN_HasScanCompleted:
 11661                           	callstack 0
 11662                           
 11663 ;; *************** function _BLE2ClickGetstr *****************
 11664 ;; Defined at:
 11665 ;;		line 8 in file "BLE2Click.c"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;		None
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;  i               2    9[COMRAM] unsigned int 
 11670 ;; Return value:  Size  Location     Type
 11671 ;;                  1    wreg      void 
 11672 ;; Registers used:
 11673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 11674 ;; Tracked objects:
 11675 ;;		On entry : 0/0
 11676 ;;		On exit  : 0/0
 11677 ;;		Unchanged: 0/0
 11678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11683 ;;Total ram usage:        4 bytes
 11684 ;; Hardware stack levels used:    1
 11685 ;; Hardware stack levels required when called:    5
 11686 ;; This function calls:
 11687 ;;		_EUSART1_Read
 11688 ;; This function is called by:
 11689 ;;		_ApplicationTask
 11690 ;;		_BLE2ClickSetup
 11691 ;; This function uses a non-reentrant model
 11692 ;;
 11693                           
 11694                           	psect	text87
 11695  01219C                     __ptext87:
 11696                           	callstack 0
 11697  01219C                     _BLE2ClickGetstr:
 11698                           	callstack 23
 11699  01219C                     
 11700                           ;BLE2Click.c: 9:     unsigned int i;;BLE2Click.c: 11:     for(i=0;i<100;i++) {
 11701  01219C  0E00               	movlw	0
 11702  01219E  6E0B               	movwf	(BLE2ClickGetstr@i+1)^0,c
 11703  0121A0  0E00               	movlw	0
 11704  0121A2  6E0A               	movwf	BLE2ClickGetstr@i^0,c
 11705  0121A4                     l4939:
 11706                           
 11707                           ;BLE2Click.c: 12:         if((buf[i]=uart[BLE2].Read())=='\n') {
 11708  0121A4  0EB3               	movlw	low _uart
 11709  0121A6  6EF6               	movwf	tblptrl,c
 11710  0121A8                     	if	1	;There is more than 1 active tblptr byte
 11711  0121A8  0EFE               	movlw	high _uart
 11712  0121AA  6EF7               	movwf	tblptrh,c
 11713  0121AC                     	endif
 11714  0121AC                     	if	1	;There are 3 active tblptr bytes
 11715  0121AC  0E00               	movlw	low (_uart shr (0+16))
 11716  0121AE  6EF8               	movwf	tblptru,c
 11717  0121B0                     	endif
 11718  0121B0  D802               	call	u3578
 11719  0121B2  EFE8  F090         	goto	u3579
 11720  0121B6                     u3578:
 11721  0121B6  0005               	push	
 11722  0121B8  6EFA               	movwf	pclath,c
 11723  0121BA  0009               	tblrd		*+
 11724  0121BC  50F5               	movf	tablat,w,c
 11725  0121BE  6EFD               	movwf	tosl,c
 11726  0121C0  0009               	tblrd		*+
 11727  0121C2  50F5               	movf	tablat,w,c
 11728  0121C4  6EFE               	movwf	tosh,c
 11729  0121C6  0009               	tblrd		*+
 11730  0121C8  50F5               	movf	tablat,w,c
 11731  0121CA  6EFF               	movwf	tosu,c
 11732  0121CC  50FA               	movf	pclath,w,c
 11733  0121CE  0012               	return		;indir
 11734  0121D0                     u3579:
 11735  0121D0  6E08               	movwf	??_BLE2ClickGetstr^0,c
 11736  0121D2  0E00               	movlw	low _buf
 11737  0121D4  240A               	addwf	BLE2ClickGetstr@i^0,w,c
 11738  0121D6  6ED9               	movwf	fsr2l,c
 11739  0121D8  0E01               	movlw	high _buf
 11740  0121DA  200B               	addwfc	(BLE2ClickGetstr@i+1)^0,w,c
 11741  0121DC  6EDA               	movwf	fsr2h,c
 11742  0121DE  C008  FFDF         	movff	??_BLE2ClickGetstr,indf2
 11743  0121E2  0E0A               	movlw	10
 11744  0121E4  18DE               	xorwf	postinc2,w,c
 11745  0121E6  A4D8               	btfss	status,2,c
 11746  0121E8  EFF8  F090         	goto	u3581
 11747  0121EC  EFFA  F090         	goto	u3580
 11748  0121F0                     u3581:
 11749  0121F0  EFFC  F090         	goto	l4943
 11750  0121F4                     u3580:
 11751  0121F4  EF09  F091         	goto	l4947
 11752  0121F8                     l4943:
 11753                           
 11754                           ;BLE2Click.c: 15:     }
 11755  0121F8  4A0A               	infsnz	BLE2ClickGetstr@i^0,f,c
 11756  0121FA  2A0B               	incf	(BLE2ClickGetstr@i+1)^0,f,c
 11757  0121FC  500B               	movf	(BLE2ClickGetstr@i+1)^0,w,c
 11758  0121FE  E109               	bnz	u3590
 11759  012200  0E64               	movlw	100
 11760  012202  5C0A               	subwf	BLE2ClickGetstr@i^0,w,c
 11761  012204  A0D8               	btfss	status,0,c
 11762  012206  EF07  F091         	goto	u3591
 11763  01220A  EF09  F091         	goto	u3590
 11764  01220E                     u3591:
 11765  01220E  EFD2  F090         	goto	l4939
 11766  012212                     u3590:
 11767  012212                     l4947:
 11768                           
 11769                           ;BLE2Click.c: 16:     buf[i-1]='\0';
 11770  012212  0EFF               	movlw	low (_buf+65535)
 11771  012214  240A               	addwf	BLE2ClickGetstr@i^0,w,c
 11772  012216  6ED9               	movwf	fsr2l,c
 11773  012218  0E00               	movlw	high (_buf+65535)
 11774  01221A  200B               	addwfc	(BLE2ClickGetstr@i+1)^0,w,c
 11775  01221C  6EDA               	movwf	fsr2h,c
 11776  01221E  0E00               	movlw	0
 11777  012220  6EDF               	movwf	indf2,c
 11778  012222  0012               	return		;funcret
 11779  012224                     __end_of_BLE2ClickGetstr:
 11780                           	callstack 0
 11781                           
 11782 ;; *************** function _EUSART1_Read *****************
 11783 ;; Defined at:
 11784 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;		None
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;  readValue       1    6[COMRAM] unsigned char 
 11789 ;; Return value:  Size  Location     Type
 11790 ;;                  1    wreg      unsigned char 
 11791 ;; Registers used:
 11792 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11793 ;; Tracked objects:
 11794 ;;		On entry : 0/0
 11795 ;;		On exit  : 0/0
 11796 ;;		Unchanged: 0/0
 11797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11802 ;;Total ram usage:        1 bytes
 11803 ;; Hardware stack levels used:    1
 11804 ;; Hardware stack levels required when called:    4
 11805 ;; This function calls:
 11806 ;;		Nothing
 11807 ;; This function is called by:
 11808 ;;		_getch
 11809 ;;		_BLE2ClickGetstr
 11810 ;;		_BLE2ClickSetup
 11811 ;; This function uses a non-reentrant model
 11812 ;;
 11813                           
 11814                           	psect	text88
 11815  0125FC                     __ptext88:
 11816                           	callstack 0
 11817  0125FC                     _EUSART1_Read:
 11818                           	callstack 24
 11819  0125FC                     l4725:
 11820                           
 11821                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 11822  0125FC  0100               	movlb	0	; () banked
 11823  0125FE  518B               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 11824  012600  B4D8               	btfsc	status,2,c
 11825  012602  EF05  F093         	goto	u3381
 11826  012606  EF07  F093         	goto	u3380
 11827  01260A                     u3381:
 11828  01260A  EFFE  F092         	goto	l4725
 11829  01260E                     u3380:
 11830  01260E                     
 11831                           ; BSR set to: 0
 11832                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 11833  01260E  0E60               	movlw	low _eusart1RxStatusBuffer
 11834  012610  2455               	addwf	_eusart1RxTail^0,w,c	;volatile
 11835  012612  6ED9               	movwf	fsr2l,c
 11836  012614  6ADA               	clrf	fsr2h,c
 11837  012616  0E00               	movlw	high _eusart1RxStatusBuffer
 11838  012618  22DA               	addwfc	fsr2h,f,c
 11839  01261A  50DF               	movf	indf2,w,c
 11840  01261C  6F8A               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 11841                           
 11842                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 11843  01261E  0E68               	movlw	low _eusart1RxBuffer
 11844  012620  2455               	addwf	_eusart1RxTail^0,w,c	;volatile
 11845  012622  6ED9               	movwf	fsr2l,c
 11846  012624  6ADA               	clrf	fsr2h,c
 11847  012626  0E00               	movlw	high _eusart1RxBuffer
 11848  012628  22DA               	addwfc	fsr2h,f,c
 11849  01262A  50DF               	movf	indf2,w,c
 11850  01262C  6E07               	movwf	EUSART1_Read@readValue^0,c
 11851  01262E                     
 11852                           ; BSR set to: 0
 11853  01262E  2A55               	incf	_eusart1RxTail^0,f,c	;volatile
 11854  012630                     
 11855                           ; BSR set to: 0
 11856                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 11857  012630  0E07               	movlw	7
 11858  012632  6455               	cpfsgt	_eusart1RxTail^0,c	;volatile
 11859  012634  EF1E  F093         	goto	u3391
 11860  012638  EF20  F093         	goto	u3390
 11861  01263C                     u3391:
 11862  01263C  EF22  F093         	goto	l4735
 11863  012640                     u3390:
 11864  012640                     
 11865                           ; BSR set to: 0
 11866                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 11867  012640  0E00               	movlw	0
 11868  012642  6E55               	movwf	_eusart1RxTail^0,c	;volatile
 11869  012644                     l4735:
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 11873  012644  010E               	movlb	14	; () banked
 11874  012646  9BC0               	bcf	192,5,b	;volatile
 11875  012648                     
 11876                           ; BSR set to: 14
 11877                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 11878  012648  0100               	movlb	0	; () banked
 11879  01264A  078B               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 11880  01264C                     
 11881                           ; BSR set to: 0
 11882                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 11883  01264C  010E               	movlb	14	; () banked
 11884  01264E  8BC0               	bsf	192,5,b	;volatile
 11885  012650                     
 11886                           ; BSR set to: 14
 11887                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 11888  012650  5007               	movf	EUSART1_Read@readValue^0,w,c
 11889  012652                     
 11890                           ; BSR set to: 14
 11891  012652  0012               	return		;funcret
 11892  012654                     __end_of_EUSART1_Read:
 11893                           	callstack 0
 11894                           
 11895 ;; *************** function _ADCC_GetFilterValue *****************
 11896 ;; Defined at:
 11897 ;;		line 224 in file "mcc_generated_files/adcc.c"
 11898 ;; Parameters:    Size  Location     Type
 11899 ;;		None
 11900 ;; Auto vars:     Size  Location     Type
 11901 ;;		None
 11902 ;; Return value:  Size  Location     Type
 11903 ;;                  2    6[COMRAM] unsigned short 
 11904 ;; Registers used:
 11905 ;;		wreg, status,2, status,0
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11914 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11915 ;;Total ram usage:        4 bytes
 11916 ;; Hardware stack levels used:    1
 11917 ;; Hardware stack levels required when called:    4
 11918 ;; This function calls:
 11919 ;;		Nothing
 11920 ;; This function is called by:
 11921 ;;		_ApplicationTask
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925                           	psect	text89
 11926  012F60                     __ptext89:
 11927                           	callstack 0
 11928  012F60                     _ADCC_GetFilterValue:
 11929                           	callstack 25
 11930  012F60                     
 11931                           ;mcc_generated_files/adcc.c: 227:     return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 11932  012F60  506E               	movf	110,w,c	;volatile
 11933  012F62  6E0A               	movwf	(??_ADCC_GetFilterValue+1)^0,c
 11934  012F64  6A09               	clrf	??_ADCC_GetFilterValue^0,c
 11935  012F66  506D               	movf	109,w,c	;volatile
 11936  012F68  2409               	addwf	??_ADCC_GetFilterValue^0,w,c
 11937  012F6A  6E07               	movwf	?_ADCC_GetFilterValue^0,c
 11938  012F6C  0E00               	movlw	0
 11939  012F6E  200A               	addwfc	(??_ADCC_GetFilterValue+1)^0,w,c
 11940  012F70  6E08               	movwf	(?_ADCC_GetFilterValue+1)^0,c
 11941  012F72  0012               	return		;funcret
 11942  012F74                     __end_of_ADCC_GetFilterValue:
 11943                           	callstack 0
 11944                           
 11945 ;; *************** function _ADCC_GetConversionResult *****************
 11946 ;; Defined at:
 11947 ;;		line 133 in file "mcc_generated_files/adcc.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;		None
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;		None
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  2    6[COMRAM] unsigned short 
 11954 ;; Registers used:
 11955 ;;		wreg, status,2, status,0
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 11961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11963 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11964 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11965 ;;Total ram usage:        4 bytes
 11966 ;; Hardware stack levels used:    1
 11967 ;; Hardware stack levels required when called:    4
 11968 ;; This function calls:
 11969 ;;		Nothing
 11970 ;; This function is called by:
 11971 ;;		_ApplicationTask
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975                           	psect	text90
 11976  012F22                     __ptext90:
 11977                           	callstack 0
 11978  012F22                     _ADCC_GetConversionResult:
 11979                           	callstack 25
 11980  012F22                     
 11981                           ;mcc_generated_files/adcc.c: 136:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11982  012F22  010F               	movlb	15	; () banked
 11983  012F24  515F               	movf	95,w,b	;volatile
 11984  012F26  6E0A               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 11985  012F28  6A09               	clrf	??_ADCC_GetConversionResult^0,c
 11986  012F2A  515E               	movf	94,w,b	;volatile
 11987  012F2C  2409               	addwf	??_ADCC_GetConversionResult^0,w,c
 11988  012F2E  6E07               	movwf	?_ADCC_GetConversionResult^0,c
 11989  012F30  0E00               	movlw	0
 11990  012F32  200A               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 11991  012F34  6E08               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 11992  012F36                     
 11993                           ; BSR set to: 15
 11994  012F36  0012               	return		;funcret
 11995  012F38                     __end_of_ADCC_GetConversionResult:
 11996                           	callstack 0
 11997                           
 11998 ;; *************** function _INTERRUPT_InterruptManager *****************
 11999 ;; Defined at:
 12000 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;		None
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;		None
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      void 
 12007 ;; Registers used:
 12008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12016 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12017 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12018 ;;Total ram usage:        4 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    3
 12021 ;; This function calls:
 12022 ;;		Absolute function
 12023 ;;		_ADCC_ThresholdISR
 12024 ;;		_EUSART1_Receive_ISR
 12025 ;;		_EUSART1_Transmit_ISR
 12026 ;;		_TMR0_ISR
 12027 ;;		_TMR1_ISR
 12028 ;; This function is called by:
 12029 ;;		Interrupt level 2
 12030 ;; This function uses a non-reentrant model
 12031 ;;
 12032                           
 12033                           	psect	intcode
 12034  000008                     __pintcode:
 12035                           	callstack 0
 12036  000008                     _INTERRUPT_InterruptManager:
 12037                           	callstack 15
 12038                           
 12039                           ; BSR set to: 15
 12040                           ;incstack = 0
 12041  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12042  00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
 12043  00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 12044  000012  CFD9 F005          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 12045  000016  CFDA F006          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 12046  00001A                     
 12047                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 12048  00001A  010E               	movlb	14	; () banked
 12049  00001C  ABBD               	btfss	189,5,b	;volatile
 12050  00001E  EF13  F000         	goto	i2u487_41
 12051  000022  EF15  F000         	goto	i2u487_40
 12052  000026                     i2u487_41:
 12053  000026  EF20  F000         	goto	i2l208
 12054  00002A                     i2u487_40:
 12055  00002A                     
 12056                           ; BSR set to: 14
 12057  00002A  ABC5               	btfss	197,5,b	;volatile
 12058  00002C  EF1A  F000         	goto	i2u488_41
 12059  000030  EF1C  F000         	goto	i2u488_40
 12060  000034                     i2u488_41:
 12061  000034  EF20  F000         	goto	i2l208
 12062  000038                     i2u488_40:
 12063  000038                     
 12064                           ; BSR set to: 14
 12065                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 12066  000038  ECE2  F095         	call	_TMR0_ISR	;wreg free
 12067                           
 12068                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 12069  00003C  EF87  F000         	goto	i2l220
 12070  000040                     i2l208:
 12071                           
 12072                           ; BSR set to: 14
 12073  000040  ACF2               	btfss	242,6,c	;volatile
 12074  000042  EF25  F000         	goto	i2u489_41
 12075  000046  EF27  F000         	goto	i2u489_40
 12076  00004A                     i2u489_41:
 12077  00004A  EF87  F000         	goto	i2l220
 12078  00004E                     i2u489_40:
 12079  00004E                     
 12080                           ; BSR set to: 14
 12081                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 12082  00004E  A9C0               	btfss	192,4,b	;volatile
 12083  000050  EF2C  F000         	goto	i2u490_41
 12084  000054  EF2E  F000         	goto	i2u490_40
 12085  000058                     i2u490_41:
 12086  000058  EF45  F000         	goto	i2l211
 12087  00005C                     i2u490_40:
 12088  00005C                     
 12089                           ; BSR set to: 14
 12090  00005C  A9C8               	btfss	200,4,b	;volatile
 12091  00005E  EF33  F000         	goto	i2u491_41
 12092  000062  EF35  F000         	goto	i2u491_40
 12093  000066                     i2u491_41:
 12094  000066  EF45  F000         	goto	i2l211
 12095  00006A                     i2u491_40:
 12096  00006A                     
 12097                           ; BSR set to: 14
 12098                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 12099  00006A  D802               	call	i2u492_48
 12100  00006C  EF43  F000         	goto	i2u492_49
 12101  000070                     i2u492_48:
 12102  000070  0005               	push	
 12103  000072  6EFA               	movwf	pclath,c
 12104  000074  0100               	movlb	0	; () banked
 12105  000076  51F7               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 12106  000078  6EFD               	movwf	tosl,c
 12107  00007A  51F8               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 12108  00007C  6EFE               	movwf	tosh,c
 12109  00007E  51F9               	movf	(_EUSART1_TxDefaultInterruptHandler+2)& (0+255),w,b
 12110  000080  6EFF               	movwf	tosu,c
 12111  000082  50FA               	movf	pclath,w,c
 12112  000084  0012               	return		;indir
 12113  000086                     i2u492_49:
 12114                           
 12115                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 12116  000086  EF87  F000         	goto	i2l220
 12117  00008A                     i2l211:
 12118                           
 12119                           ; BSR set to: 14
 12120  00008A  ABC0               	btfss	192,5,b	;volatile
 12121  00008C  EF4A  F000         	goto	i2u493_41
 12122  000090  EF4C  F000         	goto	i2u493_40
 12123  000094                     i2u493_41:
 12124  000094  EF63  F000         	goto	i2l213
 12125  000098                     i2u493_40:
 12126  000098                     
 12127                           ; BSR set to: 14
 12128  000098  ABC8               	btfss	200,5,b	;volatile
 12129  00009A  EF51  F000         	goto	i2u494_41
 12130  00009E  EF53  F000         	goto	i2u494_40
 12131  0000A2                     i2u494_41:
 12132  0000A2  EF63  F000         	goto	i2l213
 12133  0000A6                     i2u494_40:
 12134  0000A6                     
 12135                           ; BSR set to: 14
 12136                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 12137  0000A6  D802               	call	i2u495_48
 12138  0000A8  EF61  F000         	goto	i2u495_49
 12139  0000AC                     i2u495_48:
 12140  0000AC  0005               	push	
 12141  0000AE  6EFA               	movwf	pclath,c
 12142  0000B0  0100               	movlb	0	; () banked
 12143  0000B2  51F4               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 12144  0000B4  6EFD               	movwf	tosl,c
 12145  0000B6  51F5               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 12146  0000B8  6EFE               	movwf	tosh,c
 12147  0000BA  51F6               	movf	(_EUSART1_RxDefaultInterruptHandler+2)& (0+255),w,b
 12148  0000BC  6EFF               	movwf	tosu,c
 12149  0000BE  50FA               	movf	pclath,w,c
 12150  0000C0  0012               	return		;indir
 12151  0000C2                     i2u495_49:
 12152                           
 12153                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 12154  0000C2  EF87  F000         	goto	i2l220
 12155  0000C6                     i2l213:
 12156                           
 12157                           ; BSR set to: 14
 12158  0000C6  A3BE               	btfss	190,1,b	;volatile
 12159  0000C8  EF68  F000         	goto	i2u496_41
 12160  0000CC  EF6A  F000         	goto	i2u496_40
 12161  0000D0                     i2u496_41:
 12162  0000D0  EF75  F000         	goto	i2l215
 12163  0000D4                     i2u496_40:
 12164  0000D4                     
 12165                           ; BSR set to: 14
 12166  0000D4  A3C6               	btfss	198,1,b	;volatile
 12167  0000D6  EF6F  F000         	goto	i2u497_41
 12168  0000DA  EF71  F000         	goto	i2u497_40
 12169  0000DE                     i2u497_41:
 12170  0000DE  EF75  F000         	goto	i2l215
 12171  0000E2                     i2u497_40:
 12172  0000E2                     
 12173                           ; BSR set to: 14
 12174                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             ADCC_ThresholdISR();
 12175  0000E2  ECFD  F095         	call	_ADCC_ThresholdISR	;wreg free
 12176                           
 12177                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 12178  0000E6  EF87  F000         	goto	i2l220
 12179  0000EA                     i2l215:
 12180                           
 12181                           ; BSR set to: 14
 12182  0000EA  A1C1               	btfss	193,0,b	;volatile
 12183  0000EC  EF7A  F000         	goto	i2u498_41
 12184  0000F0  EF7C  F000         	goto	i2u498_40
 12185  0000F4                     i2u498_41:
 12186  0000F4  EF87  F000         	goto	i2l214
 12187  0000F8                     i2u498_40:
 12188  0000F8                     
 12189                           ; BSR set to: 14
 12190  0000F8  A1C9               	btfss	201,0,b	;volatile
 12191  0000FA  EF81  F000         	goto	i2u499_41
 12192  0000FE  EF83  F000         	goto	i2u499_40
 12193  000102                     i2u499_41:
 12194  000102  EF87  F000         	goto	i2l214
 12195  000106                     i2u499_40:
 12196  000106                     
 12197                           ; BSR set to: 14
 12198                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR1_ISR();
 12199  000106  EC14  F095         	call	_TMR1_ISR	;wreg free
 12200                           
 12201                           ;mcc_generated_files/interrupt_manager.c: 82:         }
 12202  00010A  EF87  F000         	goto	i2l220
 12203  00010E                     i2l214:
 12204  00010E                     i2l220:
 12205  00010E  C006  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 12206  000112  C005  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 12207  000116  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 12208  00011A  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 12209  00011E  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12210  000120  0011               	retfie		f
 12211  000122                     __end_of_INTERRUPT_InterruptManager:
 12212                           	callstack 0
 12213                           
 12214 ;; *************** function _TMR1_ISR *****************
 12215 ;; Defined at:
 12216 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 12217 ;; Parameters:    Size  Location     Type
 12218 ;;		None
 12219 ;; Auto vars:     Size  Location     Type
 12220 ;;		None
 12221 ;; Return value:  Size  Location     Type
 12222 ;;                  1    wreg      void 
 12223 ;; Registers used:
 12224 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12225 ;; Tracked objects:
 12226 ;;		On entry : 0/0
 12227 ;;		On exit  : 0/0
 12228 ;;		Unchanged: 0/0
 12229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12234 ;;Total ram usage:        0 bytes
 12235 ;; Hardware stack levels used:    1
 12236 ;; Hardware stack levels required when called:    1
 12237 ;; This function calls:
 12238 ;;		Absolute function
 12239 ;;		_TMR1_DefaultInterruptHandler
 12240 ;;		i2_TMR1_WriteTimer
 12241 ;; This function is called by:
 12242 ;;		_INTERRUPT_InterruptManager
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           	psect	text92
 12247  012A28                     __ptext92:
 12248                           	callstack 0
 12249  012A28                     _TMR1_ISR:
 12250                           	callstack 16
 12251  012A28                     
 12252                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 12253  012A28  010E               	movlb	14	; () banked
 12254  012A2A  91C9               	bcf	201,0,b	;volatile
 12255  012A2C                     
 12256                           ; BSR set to: 14
 12257                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 12258  012A2C  C0FA  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 12259  012A30  C0FB  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 12260  012A34  ECDA  F096         	call	i2_TMR1_WriteTimer	;wreg free
 12261  012A38                     
 12262                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 12263  012A38  0100               	movlb	0	; () banked
 12264  012A3A  51E2               	movf	_TMR1_InterruptHandler& (0+255),w,b
 12265  012A3C  11E3               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 12266  012A3E  11E4               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 12267  012A40  B4D8               	btfsc	status,2,c
 12268  012A42  EF25  F095         	goto	i2u457_41
 12269  012A46  EF27  F095         	goto	i2u457_40
 12270  012A4A                     i2u457_41:
 12271  012A4A  EF34  F095         	goto	i2l720
 12272  012A4E                     i2u457_40:
 12273  012A4E                     
 12274                           ; BSR set to: 0
 12275                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 12276  012A4E  D802               	call	i2u458_48
 12277  012A50  EF34  F095         	goto	i2u458_49
 12278  012A54                     i2u458_48:
 12279  012A54  0005               	push	
 12280  012A56  6EFA               	movwf	pclath,c
 12281  012A58  51E2               	movf	_TMR1_InterruptHandler& (0+255),w,b
 12282  012A5A  6EFD               	movwf	tosl,c
 12283  012A5C  51E3               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 12284  012A5E  6EFE               	movwf	tosh,c
 12285  012A60  51E4               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 12286  012A62  6EFF               	movwf	tosu,c
 12287  012A64  50FA               	movf	pclath,w,c
 12288  012A66  0012               	return		;indir
 12289  012A68                     i2u458_49:
 12290  012A68                     i2l720:
 12291  012A68  0012               	return		;funcret
 12292  012A6A                     __end_of_TMR1_ISR:
 12293                           	callstack 0
 12294                           
 12295 ;; *************** function i2_TMR1_WriteTimer *****************
 12296 ;; Defined at:
 12297 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 12298 ;; Parameters:    Size  Location     Type
 12299 ;;  timerVal        2    0[COMRAM] unsigned short 
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;		None
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  1    wreg      void 
 12304 ;; Registers used:
 12305 ;;		wreg, status,2
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12314 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12315 ;;Total ram usage:        2 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; This function calls:
 12318 ;;		Nothing
 12319 ;; This function is called by:
 12320 ;;		_TMR1_ISR
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text93
 12325  012DB4                     __ptext93:
 12326                           	callstack 0
 12327  012DB4                     i2_TMR1_WriteTimer:
 12328                           	callstack 16
 12329  012DB4                     
 12330                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 12331  012DB4  A4CE               	btfss	206,2,c	;volatile
 12332  012DB6  EFDF  F096         	goto	i2u444_41
 12333  012DBA  EFE1  F096         	goto	i2u444_40
 12334  012DBE                     i2u444_41:
 12335  012DBE  EFE9  F096         	goto	i2l5709
 12336  012DC2                     i2u444_40:
 12337  012DC2                     
 12338                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 12339  012DC2  90CE               	bcf	206,0,c	;volatile
 12340  012DC4                     
 12341                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 12342  012DC4  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
 12343  012DC6  6ECD               	movwf	205,c	;volatile
 12344  012DC8                     
 12345                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 12346  012DC8  C001  FFCC         	movff	i2TMR1_WriteTimer@timerVal,4044	;volatile
 12347  012DCC                     
 12348                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 12349  012DCC  80CE               	bsf	206,0,c	;volatile
 12350                           
 12351                           ;mcc_generated_files/tmr1.c: 140:     }
 12352  012DCE  EFED  F096         	goto	i2l707
 12353  012DD2                     i2l5709:
 12354                           
 12355                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 12356  012DD2  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
 12357  012DD4  6ECD               	movwf	205,c	;volatile
 12358  012DD6                     
 12359                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 12360  012DD6  C001  FFCC         	movff	i2TMR1_WriteTimer@timerVal,4044	;volatile
 12361  012DDA                     i2l707:
 12362  012DDA  0012               	return		;funcret
 12363  012DDC                     __end_ofi2_TMR1_WriteTimer:
 12364                           	callstack 0
 12365                           
 12366 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 12367 ;; Defined at:
 12368 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 12369 ;; Parameters:    Size  Location     Type
 12370 ;;		None
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;		None
 12373 ;; Return value:  Size  Location     Type
 12374 ;;                  1    wreg      void 
 12375 ;; Registers used:
 12376 ;;		None
 12377 ;; Tracked objects:
 12378 ;;		On entry : 0/0
 12379 ;;		On exit  : 0/0
 12380 ;;		Unchanged: 0/0
 12381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12386 ;;Total ram usage:        0 bytes
 12387 ;; Hardware stack levels used:    1
 12388 ;; This function calls:
 12389 ;;		Nothing
 12390 ;; This function is called by:
 12391 ;;		_TMR1_Initialize
 12392 ;;		_TMR1_ISR
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           	psect	text94
 12397  013064                     __ptext94:
 12398                           	callstack 0
 12399  013064                     _TMR1_DefaultInterruptHandler:
 12400                           	callstack 16
 12401  013064  0012               	return		;funcret
 12402  013066                     __end_of_TMR1_DefaultInterruptHandler:
 12403                           	callstack 0
 12404                           
 12405 ;; *************** function _TMR0_ISR *****************
 12406 ;; Defined at:
 12407 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 12408 ;; Parameters:    Size  Location     Type
 12409 ;;		None
 12410 ;; Auto vars:     Size  Location     Type
 12411 ;;		None
 12412 ;; Return value:  Size  Location     Type
 12413 ;;                  1    wreg      void 
 12414 ;; Registers used:
 12415 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12416 ;; Tracked objects:
 12417 ;;		On entry : 0/0
 12418 ;;		On exit  : 0/0
 12419 ;;		Unchanged: 0/0
 12420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12425 ;;Total ram usage:        0 bytes
 12426 ;; Hardware stack levels used:    1
 12427 ;; Hardware stack levels required when called:    1
 12428 ;; This function calls:
 12429 ;;		Absolute function
 12430 ;;		_TMR0_DefaultInterruptHandler
 12431 ;;		_TMR0_UserInterruptHandler
 12432 ;; This function is called by:
 12433 ;;		_INTERRUPT_InterruptManager
 12434 ;; This function uses a non-reentrant model
 12435 ;;
 12436                           
 12437                           	psect	text95
 12438  012BC4                     __ptext95:
 12439                           	callstack 0
 12440  012BC4                     _TMR0_ISR:
 12441                           	callstack 16
 12442  012BC4                     
 12443                           ;mcc_generated_files/tmr0.c: 125:     PIR0bits.TMR0IF = 0;
 12444  012BC4  010E               	movlb	14	; () banked
 12445  012BC6  9BC5               	bcf	197,5,b	;volatile
 12446  012BC8                     
 12447                           ; BSR set to: 14
 12448                           ;mcc_generated_files/tmr0.c: 126:     if(TMR0_InterruptHandler)
 12449  012BC8  0100               	movlb	0	; () banked
 12450  012BCA  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 12451  012BCC  11E6               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 12452  012BCE  11E7               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 12453  012BD0  B4D8               	btfsc	status,2,c
 12454  012BD2  EFED  F095         	goto	i2u453_41
 12455  012BD6  EFEF  F095         	goto	i2u453_40
 12456  012BDA                     i2u453_41:
 12457  012BDA  EFFC  F095         	goto	i2l656
 12458  012BDE                     i2u453_40:
 12459  012BDE                     
 12460                           ; BSR set to: 0
 12461                           ;mcc_generated_files/tmr0.c: 127:     {;mcc_generated_files/tmr0.c: 128:         TMR0_In
      +                          terruptHandler();
 12462  012BDE  D802               	call	i2u454_48
 12463  012BE0  EFFC  F095         	goto	i2u454_49
 12464  012BE4                     i2u454_48:
 12465  012BE4  0005               	push	
 12466  012BE6  6EFA               	movwf	pclath,c
 12467  012BE8  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 12468  012BEA  6EFD               	movwf	tosl,c
 12469  012BEC  51E6               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 12470  012BEE  6EFE               	movwf	tosh,c
 12471  012BF0  51E7               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 12472  012BF2  6EFF               	movwf	tosu,c
 12473  012BF4  50FA               	movf	pclath,w,c
 12474  012BF6  0012               	return		;indir
 12475  012BF8                     i2u454_49:
 12476  012BF8                     i2l656:
 12477  012BF8  0012               	return		;funcret
 12478  012BFA                     __end_of_TMR0_ISR:
 12479                           	callstack 0
 12480                           
 12481 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 12482 ;; Defined at:
 12483 ;;		line 139 in file "mcc_generated_files/tmr0.c"
 12484 ;; Parameters:    Size  Location     Type
 12485 ;;		None
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;		None
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  1    wreg      void 
 12490 ;; Registers used:
 12491 ;;		None
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/0
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12501 ;;Total ram usage:        0 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; This function calls:
 12504 ;;		Nothing
 12505 ;; This function is called by:
 12506 ;;		_TMR0_Initialize
 12507 ;;		_TMR0_ISR
 12508 ;; This function uses a non-reentrant model
 12509 ;;
 12510                           
 12511                           	psect	text96
 12512  013066                     __ptext96:
 12513                           	callstack 0
 12514  013066                     _TMR0_DefaultInterruptHandler:
 12515                           	callstack 16
 12516  013066  0012               	return		;funcret
 12517  013068                     __end_of_TMR0_DefaultInterruptHandler:
 12518                           	callstack 0
 12519                           
 12520 ;; *************** function _TMR0_UserInterruptHandler *****************
 12521 ;; Defined at:
 12522 ;;		line 435 in file "application.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;		None
 12525 ;; Auto vars:     Size  Location     Type
 12526 ;;		None
 12527 ;; Return value:  Size  Location     Type
 12528 ;;                  1    wreg      void 
 12529 ;; Registers used:
 12530 ;;		wreg, status,2
 12531 ;; Tracked objects:
 12532 ;;		On entry : 0/0
 12533 ;;		On exit  : 0/0
 12534 ;;		Unchanged: 0/0
 12535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12540 ;;Total ram usage:        0 bytes
 12541 ;; Hardware stack levels used:    1
 12542 ;; This function calls:
 12543 ;;		Nothing
 12544 ;; This function is called by:
 12545 ;;		_main
 12546 ;;		_TMR0_ISR
 12547 ;; This function uses a non-reentrant model
 12548 ;;
 12549                           
 12550                           	psect	text97
 12551  013030                     __ptext97:
 12552                           	callstack 0
 12553  013030                     _TMR0_UserInterruptHandler:
 12554                           	callstack 16
 12555  013030                     
 12556                           ;application.c: 438:      tmr0InterruptFlag = 1;
 12557  013030  0E01               	movlw	1
 12558  013032  0100               	movlb	0	; () banked
 12559  013034  6F85               	movwf	_tmr0InterruptFlag& (0+255),b	;volatile
 12560  013036                     
 12561                           ; BSR set to: 0
 12562  013036  0012               	return		;funcret
 12563  013038                     __end_of_TMR0_UserInterruptHandler:
 12564                           	callstack 0
 12565                           
 12566 ;; *************** function _EUSART1_Transmit_ISR *****************
 12567 ;; Defined at:
 12568 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;		None
 12571 ;; Auto vars:     Size  Location     Type
 12572 ;;		None
 12573 ;; Return value:  Size  Location     Type
 12574 ;;                  1    wreg      void 
 12575 ;; Registers used:
 12576 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12577 ;; Tracked objects:
 12578 ;;		On entry : 0/0
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12586 ;;Total ram usage:        0 bytes
 12587 ;; Hardware stack levels used:    1
 12588 ;; This function calls:
 12589 ;;		Nothing
 12590 ;; This function is called by:
 12591 ;;		_EUSART1_Initialize
 12592 ;;		_INTERRUPT_InterruptManager
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text98
 12597  01291E                     __ptext98:
 12598                           	callstack 0
 12599  01291E                     _EUSART1_Transmit_ISR:
 12600                           	callstack 17
 12601  01291E                     
 12602                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 12603  01291E  0E08               	movlw	8
 12604  012920  0100               	movlb	0	; () banked
 12605  012922  61FC               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 12606  012924  EF96  F094         	goto	i2u445_41
 12607  012928  EF98  F094         	goto	i2u445_40
 12608  01292C                     i2u445_41:
 12609  01292C  EFAE  F094         	goto	i2l134
 12610  012930                     i2u445_40:
 12611  012930                     
 12612                           ; BSR set to: 0
 12613                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 12614  012930  0E70               	movlw	low _eusart1TxBuffer
 12615  012932  2457               	addwf	_eusart1TxTail^0,w,c	;volatile
 12616  012934  6ED9               	movwf	fsr2l,c
 12617  012936  6ADA               	clrf	fsr2h,c
 12618  012938  0E00               	movlw	high _eusart1TxBuffer
 12619  01293A  22DA               	addwfc	fsr2h,f,c
 12620  01293C  50DF               	movf	indf2,w,c
 12621  01293E  6E99               	movwf	153,c	;volatile
 12622  012940                     
 12623                           ; BSR set to: 0
 12624  012940  2A57               	incf	_eusart1TxTail^0,f,c	;volatile
 12625  012942                     
 12626                           ; BSR set to: 0
 12627                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 12628  012942  0E07               	movlw	7
 12629  012944  6457               	cpfsgt	_eusart1TxTail^0,c	;volatile
 12630  012946  EFA7  F094         	goto	i2u446_41
 12631  01294A  EFA9  F094         	goto	i2u446_40
 12632  01294E                     i2u446_41:
 12633  01294E  EFAB  F094         	goto	i2l5723
 12634  012952                     i2u446_40:
 12635  012952                     
 12636                           ; BSR set to: 0
 12637                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 12638  012952  0E00               	movlw	0
 12639  012954  6E57               	movwf	_eusart1TxTail^0,c	;volatile
 12640  012956                     i2l5723:
 12641                           
 12642                           ; BSR set to: 0
 12643                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 12644  012956  2BFC               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 12645                           
 12646                           ;mcc_generated_files/eusart1.c: 218:     }
 12647  012958  EFB0  F094         	goto	i2l137
 12648  01295C                     i2l134:
 12649                           
 12650                           ; BSR set to: 0
 12651                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 12652  01295C  010E               	movlb	14	; () banked
 12653  01295E  99C0               	bcf	192,4,b	;volatile
 12654  012960                     i2l137:
 12655  012960  0012               	return		;funcret
 12656  012962                     __end_of_EUSART1_Transmit_ISR:
 12657                           	callstack 0
 12658                           
 12659 ;; *************** function _EUSART1_Receive_ISR *****************
 12660 ;; Defined at:
 12661 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;		None
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;		None
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  1    wreg      void 
 12668 ;; Registers used:
 12669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12670 ;; Tracked objects:
 12671 ;;		On entry : 0/0
 12672 ;;		On exit  : 0/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12679 ;;Total ram usage:        0 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; Hardware stack levels required when called:    2
 12682 ;; This function calls:
 12683 ;;		Absolute function
 12684 ;;		_EUSART1_DefaultErrorHandler
 12685 ;;		_EUSART1_DefaultFramingErrorHandler
 12686 ;;		_EUSART1_DefaultOverrunErrorHandler
 12687 ;;		_EUSART1_RxDataHandler
 12688 ;; This function is called by:
 12689 ;;		_EUSART1_Initialize
 12690 ;;		_INTERRUPT_InterruptManager
 12691 ;; This function uses a non-reentrant model
 12692 ;;
 12693                           
 12694                           	psect	text99
 12695  011E6A                     __ptext99:
 12696                           	callstack 0
 12697  011E6A                     _EUSART1_Receive_ISR:
 12698                           	callstack 15
 12699  011E6A                     
 12700                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 12701  011E6A  0E60               	movlw	low _eusart1RxStatusBuffer
 12702  011E6C  2456               	addwf	_eusart1RxHead^0,w,c	;volatile
 12703  011E6E  6ED9               	movwf	fsr2l,c
 12704  011E70  6ADA               	clrf	fsr2h,c
 12705  011E72  0E00               	movlw	high _eusart1RxStatusBuffer
 12706  011E74  22DA               	addwfc	fsr2h,f,c
 12707  011E76  0E00               	movlw	0
 12708  011E78  6EDF               	movwf	indf2,c
 12709  011E7A                     
 12710                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 12711  011E7A  A49C               	btfss	156,2,c	;volatile
 12712  011E7C  EF42  F08F         	goto	i2u447_41
 12713  011E80  EF44  F08F         	goto	i2u447_40
 12714  011E84                     i2u447_41:
 12715  011E84  EF59  F08F         	goto	i2l5733
 12716  011E88                     i2u447_40:
 12717  011E88                     
 12718                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 12719  011E88  0E60               	movlw	low _eusart1RxStatusBuffer
 12720  011E8A  2456               	addwf	_eusart1RxHead^0,w,c	;volatile
 12721  011E8C  6ED9               	movwf	fsr2l,c
 12722  011E8E  6ADA               	clrf	fsr2h,c
 12723  011E90  0E00               	movlw	high _eusart1RxStatusBuffer
 12724  011E92  22DA               	addwfc	fsr2h,f,c
 12725  011E94  0100               	movlb	0	; () banked
 12726  011E96  82DF               	bsf	indf2,1,c
 12727  011E98                     
 12728                           ; BSR set to: 0
 12729                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 12730  011E98  D802               	call	i2u448_48
 12731  011E9A  EF59  F08F         	goto	i2u448_49
 12732  011E9E                     i2u448_48:
 12733  011E9E  0005               	push	
 12734  011EA0  6EFA               	movwf	pclath,c
 12735  011EA2  51F1               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 12736  011EA4  6EFD               	movwf	tosl,c
 12737  011EA6  51F2               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 12738  011EA8  6EFE               	movwf	tosh,c
 12739  011EAA  51F3               	movf	(_EUSART1_FramingErrorHandler+2)& (0+255),w,b
 12740  011EAC  6EFF               	movwf	tosu,c
 12741  011EAE  50FA               	movf	pclath,w,c
 12742  011EB0  0012               	return		;indir
 12743  011EB2                     i2u448_49:
 12744  011EB2                     i2l5733:
 12745                           
 12746                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 12747  011EB2  A29C               	btfss	156,1,c	;volatile
 12748  011EB4  EF5E  F08F         	goto	i2u449_41
 12749  011EB8  EF60  F08F         	goto	i2u449_40
 12750  011EBC                     i2u449_41:
 12751  011EBC  EF75  F08F         	goto	i2l5739
 12752  011EC0                     i2u449_40:
 12753  011EC0                     
 12754                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 12755  011EC0  0E60               	movlw	low _eusart1RxStatusBuffer
 12756  011EC2  2456               	addwf	_eusart1RxHead^0,w,c	;volatile
 12757  011EC4  6ED9               	movwf	fsr2l,c
 12758  011EC6  6ADA               	clrf	fsr2h,c
 12759  011EC8  0E00               	movlw	high _eusart1RxStatusBuffer
 12760  011ECA  22DA               	addwfc	fsr2h,f,c
 12761  011ECC  0100               	movlb	0	; () banked
 12762  011ECE  84DF               	bsf	indf2,2,c
 12763  011ED0                     
 12764                           ; BSR set to: 0
 12765                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 12766  011ED0  D802               	call	i2u450_48
 12767  011ED2  EF75  F08F         	goto	i2u450_49
 12768  011ED6                     i2u450_48:
 12769  011ED6  0005               	push	
 12770  011ED8  6EFA               	movwf	pclath,c
 12771  011EDA  51EE               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 12772  011EDC  6EFD               	movwf	tosl,c
 12773  011EDE  51EF               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 12774  011EE0  6EFE               	movwf	tosh,c
 12775  011EE2  51F0               	movf	(_EUSART1_OverrunErrorHandler+2)& (0+255),w,b
 12776  011EE4  6EFF               	movwf	tosu,c
 12777  011EE6  50FA               	movf	pclath,w,c
 12778  011EE8  0012               	return		;indir
 12779  011EEA                     i2u450_49:
 12780  011EEA                     i2l5739:
 12781                           
 12782                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 12783  011EEA  0E60               	movlw	low _eusart1RxStatusBuffer
 12784  011EEC  2456               	addwf	_eusart1RxHead^0,w,c	;volatile
 12785  011EEE  6ED9               	movwf	fsr2l,c
 12786  011EF0  6ADA               	clrf	fsr2h,c
 12787  011EF2  0E00               	movlw	high _eusart1RxStatusBuffer
 12788  011EF4  22DA               	addwfc	fsr2h,f,c
 12789  011EF6  50DF               	movf	indf2,w,c
 12790  011EF8  B4D8               	btfsc	status,2,c
 12791  011EFA  EF81  F08F         	goto	i2u451_41
 12792  011EFE  EF83  F08F         	goto	i2u451_40
 12793  011F02                     i2u451_41:
 12794  011F02  EF93  F08F         	goto	i2l5743
 12795  011F06                     i2u451_40:
 12796  011F06                     
 12797                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 12798  011F06  D802               	call	i2u452_48
 12799  011F08  EF91  F08F         	goto	i2u452_49
 12800  011F0C                     i2u452_48:
 12801  011F0C  0005               	push	
 12802  011F0E  6EFA               	movwf	pclath,c
 12803  011F10  0100               	movlb	0	; () banked
 12804  011F12  51EB               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 12805  011F14  6EFD               	movwf	tosl,c
 12806  011F16  51EC               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 12807  011F18  6EFE               	movwf	tosh,c
 12808  011F1A  51ED               	movf	(_EUSART1_ErrorHandler+2)& (0+255),w,b
 12809  011F1C  6EFF               	movwf	tosu,c
 12810  011F1E  50FA               	movf	pclath,w,c
 12811  011F20  0012               	return		;indir
 12812  011F22                     i2u452_49:
 12813                           
 12814                           ;mcc_generated_files/eusart1.c: 242:     } else {
 12815  011F22  EF95  F08F         	goto	i2l144
 12816  011F26                     i2l5743:
 12817                           
 12818                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 12819  011F26  EC48  F096         	call	_EUSART1_RxDataHandler	;wreg free
 12820  011F2A                     i2l144:
 12821  011F2A  0012               	return		;funcret
 12822  011F2C                     __end_of_EUSART1_Receive_ISR:
 12823                           	callstack 0
 12824                           
 12825 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 12826 ;; Defined at:
 12827 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 12828 ;; Parameters:    Size  Location     Type
 12829 ;;		None
 12830 ;; Auto vars:     Size  Location     Type
 12831 ;;		None
 12832 ;; Return value:  Size  Location     Type
 12833 ;;                  1    wreg      void 
 12834 ;; Registers used:
 12835 ;;		None
 12836 ;; Tracked objects:
 12837 ;;		On entry : 0/0
 12838 ;;		On exit  : 0/0
 12839 ;;		Unchanged: 0/0
 12840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12845 ;;Total ram usage:        0 bytes
 12846 ;; Hardware stack levels used:    1
 12847 ;; This function calls:
 12848 ;;		Nothing
 12849 ;; This function is called by:
 12850 ;;		_EUSART1_Initialize
 12851 ;;		_EUSART1_Receive_ISR
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855                           	psect	text100
 12856  013040                     __ptext100:
 12857                           	callstack 0
 12858  013040                     _EUSART1_DefaultOverrunErrorHandler:
 12859                           	callstack 16
 12860  013040                     
 12861                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 12862  013040  989C               	bcf	156,4,c	;volatile
 12863                           
 12864                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 12865  013042  889C               	bsf	156,4,c	;volatile
 12866  013044  0012               	return		;funcret
 12867  013046                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 12868                           	callstack 0
 12869                           
 12870 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 12871 ;; Defined at:
 12872 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 12873 ;; Parameters:    Size  Location     Type
 12874 ;;		None
 12875 ;; Auto vars:     Size  Location     Type
 12876 ;;		None
 12877 ;; Return value:  Size  Location     Type
 12878 ;;                  1    wreg      void 
 12879 ;; Registers used:
 12880 ;;		None
 12881 ;; Tracked objects:
 12882 ;;		On entry : 0/0
 12883 ;;		On exit  : 0/0
 12884 ;;		Unchanged: 0/0
 12885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12890 ;;Total ram usage:        0 bytes
 12891 ;; Hardware stack levels used:    1
 12892 ;; This function calls:
 12893 ;;		Nothing
 12894 ;; This function is called by:
 12895 ;;		_EUSART1_Initialize
 12896 ;;		_EUSART1_Receive_ISR
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           
 12900                           	psect	text101
 12901  013068                     __ptext101:
 12902                           	callstack 0
 12903  013068                     _EUSART1_DefaultFramingErrorHandler:
 12904                           	callstack 16
 12905  013068  0012               	return		;funcret
 12906  01306A                     __end_of_EUSART1_DefaultFramingErrorHandler:
 12907                           	callstack 0
 12908                           
 12909 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 12910 ;; Defined at:
 12911 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 12912 ;; Parameters:    Size  Location     Type
 12913 ;;		None
 12914 ;; Auto vars:     Size  Location     Type
 12915 ;;		None
 12916 ;; Return value:  Size  Location     Type
 12917 ;;                  1    wreg      void 
 12918 ;; Registers used:
 12919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12920 ;; Tracked objects:
 12921 ;;		On entry : 0/0
 12922 ;;		On exit  : 0/0
 12923 ;;		Unchanged: 0/0
 12924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12929 ;;Total ram usage:        0 bytes
 12930 ;; Hardware stack levels used:    1
 12931 ;; Hardware stack levels required when called:    1
 12932 ;; This function calls:
 12933 ;;		_EUSART1_RxDataHandler
 12934 ;; This function is called by:
 12935 ;;		_EUSART1_Initialize
 12936 ;;		_EUSART1_Receive_ISR
 12937 ;; This function uses a non-reentrant model
 12938 ;;
 12939                           
 12940                           	psect	text102
 12941  013046                     __ptext102:
 12942                           	callstack 0
 12943  013046                     _EUSART1_DefaultErrorHandler:
 12944                           	callstack 15
 12945  013046                     
 12946                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 12947  013046  EC48  F096         	call	_EUSART1_RxDataHandler	;wreg free
 12948  01304A  0012               	return		;funcret
 12949  01304C                     __end_of_EUSART1_DefaultErrorHandler:
 12950                           	callstack 0
 12951                           
 12952 ;; *************** function _EUSART1_RxDataHandler *****************
 12953 ;; Defined at:
 12954 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 12955 ;; Parameters:    Size  Location     Type
 12956 ;;		None
 12957 ;; Auto vars:     Size  Location     Type
 12958 ;;		None
 12959 ;; Return value:  Size  Location     Type
 12960 ;;                  1    wreg      void 
 12961 ;; Registers used:
 12962 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12963 ;; Tracked objects:
 12964 ;;		On entry : 0/0
 12965 ;;		On exit  : 0/0
 12966 ;;		Unchanged: 0/0
 12967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 12968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12972 ;;Total ram usage:        0 bytes
 12973 ;; Hardware stack levels used:    1
 12974 ;; This function calls:
 12975 ;;		Nothing
 12976 ;; This function is called by:
 12977 ;;		_EUSART1_Receive_ISR
 12978 ;;		_EUSART1_DefaultErrorHandler
 12979 ;; This function uses a non-reentrant model
 12980 ;;
 12981                           
 12982                           	psect	text103
 12983  012C90                     __ptext103:
 12984                           	callstack 0
 12985  012C90                     _EUSART1_RxDataHandler:
 12986                           	callstack 16
 12987  012C90                     
 12988                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 12989  012C90  0E68               	movlw	low _eusart1RxBuffer
 12990  012C92  2456               	addwf	_eusart1RxHead^0,w,c	;volatile
 12991  012C94  6ED9               	movwf	fsr2l,c
 12992  012C96  6ADA               	clrf	fsr2h,c
 12993  012C98  0E00               	movlw	high _eusart1RxBuffer
 12994  012C9A  22DA               	addwfc	fsr2h,f,c
 12995  012C9C  CF98 FFDF          	movff	3992,indf2	;volatile
 12996  012CA0  2A56               	incf	_eusart1RxHead^0,f,c	;volatile
 12997  012CA2                     
 12998                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 12999  012CA2  0E07               	movlw	7
 13000  012CA4  6456               	cpfsgt	_eusart1RxHead^0,c	;volatile
 13001  012CA6  EF57  F096         	goto	i2u346_41
 13002  012CAA  EF59  F096         	goto	i2u346_40
 13003  012CAE                     i2u346_41:
 13004  012CAE  EF5B  F096         	goto	i2l4845
 13005  012CB2                     i2u346_40:
 13006  012CB2                     
 13007                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 13008  012CB2  0E00               	movlw	0
 13009  012CB4  6E56               	movwf	_eusart1RxHead^0,c	;volatile
 13010  012CB6                     i2l4845:
 13011                           
 13012                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 13013  012CB6  0100               	movlb	0	; () banked
 13014  012CB8  2B8B               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 13015  012CBA                     
 13016                           ; BSR set to: 0
 13017  012CBA  0012               	return		;funcret
 13018  012CBC                     __end_of_EUSART1_RxDataHandler:
 13019                           	callstack 0
 13020                           
 13021 ;; *************** function _ADCC_ThresholdISR *****************
 13022 ;; Defined at:
 13023 ;;		line 300 in file "mcc_generated_files/adcc.c"
 13024 ;; Parameters:    Size  Location     Type
 13025 ;;		None
 13026 ;; Auto vars:     Size  Location     Type
 13027 ;;		None
 13028 ;; Return value:  Size  Location     Type
 13029 ;;                  1    wreg      void 
 13030 ;; Registers used:
 13031 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13032 ;; Tracked objects:
 13033 ;;		On entry : 0/0
 13034 ;;		On exit  : 0/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 13037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13041 ;;Total ram usage:        0 bytes
 13042 ;; Hardware stack levels used:    1
 13043 ;; Hardware stack levels required when called:    1
 13044 ;; This function calls:
 13045 ;;		Absolute function
 13046 ;;		_ADCC_DefaultInterruptHandler
 13047 ;;		_ADCC_UserInterruptHandler
 13048 ;; This function is called by:
 13049 ;;		_INTERRUPT_InterruptManager
 13050 ;; This function uses a non-reentrant model
 13051 ;;
 13052                           
 13053                           	psect	text104
 13054  012BFA                     __ptext104:
 13055                           	callstack 0
 13056  012BFA                     _ADCC_ThresholdISR:
 13057                           	callstack 16
 13058  012BFA                     
 13059                           ;mcc_generated_files/adcc.c: 303:     PIR1bits.ADTIF = 0;
 13060  012BFA  010E               	movlb	14	; () banked
 13061  012BFC  93C6               	bcf	198,1,b	;volatile
 13062  012BFE                     
 13063                           ; BSR set to: 14
 13064                           ;mcc_generated_files/adcc.c: 305:     if (ADCC_ADTI_InterruptHandler)
 13065  012BFE  0100               	movlb	0	; () banked
 13066  012C00  51E8               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 13067  012C02  11E9               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 13068  012C04  11EA               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 13069  012C06  B4D8               	btfsc	status,2,c
 13070  012C08  EF08  F096         	goto	i2u455_41
 13071  012C0C  EF0A  F096         	goto	i2u455_40
 13072  012C10                     i2u455_41:
 13073  012C10  EF17  F096         	goto	i2l608
 13074  012C14                     i2u455_40:
 13075  012C14                     
 13076                           ; BSR set to: 0
 13077                           ;mcc_generated_files/adcc.c: 306:         ADCC_ADTI_InterruptHandler();
 13078  012C14  D802               	call	i2u456_48
 13079  012C16  EF17  F096         	goto	i2u456_49
 13080  012C1A                     i2u456_48:
 13081  012C1A  0005               	push	
 13082  012C1C  6EFA               	movwf	pclath,c
 13083  012C1E  51E8               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 13084  012C20  6EFD               	movwf	tosl,c
 13085  012C22  51E9               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 13086  012C24  6EFE               	movwf	tosh,c
 13087  012C26  51EA               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 13088  012C28  6EFF               	movwf	tosu,c
 13089  012C2A  50FA               	movf	pclath,w,c
 13090  012C2C  0012               	return		;indir
 13091  012C2E                     i2u456_49:
 13092  012C2E                     i2l608:
 13093  012C2E  0012               	return		;funcret
 13094  012C30                     __end_of_ADCC_ThresholdISR:
 13095                           	callstack 0
 13096                           
 13097 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13098 ;; Defined at:
 13099 ;;		line 312 in file "mcc_generated_files/adcc.c"
 13100 ;; Parameters:    Size  Location     Type
 13101 ;;		None
 13102 ;; Auto vars:     Size  Location     Type
 13103 ;;		None
 13104 ;; Return value:  Size  Location     Type
 13105 ;;                  1    wreg      void 
 13106 ;; Registers used:
 13107 ;;		None
 13108 ;; Tracked objects:
 13109 ;;		On entry : 0/0
 13110 ;;		On exit  : 0/0
 13111 ;;		Unchanged: 0/0
 13112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 13113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13117 ;;Total ram usage:        0 bytes
 13118 ;; Hardware stack levels used:    1
 13119 ;; This function calls:
 13120 ;;		Nothing
 13121 ;; This function is called by:
 13122 ;;		_ADCC_Initialize
 13123 ;;		_ADCC_ThresholdISR
 13124 ;; This function uses a non-reentrant model
 13125 ;;
 13126                           
 13127                           	psect	text105
 13128  01306A                     __ptext105:
 13129                           	callstack 0
 13130  01306A                     _ADCC_DefaultInterruptHandler:
 13131                           	callstack 16
 13132  01306A  0012               	return		;funcret
 13133  01306C                     __end_of_ADCC_DefaultInterruptHandler:
 13134                           	callstack 0
 13135                           
 13136 ;; *************** function _ADCC_UserInterruptHandler *****************
 13137 ;; Defined at:
 13138 ;;		line 441 in file "application.c"
 13139 ;; Parameters:    Size  Location     Type
 13140 ;;		None
 13141 ;; Auto vars:     Size  Location     Type
 13142 ;;		None
 13143 ;; Return value:  Size  Location     Type
 13144 ;;                  1    wreg      void 
 13145 ;; Registers used:
 13146 ;;		wreg, status,2
 13147 ;; Tracked objects:
 13148 ;;		On entry : 0/0
 13149 ;;		On exit  : 0/0
 13150 ;;		Unchanged: 0/0
 13151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
 13152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13156 ;;Total ram usage:        0 bytes
 13157 ;; Hardware stack levels used:    1
 13158 ;; This function calls:
 13159 ;;		Nothing
 13160 ;; This function is called by:
 13161 ;;		_main
 13162 ;;		_ADCC_ThresholdISR
 13163 ;; This function uses a non-reentrant model
 13164 ;;
 13165                           
 13166                           	psect	text106
 13167  013038                     __ptext106:
 13168                           	callstack 0
 13169  013038                     _ADCC_UserInterruptHandler:
 13170                           	callstack 16
 13171  013038                     
 13172                           ;application.c: 444:      adcReadyFlag = 1;
 13173  013038  0E01               	movlw	1
 13174  01303A  0100               	movlb	0	; () banked
 13175  01303C  6F88               	movwf	_adcReadyFlag& (0+255),b	;volatile
 13176  01303E                     
 13177                           ; BSR set to: 0
 13178  01303E  0012               	return		;funcret
 13179  013040                     __end_of_ADCC_UserInterruptHandler:
 13180                           	callstack 0
 13181                           
 13182                           	psect	text107
 13183  000000                     __ptext107:
 13184                           	callstack 0
 13185  000000                     
 13186                           	psect	rparam
 13187  0000                     
 13188                           	psect	temp
 13189  000059                     btemp:
 13190                           	callstack 0
 13191  000059                     	ds	1
 13192  0000                     int$flags	set	btemp
 13193  0000                     wtemp8	set	btemp+1
 13194  0000                     ttemp5	set	btemp+1
 13195  0000                     ttemp6	set	btemp+4
 13196  0000                     ttemp7	set	btemp+8
 13197                           
 13198                           	psect	idloc
 13199                           
 13200                           ;Config register IDLOC0 @ 0x200000
 13201                           ;	unspecified, using default values
 13202  200000                     	org	2097152
 13203  200000  FFFF               	dw	65535
 13204                           
 13205                           ;Config register IDLOC1 @ 0x200002
 13206                           ;	unspecified, using default values
 13207  200002                     	org	2097154
 13208  200002  FFFF               	dw	65535
 13209                           
 13210                           ;Config register IDLOC2 @ 0x200004
 13211                           ;	unspecified, using default values
 13212  200004                     	org	2097156
 13213  200004  FFFF               	dw	65535
 13214                           
 13215                           ;Config register IDLOC3 @ 0x200006
 13216                           ;	unspecified, using default values
 13217  200006                     	org	2097158
 13218  200006  FFFF               	dw	65535
 13219                           
 13220                           ;Config register IDLOC4 @ 0x200008
 13221                           ;	unspecified, using default values
 13222  200008                     	org	2097160
 13223  200008  FFFF               	dw	65535
 13224                           
 13225                           ;Config register IDLOC5 @ 0x20000A
 13226                           ;	unspecified, using default values
 13227  20000A                     	org	2097162
 13228  20000A  FFFF               	dw	65535
 13229                           
 13230                           ;Config register IDLOC6 @ 0x20000C
 13231                           ;	unspecified, using default values
 13232  20000C                     	org	2097164
 13233  20000C  FFFF               	dw	65535
 13234                           
 13235                           ;Config register IDLOC7 @ 0x20000E
 13236                           ;	unspecified, using default values
 13237  20000E                     	org	2097166
 13238  20000E  FFFF               	dw	65535
 13239                           
 13240                           ;Config register IDLOC8 @ 0x200010
 13241                           ;	unspecified, using default values
 13242  200010                     	org	2097168
 13243  200010  FFFF               	dw	65535
 13244                           
 13245                           ;Config register IDLOC9 @ 0x200012
 13246                           ;	unspecified, using default values
 13247  200012                     	org	2097170
 13248  200012  FFFF               	dw	65535
 13249                           
 13250                           ;Config register IDLOC10 @ 0x200014
 13251                           ;	unspecified, using default values
 13252  200014                     	org	2097172
 13253  200014  FFFF               	dw	65535
 13254                           
 13255                           ;Config register IDLOC11 @ 0x200016
 13256                           ;	unspecified, using default values
 13257  200016                     	org	2097174
 13258  200016  FFFF               	dw	65535
 13259                           
 13260                           ;Config register IDLOC12 @ 0x200018
 13261                           ;	unspecified, using default values
 13262  200018                     	org	2097176
 13263  200018  FFFF               	dw	65535
 13264                           
 13265                           ;Config register IDLOC13 @ 0x20001A
 13266                           ;	unspecified, using default values
 13267  20001A                     	org	2097178
 13268  20001A  FFFF               	dw	65535
 13269                           
 13270                           ;Config register IDLOC14 @ 0x20001C
 13271                           ;	unspecified, using default values
 13272  20001C                     	org	2097180
 13273  20001C  FFFF               	dw	65535
 13274                           
 13275                           ;Config register IDLOC15 @ 0x20001E
 13276                           ;	unspecified, using default values
 13277  20001E                     	org	2097182
 13278  20001E  FFFF               	dw	65535
 13279                           
 13280                           ;Config register IDLOC16 @ 0x200020
 13281                           ;	unspecified, using default values
 13282  200020                     	org	2097184
 13283  200020  FFFF               	dw	65535
 13284                           
 13285                           ;Config register IDLOC17 @ 0x200022
 13286                           ;	unspecified, using default values
 13287  200022                     	org	2097186
 13288  200022  FFFF               	dw	65535
 13289                           
 13290                           ;Config register IDLOC18 @ 0x200024
 13291                           ;	unspecified, using default values
 13292  200024                     	org	2097188
 13293  200024  FFFF               	dw	65535
 13294                           
 13295                           ;Config register IDLOC19 @ 0x200026
 13296                           ;	unspecified, using default values
 13297  200026                     	org	2097190
 13298  200026  FFFF               	dw	65535
 13299                           
 13300                           ;Config register IDLOC20 @ 0x200028
 13301                           ;	unspecified, using default values
 13302  200028                     	org	2097192
 13303  200028  FFFF               	dw	65535
 13304                           
 13305                           ;Config register IDLOC21 @ 0x20002A
 13306                           ;	unspecified, using default values
 13307  20002A                     	org	2097194
 13308  20002A  FFFF               	dw	65535
 13309                           
 13310                           ;Config register IDLOC22 @ 0x20002C
 13311                           ;	unspecified, using default values
 13312  20002C                     	org	2097196
 13313  20002C  FFFF               	dw	65535
 13314                           
 13315                           ;Config register IDLOC23 @ 0x20002E
 13316                           ;	unspecified, using default values
 13317  20002E                     	org	2097198
 13318  20002E  FFFF               	dw	65535
 13319                           
 13320                           ;Config register IDLOC24 @ 0x200030
 13321                           ;	unspecified, using default values
 13322  200030                     	org	2097200
 13323  200030  FFFF               	dw	65535
 13324                           
 13325                           ;Config register IDLOC25 @ 0x200032
 13326                           ;	unspecified, using default values
 13327  200032                     	org	2097202
 13328  200032  FFFF               	dw	65535
 13329                           
 13330                           ;Config register IDLOC26 @ 0x200034
 13331                           ;	unspecified, using default values
 13332  200034                     	org	2097204
 13333  200034  FFFF               	dw	65535
 13334                           
 13335                           ;Config register IDLOC27 @ 0x200036
 13336                           ;	unspecified, using default values
 13337  200036                     	org	2097206
 13338  200036  FFFF               	dw	65535
 13339                           
 13340                           ;Config register IDLOC28 @ 0x200038
 13341                           ;	unspecified, using default values
 13342  200038                     	org	2097208
 13343  200038  FFFF               	dw	65535
 13344                           
 13345                           ;Config register IDLOC29 @ 0x20003A
 13346                           ;	unspecified, using default values
 13347  20003A                     	org	2097210
 13348  20003A  FFFF               	dw	65535
 13349                           
 13350                           ;Config register IDLOC30 @ 0x20003C
 13351                           ;	unspecified, using default values
 13352  20003C                     	org	2097212
 13353  20003C  FFFF               	dw	65535
 13354                           
 13355                           ;Config register IDLOC31 @ 0x20003E
 13356                           ;	unspecified, using default values
 13357  20003E                     	org	2097214
 13358  20003E  FFFF               	dw	65535
 13359                           
 13360                           ;Config register IDLOC32 @ 0x200040
 13361                           ;	unspecified, using default values
 13362  200040                     	org	2097216
 13363  200040  FFFF               	dw	65535
 13364                           
 13365                           ;Config register IDLOC33 @ 0x200042
 13366                           ;	unspecified, using default values
 13367  200042                     	org	2097218
 13368  200042  FFFF               	dw	65535
 13369                           
 13370                           ;Config register IDLOC34 @ 0x200044
 13371                           ;	unspecified, using default values
 13372  200044                     	org	2097220
 13373  200044  FFFF               	dw	65535
 13374                           
 13375                           ;Config register IDLOC35 @ 0x200046
 13376                           ;	unspecified, using default values
 13377  200046                     	org	2097222
 13378  200046  FFFF               	dw	65535
 13379                           
 13380                           ;Config register IDLOC36 @ 0x200048
 13381                           ;	unspecified, using default values
 13382  200048                     	org	2097224
 13383  200048  FFFF               	dw	65535
 13384                           
 13385                           ;Config register IDLOC37 @ 0x20004A
 13386                           ;	unspecified, using default values
 13387  20004A                     	org	2097226
 13388  20004A  FFFF               	dw	65535
 13389                           
 13390                           ;Config register IDLOC38 @ 0x20004C
 13391                           ;	unspecified, using default values
 13392  20004C                     	org	2097228
 13393  20004C  FFFF               	dw	65535
 13394                           
 13395                           ;Config register IDLOC39 @ 0x20004E
 13396                           ;	unspecified, using default values
 13397  20004E                     	org	2097230
 13398  20004E  FFFF               	dw	65535
 13399                           
 13400                           ;Config register IDLOC40 @ 0x200050
 13401                           ;	unspecified, using default values
 13402  200050                     	org	2097232
 13403  200050  FFFF               	dw	65535
 13404                           
 13405                           ;Config register IDLOC41 @ 0x200052
 13406                           ;	unspecified, using default values
 13407  200052                     	org	2097234
 13408  200052  FFFF               	dw	65535
 13409                           
 13410                           ;Config register IDLOC42 @ 0x200054
 13411                           ;	unspecified, using default values
 13412  200054                     	org	2097236
 13413  200054  FFFF               	dw	65535
 13414                           
 13415                           ;Config register IDLOC43 @ 0x200056
 13416                           ;	unspecified, using default values
 13417  200056                     	org	2097238
 13418  200056  FFFF               	dw	65535
 13419                           
 13420                           ;Config register IDLOC44 @ 0x200058
 13421                           ;	unspecified, using default values
 13422  200058                     	org	2097240
 13423  200058  FFFF               	dw	65535
 13424                           
 13425                           ;Config register IDLOC45 @ 0x20005A
 13426                           ;	unspecified, using default values
 13427  20005A                     	org	2097242
 13428  20005A  FFFF               	dw	65535
 13429                           
 13430                           ;Config register IDLOC46 @ 0x20005C
 13431                           ;	unspecified, using default values
 13432  20005C                     	org	2097244
 13433  20005C  FFFF               	dw	65535
 13434                           
 13435                           ;Config register IDLOC47 @ 0x20005E
 13436                           ;	unspecified, using default values
 13437  20005E                     	org	2097246
 13438  20005E  FFFF               	dw	65535
 13439                           
 13440                           ;Config register IDLOC48 @ 0x200060
 13441                           ;	unspecified, using default values
 13442  200060                     	org	2097248
 13443  200060  FFFF               	dw	65535
 13444                           
 13445                           ;Config register IDLOC49 @ 0x200062
 13446                           ;	unspecified, using default values
 13447  200062                     	org	2097250
 13448  200062  FFFF               	dw	65535
 13449                           
 13450                           ;Config register IDLOC50 @ 0x200064
 13451                           ;	unspecified, using default values
 13452  200064                     	org	2097252
 13453  200064  FFFF               	dw	65535
 13454                           
 13455                           ;Config register IDLOC51 @ 0x200066
 13456                           ;	unspecified, using default values
 13457  200066                     	org	2097254
 13458  200066  FFFF               	dw	65535
 13459                           
 13460                           ;Config register IDLOC52 @ 0x200068
 13461                           ;	unspecified, using default values
 13462  200068                     	org	2097256
 13463  200068  FFFF               	dw	65535
 13464                           
 13465                           ;Config register IDLOC53 @ 0x20006A
 13466                           ;	unspecified, using default values
 13467  20006A                     	org	2097258
 13468  20006A  FFFF               	dw	65535
 13469                           
 13470                           ;Config register IDLOC54 @ 0x20006C
 13471                           ;	unspecified, using default values
 13472  20006C                     	org	2097260
 13473  20006C  FFFF               	dw	65535
 13474                           
 13475                           ;Config register IDLOC55 @ 0x20006E
 13476                           ;	unspecified, using default values
 13477  20006E                     	org	2097262
 13478  20006E  FFFF               	dw	65535
 13479                           
 13480                           ;Config register IDLOC56 @ 0x200070
 13481                           ;	unspecified, using default values
 13482  200070                     	org	2097264
 13483  200070  FFFF               	dw	65535
 13484                           
 13485                           ;Config register IDLOC57 @ 0x200072
 13486                           ;	unspecified, using default values
 13487  200072                     	org	2097266
 13488  200072  FFFF               	dw	65535
 13489                           
 13490                           ;Config register IDLOC58 @ 0x200074
 13491                           ;	unspecified, using default values
 13492  200074                     	org	2097268
 13493  200074  FFFF               	dw	65535
 13494                           
 13495                           ;Config register IDLOC59 @ 0x200076
 13496                           ;	unspecified, using default values
 13497  200076                     	org	2097270
 13498  200076  FFFF               	dw	65535
 13499                           
 13500                           ;Config register IDLOC60 @ 0x200078
 13501                           ;	unspecified, using default values
 13502  200078                     	org	2097272
 13503  200078  FFFF               	dw	65535
 13504                           
 13505                           ;Config register IDLOC61 @ 0x20007A
 13506                           ;	unspecified, using default values
 13507  20007A                     	org	2097274
 13508  20007A  FFFF               	dw	65535
 13509                           
 13510                           ;Config register IDLOC62 @ 0x20007C
 13511                           ;	unspecified, using default values
 13512  20007C                     	org	2097276
 13513  20007C  FFFF               	dw	65535
 13514                           
 13515                           ;Config register IDLOC63 @ 0x20007E
 13516                           ;	unspecified, using default values
 13517  20007E                     	org	2097278
 13518  20007E  FFFF               	dw	65535
 13519                           
 13520                           ;Config register IDLOC64 @ 0x200080
 13521                           ;	unspecified, using default values
 13522  200080                     	org	2097280
 13523  200080  FFFF               	dw	65535
 13524                           
 13525                           ;Config register IDLOC65 @ 0x200082
 13526                           ;	unspecified, using default values
 13527  200082                     	org	2097282
 13528  200082  FFFF               	dw	65535
 13529                           
 13530                           ;Config register IDLOC66 @ 0x200084
 13531                           ;	unspecified, using default values
 13532  200084                     	org	2097284
 13533  200084  FFFF               	dw	65535
 13534                           
 13535                           ;Config register IDLOC67 @ 0x200086
 13536                           ;	unspecified, using default values
 13537  200086                     	org	2097286
 13538  200086  FFFF               	dw	65535
 13539                           
 13540                           ;Config register IDLOC68 @ 0x200088
 13541                           ;	unspecified, using default values
 13542  200088                     	org	2097288
 13543  200088  FFFF               	dw	65535
 13544                           
 13545                           ;Config register IDLOC69 @ 0x20008A
 13546                           ;	unspecified, using default values
 13547  20008A                     	org	2097290
 13548  20008A  FFFF               	dw	65535
 13549                           
 13550                           ;Config register IDLOC70 @ 0x20008C
 13551                           ;	unspecified, using default values
 13552  20008C                     	org	2097292
 13553  20008C  FFFF               	dw	65535
 13554                           
 13555                           ;Config register IDLOC71 @ 0x20008E
 13556                           ;	unspecified, using default values
 13557  20008E                     	org	2097294
 13558  20008E  FFFF               	dw	65535
 13559                           
 13560                           ;Config register IDLOC72 @ 0x200090
 13561                           ;	unspecified, using default values
 13562  200090                     	org	2097296
 13563  200090  FFFF               	dw	65535
 13564                           
 13565                           ;Config register IDLOC73 @ 0x200092
 13566                           ;	unspecified, using default values
 13567  200092                     	org	2097298
 13568  200092  FFFF               	dw	65535
 13569                           
 13570                           ;Config register IDLOC74 @ 0x200094
 13571                           ;	unspecified, using default values
 13572  200094                     	org	2097300
 13573  200094  FFFF               	dw	65535
 13574                           
 13575                           ;Config register IDLOC75 @ 0x200096
 13576                           ;	unspecified, using default values
 13577  200096                     	org	2097302
 13578  200096  FFFF               	dw	65535
 13579                           
 13580                           ;Config register IDLOC76 @ 0x200098
 13581                           ;	unspecified, using default values
 13582  200098                     	org	2097304
 13583  200098  FFFF               	dw	65535
 13584                           
 13585                           ;Config register IDLOC77 @ 0x20009A
 13586                           ;	unspecified, using default values
 13587  20009A                     	org	2097306
 13588  20009A  FFFF               	dw	65535
 13589                           
 13590                           ;Config register IDLOC78 @ 0x20009C
 13591                           ;	unspecified, using default values
 13592  20009C                     	org	2097308
 13593  20009C  FFFF               	dw	65535
 13594                           
 13595                           ;Config register IDLOC79 @ 0x20009E
 13596                           ;	unspecified, using default values
 13597  20009E                     	org	2097310
 13598  20009E  FFFF               	dw	65535
 13599                           
 13600                           ;Config register IDLOC80 @ 0x2000A0
 13601                           ;	unspecified, using default values
 13602  2000A0                     	org	2097312
 13603  2000A0  FFFF               	dw	65535
 13604                           
 13605                           ;Config register IDLOC81 @ 0x2000A2
 13606                           ;	unspecified, using default values
 13607  2000A2                     	org	2097314
 13608  2000A2  FFFF               	dw	65535
 13609                           
 13610                           ;Config register IDLOC82 @ 0x2000A4
 13611                           ;	unspecified, using default values
 13612  2000A4                     	org	2097316
 13613  2000A4  FFFF               	dw	65535
 13614                           
 13615                           ;Config register IDLOC83 @ 0x2000A6
 13616                           ;	unspecified, using default values
 13617  2000A6                     	org	2097318
 13618  2000A6  FFFF               	dw	65535
 13619                           
 13620                           ;Config register IDLOC84 @ 0x2000A8
 13621                           ;	unspecified, using default values
 13622  2000A8                     	org	2097320
 13623  2000A8  FFFF               	dw	65535
 13624                           
 13625                           ;Config register IDLOC85 @ 0x2000AA
 13626                           ;	unspecified, using default values
 13627  2000AA                     	org	2097322
 13628  2000AA  FFFF               	dw	65535
 13629                           
 13630                           ;Config register IDLOC86 @ 0x2000AC
 13631                           ;	unspecified, using default values
 13632  2000AC                     	org	2097324
 13633  2000AC  FFFF               	dw	65535
 13634                           
 13635                           ;Config register IDLOC87 @ 0x2000AE
 13636                           ;	unspecified, using default values
 13637  2000AE                     	org	2097326
 13638  2000AE  FFFF               	dw	65535
 13639                           
 13640                           ;Config register IDLOC88 @ 0x2000B0
 13641                           ;	unspecified, using default values
 13642  2000B0                     	org	2097328
 13643  2000B0  FFFF               	dw	65535
 13644                           
 13645                           ;Config register IDLOC89 @ 0x2000B2
 13646                           ;	unspecified, using default values
 13647  2000B2                     	org	2097330
 13648  2000B2  FFFF               	dw	65535
 13649                           
 13650                           ;Config register IDLOC90 @ 0x2000B4
 13651                           ;	unspecified, using default values
 13652  2000B4                     	org	2097332
 13653  2000B4  FFFF               	dw	65535
 13654                           
 13655                           ;Config register IDLOC91 @ 0x2000B6
 13656                           ;	unspecified, using default values
 13657  2000B6                     	org	2097334
 13658  2000B6  FFFF               	dw	65535
 13659                           
 13660                           ;Config register IDLOC92 @ 0x2000B8
 13661                           ;	unspecified, using default values
 13662  2000B8                     	org	2097336
 13663  2000B8  FFFF               	dw	65535
 13664                           
 13665                           ;Config register IDLOC93 @ 0x2000BA
 13666                           ;	unspecified, using default values
 13667  2000BA                     	org	2097338
 13668  2000BA  FFFF               	dw	65535
 13669                           
 13670                           ;Config register IDLOC94 @ 0x2000BC
 13671                           ;	unspecified, using default values
 13672  2000BC                     	org	2097340
 13673  2000BC  FFFF               	dw	65535
 13674                           
 13675                           ;Config register IDLOC95 @ 0x2000BE
 13676                           ;	unspecified, using default values
 13677  2000BE                     	org	2097342
 13678  2000BE  FFFF               	dw	65535
 13679                           
 13680                           ;Config register IDLOC96 @ 0x2000C0
 13681                           ;	unspecified, using default values
 13682  2000C0                     	org	2097344
 13683  2000C0  FFFF               	dw	65535
 13684                           
 13685                           ;Config register IDLOC97 @ 0x2000C2
 13686                           ;	unspecified, using default values
 13687  2000C2                     	org	2097346
 13688  2000C2  FFFF               	dw	65535
 13689                           
 13690                           ;Config register IDLOC98 @ 0x2000C4
 13691                           ;	unspecified, using default values
 13692  2000C4                     	org	2097348
 13693  2000C4  FFFF               	dw	65535
 13694                           
 13695                           ;Config register IDLOC99 @ 0x2000C6
 13696                           ;	unspecified, using default values
 13697  2000C6                     	org	2097350
 13698  2000C6  FFFF               	dw	65535
 13699                           
 13700                           ;Config register IDLOC100 @ 0x2000C8
 13701                           ;	unspecified, using default values
 13702  2000C8                     	org	2097352
 13703  2000C8  FFFF               	dw	65535
 13704                           
 13705                           ;Config register IDLOC101 @ 0x2000CA
 13706                           ;	unspecified, using default values
 13707  2000CA                     	org	2097354
 13708  2000CA  FFFF               	dw	65535
 13709                           
 13710                           ;Config register IDLOC102 @ 0x2000CC
 13711                           ;	unspecified, using default values
 13712  2000CC                     	org	2097356
 13713  2000CC  FFFF               	dw	65535
 13714                           
 13715                           ;Config register IDLOC103 @ 0x2000CE
 13716                           ;	unspecified, using default values
 13717  2000CE                     	org	2097358
 13718  2000CE  FFFF               	dw	65535
 13719                           
 13720                           ;Config register IDLOC104 @ 0x2000D0
 13721                           ;	unspecified, using default values
 13722  2000D0                     	org	2097360
 13723  2000D0  FFFF               	dw	65535
 13724                           
 13725                           ;Config register IDLOC105 @ 0x2000D2
 13726                           ;	unspecified, using default values
 13727  2000D2                     	org	2097362
 13728  2000D2  FFFF               	dw	65535
 13729                           
 13730                           ;Config register IDLOC106 @ 0x2000D4
 13731                           ;	unspecified, using default values
 13732  2000D4                     	org	2097364
 13733  2000D4  FFFF               	dw	65535
 13734                           
 13735                           ;Config register IDLOC107 @ 0x2000D6
 13736                           ;	unspecified, using default values
 13737  2000D6                     	org	2097366
 13738  2000D6  FFFF               	dw	65535
 13739                           
 13740                           ;Config register IDLOC108 @ 0x2000D8
 13741                           ;	unspecified, using default values
 13742  2000D8                     	org	2097368
 13743  2000D8  FFFF               	dw	65535
 13744                           
 13745                           ;Config register IDLOC109 @ 0x2000DA
 13746                           ;	unspecified, using default values
 13747  2000DA                     	org	2097370
 13748  2000DA  FFFF               	dw	65535
 13749                           
 13750                           ;Config register IDLOC110 @ 0x2000DC
 13751                           ;	unspecified, using default values
 13752  2000DC                     	org	2097372
 13753  2000DC  FFFF               	dw	65535
 13754                           
 13755                           ;Config register IDLOC111 @ 0x2000DE
 13756                           ;	unspecified, using default values
 13757  2000DE                     	org	2097374
 13758  2000DE  FFFF               	dw	65535
 13759                           
 13760                           ;Config register IDLOC112 @ 0x2000E0
 13761                           ;	unspecified, using default values
 13762  2000E0                     	org	2097376
 13763  2000E0  FFFF               	dw	65535
 13764                           
 13765                           ;Config register IDLOC113 @ 0x2000E2
 13766                           ;	unspecified, using default values
 13767  2000E2                     	org	2097378
 13768  2000E2  FFFF               	dw	65535
 13769                           
 13770                           ;Config register IDLOC114 @ 0x2000E4
 13771                           ;	unspecified, using default values
 13772  2000E4                     	org	2097380
 13773  2000E4  FFFF               	dw	65535
 13774                           
 13775                           ;Config register IDLOC115 @ 0x2000E6
 13776                           ;	unspecified, using default values
 13777  2000E6                     	org	2097382
 13778  2000E6  FFFF               	dw	65535
 13779                           
 13780                           ;Config register IDLOC116 @ 0x2000E8
 13781                           ;	unspecified, using default values
 13782  2000E8                     	org	2097384
 13783  2000E8  FFFF               	dw	65535
 13784                           
 13785                           ;Config register IDLOC117 @ 0x2000EA
 13786                           ;	unspecified, using default values
 13787  2000EA                     	org	2097386
 13788  2000EA  FFFF               	dw	65535
 13789                           
 13790                           ;Config register IDLOC118 @ 0x2000EC
 13791                           ;	unspecified, using default values
 13792  2000EC                     	org	2097388
 13793  2000EC  FFFF               	dw	65535
 13794                           
 13795                           ;Config register IDLOC119 @ 0x2000EE
 13796                           ;	unspecified, using default values
 13797  2000EE                     	org	2097390
 13798  2000EE  FFFF               	dw	65535
 13799                           
 13800                           ;Config register IDLOC120 @ 0x2000F0
 13801                           ;	unspecified, using default values
 13802  2000F0                     	org	2097392
 13803  2000F0  FFFF               	dw	65535
 13804                           
 13805                           ;Config register IDLOC121 @ 0x2000F2
 13806                           ;	unspecified, using default values
 13807  2000F2                     	org	2097394
 13808  2000F2  FFFF               	dw	65535
 13809                           
 13810                           ;Config register IDLOC122 @ 0x2000F4
 13811                           ;	unspecified, using default values
 13812  2000F4                     	org	2097396
 13813  2000F4  FFFF               	dw	65535
 13814                           
 13815                           ;Config register IDLOC123 @ 0x2000F6
 13816                           ;	unspecified, using default values
 13817  2000F6                     	org	2097398
 13818  2000F6  FFFF               	dw	65535
 13819                           
 13820                           ;Config register IDLOC124 @ 0x2000F8
 13821                           ;	unspecified, using default values
 13822  2000F8                     	org	2097400
 13823  2000F8  FFFF               	dw	65535
 13824                           
 13825                           ;Config register IDLOC125 @ 0x2000FA
 13826                           ;	unspecified, using default values
 13827  2000FA                     	org	2097402
 13828  2000FA  FFFF               	dw	65535
 13829                           
 13830                           ;Config register IDLOC126 @ 0x2000FC
 13831                           ;	unspecified, using default values
 13832  2000FC                     	org	2097404
 13833  2000FC  FFFF               	dw	65535
 13834                           
 13835                           ;Config register IDLOC127 @ 0x2000FE
 13836                           ;	unspecified, using default values
 13837  2000FE                     	org	2097406
 13838  2000FE  FFFF               	dw	65535
 13839                           
 13840                           	psect	config
 13841                           
 13842                           ;Config register CONFIG1L @ 0x300000
 13843                           ;	External Oscillator mode Selection bits
 13844                           ;	FEXTOSC = OFF, Oscillator not enabled
 13845                           ;	Power-up default value for COSC bits
 13846                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 13847  300000                     	org	3145728
 13848  300000  8C                 	db	140
 13849                           
 13850                           ;Config register CONFIG1H @ 0x300001
 13851                           ;	Clock Out Enable bit
 13852                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 13853                           ;	Clock Switch Enable bit
 13854                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13855                           ;	Fail-Safe Clock Monitor Enable bit
 13856                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 13857  300001                     	org	3145729
 13858  300001  FF                 	db	255
 13859                           
 13860                           ;Config register CONFIG2L @ 0x300002
 13861                           ;	Master Clear Enable bit
 13862                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
 13863                           ;	Power-up Timer Enable bit
 13864                           ;	PWRTE = OFF, Power up timer disabled
 13865                           ;	Low-power BOR enable bit
 13866                           ;	LPBOREN = OFF, Low power BOR is disabled
 13867                           ;	Brown-out Reset Enable bits
 13868                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 13869  300002                     	org	3145730
 13870  300002  FF                 	db	255
 13871                           
 13872                           ;Config register CONFIG2H @ 0x300003
 13873                           ;	Brown Out Reset Voltage selection bits
 13874                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
 13875                           ;	ZCD Disable bit
 13876                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13877                           ;	PPSLOCK bit One-Way Set Enable bit
 13878                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 13879                           ;	Stack Full/Underflow Reset Enable bit
 13880                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13881                           ;	Extended Instruction Set Enable bit
 13882                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 13883  300003                     	org	3145731
 13884  300003  FF                 	db	255
 13885                           
 13886                           ;Config register CONFIG3L @ 0x300004
 13887                           ;	WDT Period Select bits
 13888                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13889                           ;	WDT operating mode
 13890                           ;	WDTE = OFF, WDT Disabled
 13891  300004                     	org	3145732
 13892  300004  9F                 	db	159
 13893                           
 13894                           ;Config register CONFIG3H @ 0x300005
 13895                           ;	WDT Window Select bits
 13896                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13897                           ;	WDT input clock selector
 13898                           ;	WDTCCS = SC, Software Control
 13899  300005                     	org	3145733
 13900  300005  FF                 	db	255
 13901                           
 13902                           ;Config register CONFIG4L @ 0x300006
 13903                           ;	Write Protection Block 0
 13904                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13905                           ;	Write Protection Block 1
 13906                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13907                           ;	Write Protection Block 2
 13908                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13909                           ;	Write Protection Block 3
 13910                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 13911                           ;	Write Protection Block 4
 13912                           ;	WRT4 = 0x1, unprogrammed default
 13913                           ;	Write Protection Block 5
 13914                           ;	WRT5 = 0x1, unprogrammed default
 13915                           ;	Write Protection Block 6
 13916                           ;	WRT6 = 0x1, unprogrammed default
 13917                           ;	Write Protection Block 7
 13918                           ;	WRT7 = 0x1, unprogrammed default
 13919  300006                     	org	3145734
 13920  300006  FF                 	db	255
 13921                           
 13922                           ;Config register CONFIG4H @ 0x300007
 13923                           ;	Configuration Register Write Protection bit
 13924                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 13925                           ;	Boot Block Write Protection bit
 13926                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13927                           ;	Data EEPROM Write Protection bit
 13928                           ;	WRTD = OFF, Data EEPROM not write-protected
 13929                           ;	Scanner Enable bit
 13930                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 13931                           ;	Low Voltage Programming Enable bit
 13932                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 13933  300007                     	org	3145735
 13934  300007  FF                 	db	255
 13935                           
 13936                           ;Config register CONFIG5L @ 0x300008
 13937                           ;	UserNVM Program Memory Code Protection bit
 13938                           ;	CP = OFF, UserNVM code protection disabled
 13939                           ;	DataNVM Memory Code Protection bit
 13940                           ;	CPD = OFF, DataNVM code protection disabled
 13941  300008                     	org	3145736
 13942  300008  FF                 	db	255
 13943                           
 13944                           ;Config register CONFIG5H @ 0x300009
 13945                           ;	unspecified, using default values
 13946  300009                     	org	3145737
 13947  300009  FF                 	db	255
 13948                           
 13949                           ;Config register CONFIG6L @ 0x30000A
 13950                           ;	Table Read Protection Block 0
 13951                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13952                           ;	Table Read Protection Block 1
 13953                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13954                           ;	Table Read Protection Block 2
 13955                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13956                           ;	Table Read Protection Block 3
 13957                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13958                           ;	Table Read Protection Block 4
 13959                           ;	EBTR4 = 0x1, unprogrammed default
 13960                           ;	Table Read Protection Block 5
 13961                           ;	EBTR5 = 0x1, unprogrammed default
 13962                           ;	Table Read Protection Block 6
 13963                           ;	EBTR6 = 0x1, unprogrammed default
 13964                           ;	Table Read Protection Block 7
 13965                           ;	EBTR7 = 0x1, unprogrammed default
 13966  30000A                     	org	3145738
 13967  30000A  FF                 	db	255
 13968                           
 13969                           ;Config register CONFIG6H @ 0x30000B
 13970                           ;	Boot Block Table Read Protection bit
 13971                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13972  30000B                     	org	3145739
 13973  30000B  FF                 	db	255
 13974                           tosu	equ	0xFFF
 13975                           tosh	equ	0xFFE
 13976                           tosl	equ	0xFFD
 13977                           stkptr	equ	0xFFC
 13978                           pclatu	equ	0xFFB
 13979                           pclath	equ	0xFFA
 13980                           pcl	equ	0xFF9
 13981                           tblptru	equ	0xFF8
 13982                           tblptrh	equ	0xFF7
 13983                           tblptrl	equ	0xFF6
 13984                           tablat	equ	0xFF5
 13985                           prodh	equ	0xFF4
 13986                           prodl	equ	0xFF3
 13987                           indf0	equ	0xFEF
 13988                           postinc0	equ	0xFEE
 13989                           postdec0	equ	0xFED
 13990                           preinc0	equ	0xFEC
 13991                           plusw0	equ	0xFEB
 13992                           fsr0h	equ	0xFEA
 13993                           fsr0l	equ	0xFE9
 13994                           wreg	equ	0xFE8
 13995                           indf1	equ	0xFE7
 13996                           postinc1	equ	0xFE6
 13997                           postdec1	equ	0xFE5
 13998                           preinc1	equ	0xFE4
 13999                           plusw1	equ	0xFE3
 14000                           fsr1h	equ	0xFE2
 14001                           fsr1l	equ	0xFE1
 14002                           bsr	equ	0xFE0
 14003                           indf2	equ	0xFDF
 14004                           postinc2	equ	0xFDE
 14005                           postdec2	equ	0xFDD
 14006                           preinc2	equ	0xFDC
 14007                           plusw2	equ	0xFDB
 14008                           fsr2h	equ	0xFDA
 14009                           fsr2l	equ	0xFD9
 14010                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    323
    Data        0
    BSS         149
    Persistent  27
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      88
    BANK0           160     51     157
    BANK1           256      8      72
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    S36$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    S36$6$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> resp_conn_data(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> resp_conn_data(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 64
		 -> buf(BANK1[64]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 64
		 -> buf(BANK1[64]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 44
		 -> dbuf(BANK0[32]), cmd_reboot(CODE[6]), cmd_adc_read(CODE[44]), cmd_adc_write(CODE[44]), 
		 -> cmd_UUID(CODE[38]), cmd_cleanprivateservice(CODE[5]), cmd_peripheral(CODE[14]), cmd_userdefineprofile(CODE[14]), 
		 -> cmd_factoryreset(CODE[7]), STR_3(CODE[3]), sendADCCValueBLE@result(BANK0[2]), cmd_adc_value_send(CODE[38]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 44
		 -> dbuf(BANK0[32]), cmd_reboot(CODE[6]), cmd_adc_read(CODE[44]), cmd_adc_write(CODE[44]), 
		 -> cmd_UUID(CODE[38]), cmd_cleanprivateservice(CODE[5]), cmd_peripheral(CODE[14]), cmd_userdefineprofile(CODE[14]), 
		 -> cmd_factoryreset(CODE[7]), STR_3(CODE[3]), sendADCCValueBLE@result(BANK0[2]), cmd_adc_value_send(CODE[38]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 15
		 -> resp_conn_end(CODE[15]), resp_conn(CODE[10]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 64
		 -> buf(BANK1[64]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 2
		 -> sendADCCValueBLE@result(BANK0[2]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 2
		 -> sendADCCValueBLE@result(BANK0[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2692_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 2
		 -> sendADCCValueBLE@result(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 2
		 -> sendADCCValueBLE@result(BANK0[2]), 

    BLE2_SendBuffer@buffer	PTR unsigned char  size(2) Largest target is 44
		 -> cmd_reboot(CODE[6]), cmd_adc_read(CODE[44]), cmd_adc_write(CODE[44]), cmd_UUID(CODE[38]), 
		 -> cmd_cleanprivateservice(CODE[5]), cmd_peripheral(CODE[14]), cmd_userdefineprofile(CODE[14]), cmd_factoryreset(CODE[7]), 
		 -> STR_3(CODE[3]), sendADCCValueBLE@result(BANK0[2]), cmd_adc_value_send(CODE[38]), 

    BLE2_SendString@command	PTR const unsigned char  size(2) Largest target is 44
		 -> cmd_reboot(CODE[6]), cmd_adc_read(CODE[44]), cmd_adc_write(CODE[44]), cmd_UUID(CODE[38]), 
		 -> cmd_cleanprivateservice(CODE[5]), cmd_peripheral(CODE[14]), cmd_userdefineprofile(CODE[14]), cmd_factoryreset(CODE[7]), 
		 -> STR_3(CODE[3]), sendADCCValueBLE@result(BANK0[2]), cmd_adc_value_send(CODE[38]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_UserInterruptHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_UserInterruptHandler(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_UserInterruptHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_UserInterruptHandler(), Absolute function(), ADCC_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    S36$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    uart.Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    S36$TxDefaultISR	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    uart.TxDefaultISR	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    S36$TransmitDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    uart.TransmitDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_is_tx_done(), 

    S36$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    uart.SetRxISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), 

    S36$RxDefaultISR	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    uart.RxDefaultISR	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    S36$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), 

    uart.SetTxISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), 

    S36$DataReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    uart.DataReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_is_rx_ready(), 

    S36$TransmitReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    uart.TransmitReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_is_tx_ready(), 

    S36$Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    uart.Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    S36$Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 

    uart.Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_CRC_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _InitialSetup->_CRC_CalculatedResultGet
    _readDataPtr->_DATAEE_ReadByte
    _readChecksum->_DATAEE_ReadByte
    _BLE2ClickSetup->_BLE2_SendString
    _writeChecksum->_DATAEE_WriteByte
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _BLE2_SendString->_BLE2_SendBuffer
    _BLE2_SendBuffer->_strlen
    _BLE2_SendByte->_EUSART1_Write
    _getADCCommand->_getADCCharacteristic
    _getADCCommand->_getADCMode
    _getADCMode->_getHexValue
    _getADCCharacteristic->_getHexValue
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _TMR1_Reload->_TMR1_WriteTimer
    _StartCRCPeekMode->_CRC_SCAN_SetAddressLimit
    _LogDataToPFM->_FLASHWriteWordSingle
    _writeDataPtr->_DATAEE_WriteByte
    _FLASHWriteWordSingle->_FLASH_ReadWord
    _CRC_CalculatedResultGet->_CRC_ReverseValue
    _CRCBurstMode->_CRC_SCAN_SetAddressLimit
    _BLE2ClickGetstr->_EUSART1_Read

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->i2_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_ApplicationTask
    _ApplicationTask->_processADCCommand
    _processADCCommand->_sendADCCValueBLE
    _sendADCCValueBLE->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _ApplicationTask->_processADCCommand

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   58320
       _ADCC_SetADTIInterruptHandler
                    _ApplicationTask
                       _InitialSetup
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1026
                    _ADCC_Initialize
                     _CRC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                              9 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             3     0      3      98
                                              6 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             3     0      3     174
                                              6 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        3     0      3      98
                                              6 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        3     0      3      98
                                              6 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3      98
                                              6 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3      98
                                              6 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3      98
                                              6 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       5     5      0      90
                                              6 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     174
                                              6 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _InitialSetup                                         0     0      0    7271
                   _ADCCSetSensorPin
                     _BLE2ClickSetup
                       _CRCBurstMode
             _CRCInitializeBurstMode
            _CRC_CalculatedResultGet
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                    _TMR0_StartTimer
                       _readChecksum
                        _readDataPtr
                      _writeChecksum
                       _writeDataPtr
 ---------------------------------------------------------------------------------
 (2) _readDataPtr                                          6     4      2     470
                                              8 COMRAM     6     4      2
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _readChecksum                                         6     4      2     470
                                              8 COMRAM     6     4      2
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     424
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _BLE2ClickSetup                                       0     0      0    1928
                    _BLE2ClickGetstr
                    _BLE2_SendString
                    _BLE2_WakeModule
                       _EUSART1_Read *
 ---------------------------------------------------------------------------------
 (3) _BLE2_WakeModule                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCCSetSensorPin                                     1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ApplicationTask                                      4     4      0   49675
                                             47 BANK0      4     4      0
           _ADCC_GetConversionResult
                _ADCC_GetFilterValue
                    _BLE2ClickGetstr
                       _CRCBurstMode
             _CRCInitializeBurstMode
              _CRCInitializePeekMode
            _CRC_CalculatedResultGet
          _CRC_SCAN_HasScanCompleted
               _CRC_SCAN_StopScanner
                _EUSART1_is_rx_ready *
                       _LogDataToPFM
                   _StartCRCPeekMode
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                    _TMR0_WriteTimer
                        _TMR1_Reload
                    _TMR1_StartTimer
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                  _processADCCommand
                   _sendADCCValueBLE
                             _strcmp
                            _strncmp
                      _writeChecksum
 ---------------------------------------------------------------------------------
 (2) _writeChecksum                                        2     0      2    1045
                                             10 COMRAM     2     0      2
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _strncmp                                             11     5      6     453
                                              6 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4     416
                                              6 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _processADCCommand                                   10    10      0   23014
                                             45 BANK0      2     2      0
                                              0 BANK1      8     8      0
            _ADCCBasicModeInitialize
            _ADCCBurstModeInitialize
                     _FLASH_ReadWord
                        _TMR1_Reload
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _getADCCommand
                   _sendADCCValueBLE
 ---------------------------------------------------------------------------------
 (2) _sendADCCValueBLE                                     6     4      2   13768
                                             39 BANK0      6     4      2
                    _BLE2_SendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             16    10      6   11234
                                             23 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   10562
                                             80 COMRAM     2     2      0
                                             17 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   10029
                                             74 COMRAM     6     0      6
                                              0 BANK0     17    17      0
                               _atoi
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    5723
                                             35 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                             12 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3693
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1630
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1130
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      93
                                              7 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     191
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     191
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1615
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     512
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _BLE2_SendString                                      2     0      2    1790
                                             13 COMRAM     2     0      2
                    _BLE2_SendBuffer
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     310
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _BLE2_SendBuffer                                      3     0      3     338
                                             10 COMRAM     3     0      3
                      _BLE2_SendByte
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _BLE2_SendByte                                        1     1      0      93
                                              7 COMRAM     1     1      0
                      _EUSART1_Write *
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      62
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getADCCommand                                        4     2      2    1555
                                             14 COMRAM     4     2      2
               _getADCCharacteristic
                         _getADCMode
 ---------------------------------------------------------------------------------
 (4) _getADCMode                                           6     6      0     742
                                              8 COMRAM     6     6      0
                        _getHexValue
 ---------------------------------------------------------------------------------
 (4) _getADCCharacteristic                                 6     6      0     742
                                              8 COMRAM     6     6      0
                        _getHexValue
 ---------------------------------------------------------------------------------
 (5) _getHexValue                                          2     2      0     575
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     746
                                              6 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     607
                                             70 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2873
                                             45 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2363
                                             20 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Reload                                          0     0      0     269
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (4) _TMR1_WriteTimer                                      2     0      2     269
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCCBurstModeInitialize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADCCBasicModeInitialize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_WriteTimer                                      1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _StartCRCPeekMode                                     0     0      0     436
           _CRC_SCAN_SetAddressLimit
              _CRC_SCAN_StartScanner
 ---------------------------------------------------------------------------------
 (2) _LogDataToPFM                                         2     0      2    2280
                                             21 COMRAM     2     0      2
               _FLASHWriteWordSingle
                   _FLASH_EraseBlock
                       _writeDataPtr
 ---------------------------------------------------------------------------------
 (2) _writeDataPtr                                         2     0      2    1045
                                             10 COMRAM     2     0      2
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     849
                                              6 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     5     1      4     317
                                              6 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _FLASHWriteWordSingle                                 9     3      6     797
                                             12 COMRAM     9     3      6
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadWord                                       6     2      4     363
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                             10     8      2     513
                                             13 COMRAM    10     8      2
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     7     5      2     170
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _CRCInitializePeekMode                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRCInitializeBurstMode                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRCBurstMode                                         0     0      0     505
          _CRC_SCAN_HasScanCompleted
           _CRC_SCAN_SetAddressLimit
              _CRC_SCAN_StartScanner
               _CRC_SCAN_StopScanner
 ---------------------------------------------------------------------------------
 (3) _CRC_SCAN_StopScanner                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CRC_SCAN_StartScanner                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CRC_SCAN_SetAddressLimit                             8     0      8     436
                                              6 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (3) _CRC_SCAN_HasScanCompleted                            2     2      0      69
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _BLE2ClickGetstr                                      4     4      0     114
                                              7 COMRAM     4     4      0
                       _EUSART1_Read *
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         1     1      0      24
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetFilterValue                                  4     2      2       0
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0     114
                                              2 COMRAM     4     4      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     114
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
          _TMR0_UserInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_UserInterruptHandler                           0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCC_UserInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _ADCC_UserInterruptHandler                           0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _ApplicationTask
     _ADCC_GetConversionResult
     _ADCC_GetFilterValue
     _BLE2ClickGetstr
       _EUSART1_Read *
     _CRCBurstMode
       _CRC_SCAN_HasScanCompleted
       _CRC_SCAN_SetAddressLimit
       _CRC_SCAN_StartScanner
       _CRC_SCAN_StopScanner
     _CRCInitializeBurstMode
     _CRCInitializePeekMode
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_SCAN_HasScanCompleted
     _CRC_SCAN_StopScanner
     _EUSART1_is_rx_ready *
     _LogDataToPFM *
       _FLASHWriteWordSingle
         _FLASH_ReadWord
       _FLASH_EraseBlock
       _writeDataPtr
         _DATAEE_WriteByte
     _StartCRCPeekMode *
       _CRC_SCAN_SetAddressLimit
       _CRC_SCAN_StartScanner
     _TMR0_StartTimer *
     _TMR0_StopTimer *
     _TMR0_WriteTimer *
     _TMR1_Reload *
       _TMR1_WriteTimer
     _TMR1_StartTimer *
     ___fldiv *
       ___xxtofl (ARG)
     ___flmul *
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol *
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl *
     _processADCCommand *
       _ADCCBasicModeInitialize
       _ADCCBurstModeInitialize
       _FLASH_ReadWord
       _TMR1_Reload
         _TMR1_WriteTimer
       _TMR1_StartTimer
       _TMR1_StopTimer
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _getADCCommand
         _getADCCharacteristic
           _getHexValue
         _getADCMode
           _getHexValue
       _sendADCCValueBLE
         _BLE2_SendString
           _BLE2_SendBuffer
             _BLE2_SendByte
               _EUSART1_Write *
             _strlen (ARG)
           _strlen
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _fputc
                 _putch
                   _EUSART1_Write
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
                 _toupper
                   _islower
     _sendADCCValueBLE *
       _BLE2_SendString
         _BLE2_SendBuffer
           _BLE2_SendByte
             _EUSART1_Write *
           _strlen (ARG)
         _strlen
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _fputc
               _putch
                 _EUSART1_Write
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
               _toupper
                 _islower
     _strcmp *
     _strncmp *
     _writeChecksum *
       _DATAEE_WriteByte
   _InitialSetup
     _ADCCSetSensorPin
     _BLE2ClickSetup
       _BLE2ClickGetstr
         _EUSART1_Read *
       _BLE2_SendString
         _BLE2_SendBuffer
           _BLE2_SendByte
             _EUSART1_Write *
           _strlen (ARG)
         _strlen
       _BLE2_WakeModule
       _EUSART1_Read *
     _CRCBurstMode
       _CRC_SCAN_HasScanCompleted
       _CRC_SCAN_SetAddressLimit
       _CRC_SCAN_StartScanner
       _CRC_SCAN_StopScanner
     _CRCInitializeBurstMode
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _DATAEE_ReadByte
     _DATAEE_WriteByte
     _TMR0_StartTimer
     _readChecksum
       _DATAEE_ReadByte
     _readDataPtr
       _DATAEE_ReadByte
     _writeChecksum
       _DATAEE_WriteByte
     _writeDataPtr
       _DATAEE_WriteByte
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CRC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCC_UserInterruptHandler *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_UserInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     i2_TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      34        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      8      48       7       28.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      58       1       93.6%
BITBANK14           1F      0       0      31        0.0%
BANK14              1F      0       0      32        0.0%
BIGRAM_1            1F      0       0      33        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13D      28        0.0%
DATA                 0      0     13D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 07 21:12:12 2020

                                 ?_LogDataToPFM 0016              __size_of_CRC_SCAN_HasScanCompleted 0054  
                       _ADCCBasicModeInitialize 3010                        _eusart1TxBufferRemaining 00FC  
                    ?_CRC_SCAN_HasScanCompleted 0001                                    ___fldiv@aexp 002D  
                                  ___fldiv@bexp 002C                                    ___fldiv@sign 0025  
                                            l97 2110                                  ??_CRCBurstMode 000F  
                           ___wmul@multiplicand 0009                                    _adcReadyFlag 0088  
                       __end_of_BLE2ClickGetstr 2224                  ApplicationTask@connection_data 00DE  
                                           l103 2EF4                                             l121 25B2  
                                           l122 25CA                                             l131 3006  
                                           l203 304E                                             l116 2652  
                                           l125 25FA                                             l160 2FC6  
                                           l314 26A6                                             l163 2FB8  
                                           l172 2FAA                                             l325 2458  
                                           l326 2436                                             l334 1B4A  
                                           l166 2FD4                                             l351 2E8A  
                                           l263 2E00                                             l360 26FA  
                                           l328 246A                                             l336 1B5A  
                                           l345 302E                                             l329 2472  
                                           l169 2F9C                                             l266 2EDC  
                                           l339 1BF6                                             l611 2FE2  
                                           l523 24D8                                             l532 2F36  
                                           l348 3026                                             l437 22A8  
                                           l269 2EC4                                             l358 26CE  
                                           l710 2FF0                                             l640 3062  
                                           l801 29D8                                             l802 29E4  
                                           l571 2F72                                             l643 305E  
                                           l707 2DB2                                             l723 2F80  
                                           l805 2F0A                                             l637 2D8A  
                                           l649 301E                                             l843 2EA8  
                                           l659 2F8E                                             l764 2D48  
                                           l852 2C60                                             l837 3052  
                                           l693 28D8                                             l767 2D62  
                                           l696 305A                                             l793 2A8C  
                                           l849 29A2                                             l795 2A9A  
                                           l699 3056                                             l796 2AA6  
                                           l799 29CA                                 _timer1ReloadVal 00FA  
                                           _buf 0100                                             _pad 1DA4  
                       __size_of_PMD_Initialize 001C                                             tosl 000FFD  
                                           wreg 000FE8                                    ___flmul@aexp 003B  
                                  ___flmul@bexp 0040                     ??_ADCC_UserInterruptHandler 0001  
                                  ___flmul@sign 003A                                    ___flmul@temp 0045  
                                  ___flmul@prod 0041                                    ___fltol@exp1 0050  
                                          l1131 0566                                            l1140 06C2  
                                          l2005 1692                                            l2014 274C  
                                          l1222 126E                                            l1150 07E2  
                                          l1126 2080                                            l1231 23B8  
                                          l1151 07E6                                            l2120 253E  
                                          l1233 2406                                            l2113 0B92  
                                          l1330 2222                                            l1242 3016  
                                          l1170 1A04                                            l1251 2F5E  
                                          l2211 27EE                                            l1260 2A26  
                                          l1228 219A                                            l2052 1E2C  
                                          l1236 2398                                            l2061 12B0  
                                          l2205 2320                                            l1245 300E  
                                          l1333 1FE4                                            l1254 2D38  
                                          l2054 1E68                                            l2230 259C  
                                          l1239 2FFC                                            l2151 189E  
                                          l2119 2536                                            l2215 1CD8  
                                          l1263 2E48                                            l1248 2F4A  
                                          l1184 288E                                            l1336 2E26  
                                          l2160 2BC2                                            l1272 2CE4  
                                          l1169 1A02                                            l1177 283E  
                                          l2049 1DEA                                            l2225 2594  
                                          l2154 2AE2                                            l2082 14E2  
                                          l1266 2D0E                                            l1187 2F20  
                                          l2059 12A8                                            l2148 1896  
                                          l2236 2B52                                            l2084 1546  
                                          l2068 1344                                            l1269 2E6A  
                                          l2174 2B8A                                            l2168 279E  
                                          l1633 1B0A                                            l3321 304C  
                                          l2098 08E2                                            l3331 2286  
                                          l3323 2EAA                                            l2189 1DA2  
                                          l2197 291C                                            l3341 2294  
                                          l3333 2288                                            l3325 2224  
                                          l3343 2296                                            l3335 228A  
                                          l3327 2240                                            l1920 0D8C  
                                          l3345 2298                                            l3337 228C  
                                          l3329 2254                                            l1931 0E4A  
                                          l1923 0D50                                            l3347 2EC6  
                                          l3339 2292                                            l1932 0E38  
                                          l1918 0F2C                                            l1950 00C4  
                                          l1960 0320                                            l1929 0DD2  
                                          l7001 16EA                                            l6121 25DC  
                                          l6113 25A0                                            l6201 2AA8  
                                          l5401 2684                                            l1954 0428  
                                          l6123 25DE                                            l6115 25A0  
                                          l6131 3000                                            l6211 2588  
                                          l7011 1F40                                            l5411 24C2  
                                          l5403 268C                                            l1957 02BA  
                                          l6125 25EE                                            l6117 25C2  
                                          l6221 2752                                            l6301 1714  
                                          l6141 1D26                                            l6133 1CDA  
                                          l6205 2540                                            l7101 11BA  
                                          l7021 1F64                                            l7013 1F44  
                                          l7005 1F2C                                            l5413 24C6  
                                          l5405 2690                                            l5421 28A8  
                                          ?_pad 0019                                            l1967 03EA  
                                          l1959 0332                                            l1991 159E  
                                          l6127 25F2                                            l6119 25CC  
                                          l6151 27B0                                            l6215 2B8C  
                                          l6223 2766                                            l6303 1718  
                                          l6143 1D5C                                            l6135 1CEC  
                                          l6231 1270                                            l7111 11DA  
                                          l7103 11C2                                            l7031 1F90  
                                          l7023 1F70                                            l7015 1F50  
                                          l7007 1F30                                            l5415 24C8  
                                          l5407 269C                                            l5431 2D70  
                                          l5423 28C0                                            l5441 1B14  
                                          l6129 25F6                                            l6153 27E2  
                                          l6225 2794                                            l6321 17DA  
                                          l6313 177C                                            l6305 1738  
                                          l6137 1CFE                                            l6161 28F8  
                                          l6209 2576                                            l6241 12CE  
                                          l6233 1280                                            l6401 0A20  
                                          l7121 11F2                                            l7201 0524  
                                          l7041 1FB4                                            l7033 1F94  
                                          l7025 1F74                                            l7017 1F54  
                                          l7009 1F34                                            l5409 2474  
                                          l5361 2082                                            l5433 2D74  
                                          l5425 28C4                                            l5417 2890  
                                          l1994 16FA                                            l4731 2630  
                                          l4723 25FC                                            l5531 2A22  
                                          l5523 2F4C                                            l5451 1B72  
                                          l5443 1B38                                            l6147 27A0  
                                          l6171 2E1E                                            l6227 2798  
                                          l6219 274E                                            l6331 1868  
                                          l6315 1792                                            l6307 1772  
                                          l6139 1D08                                            l6163 28FC  
                                          l6251 130C                                            l6243 12EE  
                                          l6235 1282                                            l6403 0A48  
                                          l7115 11E6                                            l7107 11CE  
                                          l7051 0F4E                                            l7211 055E  
                                          l7203 0534                                            l7043 1FE0  
                                          l7035 1FA0                                            l7027 1F80  
                                          l7019 1F60                                            l5371 20B2  
                                          l5363 2086                                            l5435 2D76  
                                          l5427 28D4                                            l5419 28A4  
                                          l4741 2650                                            l4733 2640  
                                          l4725 25FC                                            l5525 29E6  
                                          l5461 1BE6                                            l5453 1B7E  
                                          l5445 1B44                                            l4901 2A72  
                                          l6501 19BC                                            l6149 27AC  
                                          l6333 187A                                            l6325 1814  
                                          l6317 179A                                            l6309 1776  
                                          l6157 28DA                                            l6181 1DD6  
                                          l6165 2B1C                                            l6261 138A  
                                          l6253 1328                                            l6245 12F6  
                                          l6237 129C                                            l6405 0A62  
                                          l6413 0AE8                                            l6341 07E8  
                                          l7061 1006                                            l7053 0F56  
                                          l7125 1238                                            l7045 0F2E  
                                          l5533 2E28                                            l7221 05AC  
                                          l7205 053C                                            l7213 0566  
                                          l7037 1FA4                                            l7029 1F84  
                                          l5541 2CBC                                            l5381 20DE  
                                          l5373 20B6                                            l5365 2096  
                                          l5437 2D86                                            l5429 2D64  
                                          l7301 2B10                                            l1998 1636  
                                          l5471 2F60                                            l4735 2644  
                                          l4727 260E                                            l5527 2A0A  
                                          l5463 1BEE                                            l5455 1B90  
                                          l5447 1B48                                            l5439 1B0E  
                                          l4911 2A82                                            l4903 2A74  
                                          l7151 239A                                            l6511 19EC  
                                          l6503 19C0                                            l6319 17A2  
                                          l6159 28E6                                            l6191 1E3C  
                                          l6183 1DE2                                            l6175 1DA4  
                                          l6271 13FA                                            l6255 1338  
                                          l6247 12FE                                            l6239 12C6  
                                          l6431 0B80                                            l6415 0B10  
                                          l6423 0B3E                                            l6407 0A70  
                                          l6351 0840                                            l6343 0810  
                                          l7071 1064                                            l7063 1020  
                                          l7055 0F6E                                            l7047 0F3A  
                                          l5551 22B6                                            l7231 065C  
                                          l7223 05B8                                            l7215 0578  
                                          l7207 0544                                            l7039 1FB0  
                                          l5535 2CE6                                            l5543 2CD8  
                                          l4831 2FBA                                            l5383 210C  
                                          l5375 20BA                                            l5367 20AA  
                                          l4737 2648                                            l4729 262E  
                                          l5529 2A0E                                            l5457 1BC2  
                                          l5449 1B5E                                            l5385 2EDE  
                                          l4913 2A86                                            l4905 2A78  
                                          l7161 23FA                                            l7153 23B0  
                                          l6513 19FE                                            l6505 19D2  
                                          l6169 2E02                                            l6329 1856  
                                          l6193 1E50                                            l6185 1DF6  
                                          l6177 1DB4                                            l6281 149E  
                                          l6273 1400                                            l6265 13C4  
                                          l6249 1304                                            l6425 0B4C  
                                          l6417 0B1E                                            l6409 0AAC  
                                          l6353 0842                                            l6345 081E  
                                          l6521 24F0                                            l6601 238C  
                                          l7073 107A                                            l7081 1120  
                                          l7057 0F84                                            l7065 102A  
                                          l7049 0F46                                            l5553 22E2  
                                          l5561 1C22                                            l7241 06A0  
                                          l7233 065E                                            l7225 062E  
                                          l7217 0588                                            l7209 054E  
                                          l5481 300A                                            l4921 2F02  
                                          l5537 2D02                                            l5393 2654  
                                          l4833 2FAC                                            l5377 20BE  
                                          l5369 20AE                                            l5467 2F22  
                                          l4739 264C                                            l4851 242A  
                                          l5459 1BD2                                            l4915 2A8A  
                                          l4907 2A7C                                            l4771 29B4  
                                          l4931 2E4A                                            l7155 23CA  
                                          l5475 3060                                            l6611 3010  
                                          l6531 2DA0                                            l6507 19D6  
                                          l6451 18A2                                            l6603 2F0C  
                                          l6339 2C32                                            l6443 2962  
                                          l6187 1E0A                                            l6179 1DC8  
                                          l6291 1508                                            l6283 14B8  
                                          l6275 1406                                            l6267 13D6  
                                          l6259 1378                                            l6419 0B32  
                                          l6371 086C                                            l6363 0860  
                                          l6355 0854                                            l6347 0830  
                                          l6523 2516                                            l7091 1176  
                                          l7075 10F0                                            l7067 1040  
                                          l7059 0FFA                                            l5555 22FA  
                                          l5547 22AA                                            l5571 1C74  
                                          l7251 06F8                                            l7243 06B2  
                                          l7235 066E                                            l7219 059C  
                                          l7227 063A                                            l4923 2F04  
                                          l7171 1FF6                                            l7163 1FE6  
                                          l5395 2658                                            l4835 2FC8  
                                          l4827 2F9E                                            l5379 20CE  
                                          l4933 219C                                            l4861 3020  
                                          l4853 2444                                            l6541 2D56  
                                          l6621 2126                                            l6613 2112  
                                          l4909 2A80                                            l4781 29C4  
                                          l4773 29B8                                            l4765 29A4  
                                          l7157 23DA                                            l5477 305C  
                                          l6533 2DA4                                            l6525 2D8C  
                                          l6701 0CB6                                            l6509 19E8  
                                          l6461 18E0                                            l6453 18B4  
                                          l6605 2F18                                            l6445 2966  
                                          l6197 2B54                                            l6189 1E0E  
                                          l6293 151E                                            l6285 14D2  
                                          l6269 13EA                                            l6277 1464  
                                          l6381 08F2                                            l6349 0834  
                                          l6429 0B58                                            l6517 24DA  
                                          l7093 117A                                            l7085 113A  
                                          l7077 10FC                                            l7069 104C  
                                          l5549 22AE                                            l5573 1C86  
                                          l5565 1C2E                                            l7261 0722  
                                          l7253 0708                                            l7237 067E  
                                          l7229 064C                                            l7245 06C2  
                                          l4925 2F06                                            l4917 2EF6  
                                          l7181 2054                                            l7173 2012  
                                          l7165 1FEA                                            l5397 2678  
                                          l4829 2F90                                            l4943 21F8  
                                          l4871 2E86                                            l4863 2E6C  
                                          l4855 244C                                            l4847 2408  
                                          l6631 213A                                            l6623 212E  
                                          l6615 211A                                            l4783 29C8  
                                          l4775 29BC                                            l4767 29AC  
                                          l7159 23F2                                            l5479 301A  
                                          l6527 2D9A                                            l6535 2DAA  
                                          l6711 0D04                                            l6471 1910  
                                          l6463 18E4                                            l6455 18B8  
                                          l6551 281C                                            l6447 298C  
                                          l6287 14F2                                            l6279 1480  
                                          l6391 098C                                            l6383 091A  
                                          l6375 0878                                            l6367 0866  
                                          l6359 085A                                            l6519 24E2  
                                          l7087 1168                                            l7079 1116  
                                          l5575 1CB2                                            l5567 1C3C  
                                          l5559 1BF8                                            l7271 0752  
                                          l7263 0728                                            l7255 0714  
                                          l7247 06D4                                            l7239 0690  
                                          l7191 046C                                            l4919 2EFE  
                                          l7175 2026                                            l7183 2064  
                                          l7167 1FF0                                            l5399 267A  
                                          l4945 21FC                                            l4881 26F4  
                                          l4873 26A8                                            l4865 2E74  
                                          l4857 2452                                            l4849 2410  
                                          l6641 2188                                            l6633 213C  
                                          l6625 2130                                            l6617 211E  
                                          l4777 29BE                                            l4769 29B0  
                                          l6609 2FF2                                            l6537 2DAE  
                                          l6529 2D9C                                            l6721 0D4E  
                                          l6713 0D14                                            l6705 0CCA  
                                          l6801 0062                                            l6481 194E  
                                          l6473 1922                                            l6465 18F6  
                                          l6457 18CA                                            l6561 2840  
                                          l6553 282C                                            l6449 2990  
                                          l6545 2E8C                                            l6297 16FC  
                                          l6289 14F8                                            l6393 099A  
                                          l6385 0950                                            l6377 08D0  
                                          l7097 1184                                            l7089 116C  
                                          l5569 1C54                                            l7281 078C  
                                          l7273 075E                                            l7265 0734  
                                          l7257 0718                                            l7249 06E4  
                                          l7193 0470                                            l4929 3050  
                                          l7185 207C                                            l7177 202A  
                                          l7169 1FF2                                            l4947 2212  
                                          l4939 21A4                                            l4883 26F8  
                                          l4875 26AC                                            l4867 2E78  
                                          l4859 3028                                            l6539 2D3A  
                                          l6643 218E                                            l6635 214A  
                                          l6627 2132                                            l6619 2122  
                                          l4779 29C0                                            l5691 2D10  
                                          l6731 0D9C                                            l6723 0D5A  
                                          l6715 0D1C                                            l6707 0CE4  
                                          l6651 0BAE                                            l6811 008E  
                                          l6803 0068                                            l6491 197E  
                                          l6483 1952                                            l6475 1926  
                                          l6467 18FA                                            l6459 18CE  
                                          l6571 288C                                            l6563 285C  
                                          l6555 2838                                            l6547 27F0  
                                          l6299 1710                                            l6387 095E  
                                          l6379 08F0                                            l7099 11B2  
                                          l7291 07DE                                            l7283 0790  
                                          l7267 0738                                            l7259 071E  
                                          l7275 0762                                            l7195 0482  
                                          l7187 042A                                            l7179 204C  
                                          l4891 2F74                                            l5771 2DE8  
                                          l4877 26BC                                            l4869 2E82  
                                          l6645 2190                                            l6637 2154  
                                          l6629 2136                                            l5693 2D34  
                                          l6733 0DB2                                            l6741 0DE2  
                                          l6725 0D78                                            l6717 0D2C  
                                          l6709 0CF4                                            l6661 0BE2  
                                          l6653 0BB0                                            l6901 03EE  
                                          l6821 00E4                                            l6813 009E  
                                          l6805 006E                                            l6493 1990  
                                          l6485 1964                                            l6477 1938  
                                          l6469 190C                                            l6565 286C  
                                          l6557 283C                                            l6549 280C  
                                          l6397 09E6                                            l6389 096C  
                                          l6581 271E                                            l7285 0796  
                                          l7277 0774                                            l7269 073C  
                                          l7197 04B0                                            l7189 0430  
                                          l5781 2DFC                                            l5773 2DEC  
                                          l5765 2DDC                                            l7293 2AE4  
                                          l4879 26CA                                            l6639 2170  
                                          l6591 2FE4                                            l6743 0DF0  
                                          l6735 0DB8                                            l6727 0D7A  
                                          l6719 0D40                                            l6671 0C14  
                                          l6655 0BC0                                            l6663 0BEA  
                                          l6647 0B94                                            l6911 0418  
                                          l6903 03FE                                            l6831 0124  
                                          l6815 00AE                                            l6807 007C  
                                          l6495 1994                                            l6487 1968  
                                          l6479 193C                                            l6567 287C  
                                          l6399 09F8                                            l6583 273A  
                                          l6575 26FC                                            l7287 07AA  
                                          l7279 0788                                            l7199 04C0  
                                          l4887 2FD6                                            l5775 2DF0  
                                          l5767 2DE0                                            l7295 2AE8  
                                          l5689 2F38                                            l6753 0E5A  
                                          l6761 0EA2                                            l6745 0DF4  
                                          l6737 0DC2                                            l6729 0D8A  
                                          l6681 0C48                                            l6673 0C16  
                                          l6665 0BFA                                            l6657 0BD0  
                                          l6649 0BA0                                            l6905 040C  
                                          l6841 016E                                            l6833 0130  
                                          l6825 00F8                                            l6817 00B4  
                                          l6809 007E                                            l6921 1A30  
                                          l6497 19A6                                            l6489 197A  
                                          l6569 2888                                            l7481 08A2  
                                          l6577 270E                                            l6593 2322  
                                          l7473 1152                                            l7289 07AE  
                                          l4889 2F82                                            l5777 2DF4  
                                          l5769 2DE4                                            l7297 2AEA  
                                          l4899 2A6A                                            l6587 3058  
                                          l6771 0F0C                                            l6763 0EBC  
                                          l6755 0E66                                            l6747 0E02  
                                          l6739 0DD0                                            l6691 0C8E  
                                          l6675 0C26                                            l6683 0C50  
                                          l6667 0C00                                            l6659 0BE0  
                                          l6907 040E                                            l6851 01C0  
                                          l6843 017A                                            l6835 0148  
                                          l6827 0104                                            l6819 00D4  
                                          l6931 1A7E                                            l6923 1A5A  
                                          l6915 1A06                                            l6499 19AA  
                                          l7483 17C4                                            l6579 2716  
                                          l6595 232E                                            l7475 119C  
                                          l5779 2DF8                                            l7299 2B0C  
                                          l6589 3054                                            l6773 0F1A  
                                          l6765 0ED2                                            l6757 0E74  
                                          l6749 0E30                                            l6693 0C92  
                                          l6685 0C60                                            l6677 0C36  
                                          l6669 0C06                                            l6909 0414  
                                          l6861 023E                                            l6853 01D0  
                                          l6845 018A                                            l6837 0154  
                                          l6829 010E                                            l6941 1AAA  
                                          l6925 1A5C                                            l6917 1A1C  
                                          l6597 234A                                            l7477 120A  
                                          l6775 0F20                                            l6767 0EEC  
                                          l6759 0E9E                                            l6687 0C76  
                                          l6679 0C46                                            l6871 02B8  
                                          l6863 0274                                            l6855 01EC  
                                          l6847 0196                                            l6839 0160  
                                          l6791 001C                                            l6951 1ADA  
                                          l6927 1A6C                                            l6599 2380  
                                          l7479 1250                                            l6777 0F22  
                                          l6769 0F08                                            l6689 0C86  
                                          l6697 0CA6                                            l6881 0318  
                                          l6873 02CA                                            l6865 0282  
                                          l6857 01F8                                            l6849 01A6  
                                          l6793 002C                                            l6785 0000  
                                          l6953 1AEA                                            l6937 1A96  
                                          l6929 1A70                                            l6961 155A  
                                          l6699 0CB6                                            l6891 0386  
                                          l6875 02D8                                            l6867 02A0  
                                          l6859 0214                                            l6795 003C  
                                          l6787 000C                                            l6955 1AFA  
                                          l6947 1ABE                                            l6939 1AA0  
                                          l6971 15D8                                            l6963 1568  
                                          l6885 0342                                            l6893 038A  
                                          l6877 02DC                                            l6869 02AA  
                                          l6797 004C                                            l6789 001A  
                                          l6949 1ACA                                            l6981 162C  
                                          l6973 15E0                                            l6965 15AE  
                                          l6895 03A4                                            l6887 034E  
                                          l6879 02EA                                            l6799 0052  
                                          l6991 16A2                                            l6983 1668  
                                          l6975 15EC                                            l6967 15C4  
                                          l6959 154A                                            l6897 03B8  
                                          l6889 035C                                            l6993 16A6  
                                          l6985 1674                                            l6977 161E  
                                          l6899 03D2                                            l6995 16CA  
                                          l6987 1682                                            l6979 1620  
                                          l6997 16DA                                            l6989 16A0  
                                          l6999 16E8                                            STR_1 FFF6  
                                          STR_2 FFF6                                            STR_3 FFFB  
                                          _LATA 000F82                                            _LATB 000F83  
                                          _LATC 000F84                                            _LATD 000F85  
                                          _LATE 000F86                                            u3500 26BC  
                                          u4300 2A22                                            u4220 2EF2  
                                          u3420 29D8                                            u5020 25B2  
                                          u5100 27E2                                            u3501 26B8  
                                          u4301 2A1E                                            u4221 2EEC  
                                          u3421 29D4                                            u5021 25AE  
                                          u5101 27DE                                            u3510 26CA  
                                          u4230 2EF4                                            u5030 25C2  
                                          u5110 291C                                            u4310 22E2  
                                          u3511 26C6                                            u5031 25BE  
                                          u5111 2918                                            u4311 22DE  
                                          u3520 26E0                                            u4240 1B38  
                                          u6000 0D4E                                            u5040 25EE  
                                          u5200 2ADC                                            u5120 2B4C  
                                          u4320 22FA                                            u3521 26DA  
                                          u4241 1B34                                            u6001 0D4A  
                                          u5041 25EA                                            u5201 2AD6  
                                          u5121 2B46                                            u4321 22F6  
                                          u3530 26E2                                            u4250 1B5A  
                                          u6010 0D78                                            u5210 2ADE  
                                          u5050 1CEC                                            u5130 2B4E  
                                          u4330 1C22                                            u4251 1B56  
                                          u3435 29E0                                            u6011 0D74  
                                          u5051 1CE8                                            u4331 1C1E  
                                          u3380 260E                                            u3540 26F4  
                                          u4260 1B90                                            u3436 29E2  
                                          u6100 0E74                                            u6020 0D9C  
                                          u5060 1CFE                                            u5140 1DB4  
                                          u5220 2570                                            u5300 129C  
                                          u4340 1C54                                            u3381 260A  
                                          u3541 26F0                                            u4261 1B8C  
                                          u6101 0E70                                            u6021 0D98  
                                          u5061 1CFA                                            u5141 1DB0  
                                          u5221 256A                                            u5301 1298  
                                          u4341 1C50                                            u3390 2640  
                                          u3470 2424                                            u3550 2A9A  
                                          u6110 0EBC                                            u6030 0DB2  
                                          u5070 1D26                                            u5150 1DD6  
                                          u5230 2572                                            u5310 12C6  
                                          u4350 1C74                                            u3391 263C  
                                          u3551 2A96                                            u6111 0EB8  
                                          u6031 0DAE                                            u5071 1D22  
                                          u5151 1DD2                                            u5311 12C2  
                                          u4351 1C70                                            u3480 2444  
                                          u4280 1BD2                                            u6120 0EEC  
                                          u6040 0DD0                                            u6200 00D4  
                                          u5080 1D5C                                            u5160 1E2C  
                                          u5240 2588                                            u5400 1480  
                                          u5320 1328                                            u4360 1C86  
                                          u3481 2440                                            u4281 1BCE  
                                          u6121 0EE8                                            u6041 0DCC  
                                          u6201 00D0                                            u5081 1D58  
                                          u5161 1E28                                            u5241 2584  
                                          u5401 147C                                            u5321 1324  
                                          u4361 1C82                                            u3490 246A  
                                          u4274 1BA8                                            u6130 0F1A  
                                          u6050 0DF0                                            u6210 00E4  
                                          u5090 27D2                                            u5250 2BBC  
                                          u5170 1E3C                                            u5410 149E  
                                          u5330 1372                                            u4370 1CB2  
                                          u3491 2466                                            u3475 241E  
                                          u4275 1BA2                                            u6131 0F16  
                                          u6051 0DEC                                            u6211 00E0  
                                          u5251 2BB6                                            u5171 1E38  
                                          u5411 149A                                            u5331 136C  
                                          u4371 1CAE                                            u3580 21F4  
                                          u6060 0E02                                            u6300 03A4  
                                          u6220 025E                                            u6140 001A  
                                          u5260 2BBE                                            u5500 1852  
                                          u5180 2B84                                            u5420 14B8  
                                          u5340 1374                                            _PMD0 000EDC  
                                          u3581 21F0                                            u3565 2AA2  
                                          u6061 0DFE                                            u6301 03A0  
                                          u6141 0016                                            u5181 2B7E  
                                          u5421 14B4                                            _PMD1 000EDD  
                                          u3590 2212                                            u3566 2AA4  
                                          u6070 0E30                                            u6310 03D2  
                                          u6230 02B8                                            u6150 002C  
                                          u5270 2766                                            u5510 1868  
                                          u5190 2B86                                            u5430 14D2  
                                          u5350 138A                                            _PMD2 000EDE  
                                          u3591 220E                                            u6071 0E2C  
                                          u6311 03CE                                            u6231 02B4  
                                          u6151 0028                                            u5271 2762  
                                          u5511 1864                                            u5431 14CE  
                                          u5351 1386                                            _PMD3 000EDF  
                                          u6080 0E46                                            u6320 040C  
                                          u6240 02D8                                            u6160 003C  
                                          u6400 155A                                            u5280 2794  
                                          u5520 187A                                            u5440 14E2  
                                          u5360 13BE                                            u5600 09E2  
                                          _PMD4 000EE0                                            u6081 0E42  
                                          u6321 0408                                            u6241 02D4  
                                          u6225 0254                                            u6161 0038  
                                          u6401 1556                                            u5097 27C8  
                                          u5281 2790                                            u5521 1876  
                                          u5441 14DE                                            u5361 13B8  
                                          _PMD5 000EE1                                            u3578 21B6  
                                          u6090 0E5A                                            u6250 02EA  
                                          u6170 007C                                            u6330 1A1C  
                                          u6410 1568                                            u5450 14F2  
                                          u5370 13C0                                            u5290 1280  
                                          u5610 09F8                                            u3579 21D0  
                                          u6091 0E56                                            u6251 02E6  
                                          u6171 0078                                            u6331 1A18  
                                          u6411 1564                                            u5451 14EE  
                                          u5291 127C                                            u5611 09F4  
                                          u6260 0318                                            u6180 008E  
                                          u6340 1A50                                            u6420 15C4  
                                          u5700 18F6                                            u5460 1738  
                                          u5380 13D6                                            u5620 0A20  
                                          u5540 0810                                            u6261 0314  
                                          u6181 008A                                            u6421 15C0  
                                          u5701 18F2                                            u5461 1734  
                                          u5381 13D2                                            u5621 0A1C  
                                          u5541 080C                                            u6270 032E  
                                          u6190 009E                                            u6350 1A7E  
                                          u6430 161A                                            u5710 190C  
                                          u5470 1772                                            u5390 143E  
                                          u5630 0A48                                            u5550 08E2  
                                          u6510 0F84                                            u6271 032A  
                                          u6191 009A                                            u6351 1A7A  
                                          u6431 1616                                            u5711 1908  
                                          u5471 176E                                            u5631 0A44  
                                          u5551 08DE                                            u6511 0F80  
                                          u6280 0342                                            u6360 1A92  
                                          u6440 1664                                            u5800 19D2  
                                          u5720 1922                                            u5480 178E  
                                          u5640 0B10                                            u5560 08F0  
                                          u6520 1040                                            u6600 0482  
                                          u6281 033E                                            u6361 1A8E  
                                          u6345 1A46                                            u6441 1660  
                                          u5801 19CE                                            u5721 191E  
                                          u5481 178A                                            u5641 0B0C  
                                          u5561 08EC                                            u6521 103C  
                                          u6601 047E                                            u6290 035C  
                                          u6370 1ABA                                            u6450 1682  
                                          u5810 19E8                                            u5730 1938  
                                          u5538 2C44                                            u5650 2988  
                                          u5490 1850                                            u5570 091A  
                                          u6530 107A                                            u6610 04AA  
                                          u6291 0358                                            u6371 1AB6  
                                          u6451 167E                                            u5811 19E4  
                                          u5731 1934                                            u5539 2C60  
                                          u5491 184A                                            u5395 142C  
                                          u5571 0916                                            u6531 1076  
                                          u6611 04A4                                            u6380 1ADA  
                                          u6460 1692                                            u5820 19FE  
                                          u5740 194E                                            u5660 29A2  
                                          u5580 095E                                            u6540 1136  
                                          u6700 0578                                            u6620 04AC  
                                          u6508 1FC6                                            u6381 1AD6  
                                          u6461 168E                                            u5821 19FA  
                                          u5741 194A                                            u5661 299E  
                                          u5581 095A                                            u6541 1132  
                                          u6701 0574                                            u6509 1FE0  
                                          u6550 23B0                                            u5910 0BAE  
                                          u6390 1AEA                                            u6470 16A0  
                                          u5750 1964                                            u5670 18B4  
                                          u5590 09E0                                            u5830 2536  
                                          u6710 0588                                            u6630 04C0  
                                          u6551 23AC                                            u5911 0BAA  
                                          u6391 1AE6                                            u6471 169C  
                                          u5751 1960                                            u5671 18B0  
                                          u5591 09DA                                            u5831 2532  
                                          u6711 0584                                            u6631 04BC  
                                          u6560 23CA                                            u5840 2D9A  
                                          u5920 0BC0                                            u6480 16DA  
                                          u5760 197A                                            u5680 18CA  
                                          u6800 06F8                                            u6720 059C  
                                          u6640 04E8                                            u5905 2198  
                                          u6561 23C6                                            u5841 2D96  
                                          u5921 0BBC                                            u6481 16D6  
                                          u5761 1976                                            u5681 18C6  
                                          u5657 297E                                            u6801 06F4  
                                          u6721 0598                                            u6641 04E2  
                                          u5850 2D56                                            u5906 219A  
                                          u5930 0BD0                                            u6490 16E8  
                                          u5770 1990                                            u5690 18E0  
                                          u6810 0774                                            u6730 064C  
                                          u6650 04EA                                            u6570 2012  
                                          u5851 2D52                                            u5931 0BCC  
                                          u6491 16E4                                            u5771 198C  
                                          u5691 18DC                                            u6811 0770  
                                          u6731 0648                                            u6571 200E  
                                          u5940 0C14                                            u5780 19A6  
                                          u5860 281C                                            u6820 0788  
                                          u6740 065C                                            u6660 051E  
                                          u5941 0C10                                            u5781 19A2  
                                          u5861 2818                                            u6821 0784  
                                          u6741 0658                                            u6661 0518  
                                          u5950 0C26                                            u5790 19BC  
                                          u5870 286C                                            u6830 07AA  
                                          u6750 066E                                            u6670 0520  
                                          u6590 046C                                            u5951 0C22  
                                          u5791 19B8                                            u5871 2868  
                                          u6831 07A6                                            u6751 066A  
                                          u6591 0468                                            u5880 214A  
                                          u5960 0C36                                            u6840 07DE  
                                          u6760 0690                                            u6680 0534  
                                          u5881 2146                                            u5961 0C32  
                                          u6841 07DA                                            u6761 068C  
                                          u6681 0530                                            u5890 2188  
                                          u5970 0C76                                            u6770 06B2  
                                          u6690 055E                                            u5891 2184  
                                          u5971 0C72                                            u6771 06AE  
                                          u6691 055A                                            u5980 0CB6  
                                          u6780 06D4                                            u6588 0442  
                                          u5981 0CB2                                            u6781 06D0  
                                          u6589 045C                                            u5990 0D2C  
                                          u6790 06E4                                            u5991 0D28  
                                          u6791 06E0                                            u6857 1012  
                                          u6867 1108                                            _WPUA 000F0B  
                                          _WPUB 000F13                                            _WPUC 000F1B  
                                          _WPUD 000F20                                            _WPUE 000F28  
                        _CRCInitializeBurstMode 2F4C                                   _EUSART1_Write 259E  
                                          _dbuf 008C                                            _atoi 16FC  
                                          _main 2AE4                                   ?_EUSART1_Read 0001  
                                          _prec 007C                                 _TMR0_StartTimer 3060  
                                          _uart FEB3                                            _nout 0078  
                                          pad@i 0020                                            pad@p 001D  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0022  
                                          fsr2l 000FD9                                            btemp 0059  
                                          _xtoa 1270                                   getADCMode@num 000B  
                        ??_getADCCharacteristic 0009                                            prodh 000FF4  
                                          prodl 000FF3                            __end_of_cmd_adc_read FF34  
                                          start 0122                   __size_of_CRC_SCAN_StopScanner 0008  
                   readChecksum@checkSumLowByte 000E                                 ___fldiv@new_exp 0026  
                                ??_LogDataToPFM 0018                      ??_TMR1_SetInterruptHandler 000A  
                fp__EUSART1_DefaultErrorHandler 0000                        __end_of_sendADCCValueBLE 239A  
                                  ?_readDataPtr 0009                                    ___param_bank 000000  
             __end_of_CRC_SCAN_HasScanCompleted 26FC                                           ??_pad 001F  
                     __size_of_DATAEE_WriteByte 0042                               ?_StartCRCPeekMode 0001  
                       __end_of_TMR0_Initialize 2D8C                  ??_TMR0_DefaultInterruptHandler 0001  
                       __end_of_resp_conn_param FEF9                  __size_of_OSCILLATOR_Initialize 0018  
              __size_of_ADCCBurstModeInitialize 000C                   __end_of_OSCILLATOR_Initialize 2EDE  
                       __end_of_ApplicationTask 07E8                              ??_StartCRCPeekMode 000F  
                         _eusart1RxStatusBuffer 0060                                   ___fltol@sign1 004F  
                                         _ADACQ 000F57                                           _ADCAP 000F58  
                                         _ADACT 000F51                                           ?_atoi 000E  
                                         ?_main 0001                                           _ADCLK 000F52  
                                         _ADCNT 000F62                                           _ADPCH 000F5A  
                               __end_of___fldiv 0F2E                                           _ADREF 000F53  
                                         _ADPRE 000F59                                           _ADRPT 000F61  
                               __end_of___flmul 042A                                 __end_of___fltol 1B0C  
                               _TMR1_StartTimer 3058                                           _T1CLK 000FD1  
                                         ?_xtoa 0024                                           _T1CON 000FCE  
                    _ADCC_ADTI_InterruptHandler 00E8                                           i2l211 008A  
                                         i2l220 010E                                           i2l213 00C6  
                                         i2l134 295C                                           i2l214 010E  
                                         i2l151 3068                                           i2l215 00EA  
                                         i2l144 1F2A                                           i2l208 0040  
                                         i2l137 2960                                           i2l154 3044  
                                         i2l148 2CBA                                           i2l157 304A  
                               _TMR0_WriteTimer 3018                                           i2l614 306A  
                                         i2l608 2C2E                                           i2l720 2A68  
                                         i2l707 2DDA                                           i2l662 3066  
                                         i2l726 3064                                           i2l656 2BF8  
                                         _OSCEN 000ED7                                    vfpfcnvrt@fmt 004D  
                        ??_FLASHWriteWordSingle 0013                                           _TMR0H 000FD3  
                                  vfpfcnvrt@llu 00B3                                           _TMR1H 000FCD  
                                         _TMR0L 000FD2                                           _TMR1L 000FCC  
                                         _TRISA 000F87                                           _TRISB 000F88  
                                         _TRISC 000F89                                           _TRISD 000F8A  
                                         _TRISE 000F8B                       ??_CRC_CalculatedResultGet 0010  
             __size_of_TMR0_SetInterruptHandler 000E                       ?_TMR0_SetInterruptHandler 0007  
                          _EUSART1_Transmit_ISR 291E                                __end_of_TMR0_ISR 2BFA  
                              __end_of_TMR1_ISR 2A6A                                 _DATAEE_ReadByte 2EF6  
                                         _flags 007E                       __size_of_CRC_ReverseValue 006C  
                                         _fputc 1CDA                                 __end_of_isalpha 2AE4  
                                         _fputs 28DA                                 __end_of_isdigit 2BC4  
                                         atoi@n 001B                                           pad@fp 0019  
                                         atoi@s 000E                                   ?_InitialSetup 0001  
                                         _width 007A               __size_of_CRC_SCAN_SetAddressLimit 0020  
                                         _putch 2FFE                       readDataPtr@addressLowByte 000E  
                               __end_of_islower 2B54                       ?_CRC_SCAN_SetAddressLimit 0007  
                               __end_of_isspace 27A0                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 28DA                                 __end_of_isupper 2B8C  
                                         pclath 000FFA                                           tablat 000FF5  
                         __size_of_writeDataPtr 0022                          fp__EUSART1_is_rx_ready 0000  
                                ??_EUSART1_Read 0007                    __size_of_ADCC_GetFilterValue 0014  
                                         ttemp5 005A                                           ttemp6 005D  
                                         ttemp7 0061                 CRC_SCAN_HasScanCompleted@status 0008  
                                         status 000FD8                                           wtemp8 005A  
                               __end_of_sprintf 274E                                           xtoa@c 0049  
                                         xtoa@d 0026                                           xtoa@i 0047  
                                         xtoa@n 003F                                           xtoa@p 003B  
                                         xtoa@w 003D                                           xtoa@x 002E  
                        ?_CRC_SCAN_StartScanner 0001                           __end_of_cmd_adc_write FF60  
                               __end_of_strncmp 1CDA                                 __end_of_toupper 259E  
                           writeDataPtr@dataPtr 000B           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 306A     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 3068                                 _TMR1_WriteTimer 2D8C  
                     ??_ADCCBasicModeInitialize 0007                                    _toupper$2902 0013  
                     _ADCC_UserInterruptHandler 3038                                 __initialization 2C62  
                                  __end_of_atoi 18A0                                   ?_readChecksum 0009  
                    __end_of_EUSART1_Initialize 2112                                    __end_of_main 2B1C  
                                  __end_of_uart FED1                                    __end_of_xtoa 1548  
                           _flashCrcErrorStatus 0084                           __end_of_cmd_advertise FF05  
                   ?_INTERRUPT_InterruptManager 0001                                ??_CRC_Initialize 0007  
                                        ??_atoi 0010                                          ??_main 0053  
                          __size_of_getHexValue 0166                                ?_BLE2ClickGetstr 0001  
                                        ??_xtoa 002F                                   __activetblptr 000003  
                       __size_of_FLASH_ReadWord 002A                                 _BLE2_SendBuffer 2962  
                         ?_EUSART1_Transmit_ISR 0001                                    _writeDataPtr 2E4A  
                           CRC_ReverseValue@crc 0007                  processADCCommand@dataRead_2152 0142  
                                        _ADACCH 000F6C                                          _ADACCL 000F6B  
                       __end_of_TMR0_StartTimer 3064                                          _ADCON0 000F5B  
                                        _ADCON1 000F54                                          _ADCON2 000F55  
                                        _ADCON3 000F56                                 _BLE2_SendString 2E8C  
                                ??_InitialSetup 0018                                          _ADERRH 000F6A  
                                        _ADERRL 000F69                                          ?_fputc 0009  
                                        _ADLTHH 000F66                                          _ADLTHL 000F65  
                                        ?_fputs 0012                                          _ADRESH 000F5F  
                                        _ADRESL 000F5E                                          _ADSTAT 000F60  
                                        _ADUTHH 000F68                                          _ADUTHL 000F67  
                                        _ANSELA 000F0C                                          ?_putch 0001  
                                        _ANSELB 000F14                                          _ANSELC 000F1C  
                                        _ANSELD 000F21                                          _ANSELE 000F29  
                                        _T0CON0 000FD4                                          _T0CON1 000FD5  
                                        _T1GATE 000FD0                                          _T1GCON 000FCF  
                      __end_of_cmd_factoryreset FFE8                                 _BLE2_WakeModule 3050  
                                        _RC1REG 000F98                                          _RC1STA 000F9C  
                                        _RC2PPS 000EF4                         TMR1_WriteTimer@timerVal 0007  
                                        _ODCONA 000F0A                                          _ODCONB 000F12  
                                        _ODCONC 000F1A                                          _ODCOND 000F1F  
                                        _ODCONE 000F27                    __size_of_EUSART1_is_rx_ready 0018  
                                        i2l1275 3036                                          i2l1278 303E  
                                        _INLVLA 000F08                                          _INLVLB 000F10  
                                        _INLVLC 000F18                                          _INLVLD 000F1D  
                                        i2l5701 2DC2                                          _INLVLE 000F25  
                                        i2l5391 3046                                          i2l5711 2DD6  
                                        i2l5703 2DC4                                          i2l4841 2CA2  
                                        i2l5721 2952                                          i2l5713 291E  
                                        i2l5705 2DC8                                          i2l4843 2CB2  
                                        i2l5731 1E98                                          i2l5723 2956  
                                        i2l5715 2930                                          i2l5707 2DCC  
                                        i2l4845 2CB6                                          i2l4837 2C90  
                                        i2l5389 3040                                          i2l5741 1F06  
                                        i2l5733 1EB2                                          i2l5725 1E6A  
                                        i2l5717 2940                                          i2l5709 2DD2  
                                        i2l5751 2BFA                                          i2l4839 2CA0  
                                        i2l5743 1F26                                          i2l5735 1EC0  
                                        i2l5727 1E7A                                          i2l5719 2942  
                __size_of_CRCInitializePeekMode 0014                                          i2l5753 2BFE  
                                        i2l5737 1ED0                                          i2l5729 1E88  
                                        i2l5745 2BC4                                          i2l5761 2A38  
                                        i2l5921 0038                                          i2l5755 2C14  
                                        i2l5739 1EEA                                          i2l5747 2BC8  
                                        i2l5763 2A4E                                          i2l5931 00A6  
                                        i2l5923 004E                                          i2l5749 2BDE  
                                        i2l5757 2A28                                          i2l5933 00D4  
                                        i2l5925 005C                                          i2l5917 001A  
                                        _TABLAT 000FF5                                          i2l5695 3030  
                                        i2l5759 2A2C                                          i2l5935 00E2  
                                        i2l5927 006A                                          i2l5919 002A  
                                        i2l5697 3038                                          i2l5937 00F8  
                                        i2l5929 0098                                          i2l5699 2DB4  
                                        i2l5939 0106                   __end_of_CRCInitializePeekMode 2F4C  
                     __size_of_FLASH_EraseBlock 003E                                          _OSCFRQ 000ED9  
                          __end_of_CRCBurstMode 2A28                                   vfpfcnvrt@done 00BC  
                                        _NVMDAT 000F7C                                          _RX1PPS 000EB0  
                                        _TX1REG 000F99                                          _TX1STA 000F9D  
                              __end_of_cmd_UUID FFAC                                __end_of___xxtofl 16FC  
                    ??_ADCC_GetConversionResult 0009                          __size_of_BLE2_SendByte 0032  
                              __end_of_cmd_name FEE0            __end_of_TMR1_DefaultInterruptHandler 3066  
         __size_of_TMR1_DefaultInterruptHandler 0002                    _TMR1_DefaultInterruptHandler 3064  
                                ??_readChecksum 000B                                    vfprintf@cfmt 0051  
                       __end_of_TMR1_StartTimer 305C                                    ?_TMR1_Reload 0001  
                             _ADCC_ThresholdISR 2BFA                                          ___wmul 2E02  
                                     ??___fldiv 001D                          getADCCharacteristic@ch 000E  
                                     ??___flmul 0036                                       ??___fltol 004B  
                       __end_of_TMR0_WriteTimer 3020                                          _crcObj 00AC  
                      ?_EUSART1_SetErrorHandler 0007                                ?_TMR0_Initialize 0001  
                            ?_ADCC_ThresholdISR 0001                                          clear_0 2C68  
                                        clear_1 2C74                   ApplicationTask@connection_end 00DF  
                                        pad@buf 001B                                ?_ApplicationTask 0001  
              ??_EUSART1_SetOverrunErrorHandler 000A                 ?_EUSART1_SetOverrunErrorHandler 0007  
                       ApplicationTask@adcValue 00E0                         __end_of_DATAEE_ReadByte 2F0C  
                                        _strcmp 22AA                                          _strlen 27A0  
                              __end_of_resp_AOK FEFD                                 _ADCC_Initialize 2474  
                                        fputc@c 0009                                  _PMD_Initialize 2EAA  
                                        fputs@c 0016                                          fputs@i 0017  
                       FLASH_ReadWord@flashAddr 0007                                          fputs@s 0012  
                                     ??_isalpha 0009                                __end_of_resp_cmd FF01  
                                     ??_isdigit 0009                             ??_ADCC_ThresholdISR 0001  
                        __size_of_writeChecksum 0022                                       ??_islower 0009  
                                  __mediumconst FEB2                                       ??_isspace 0009  
                                        tblptrh 000FF7                                       ??_isupper 0009  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          __end_of_LogDataToPFM 2408                                __end_of_vfprintf 2540  
                               ??_EUSART1_Write 0007        TMR1_SetInterruptHandler@InterruptHandler 0007  
      TMR0_SetInterruptHandler@InterruptHandler 0007    ADCC_SetADTIInterruptHandler@InterruptHandler 0007  
                                     ??_sprintf 0053                         __end_of_TMR1_WriteTimer 2DB4  
                                        xtoa@fp 0024                                 _eusart1RxBuffer 0068  
                                     ??_strncmp 000D                                       ??_toupper 000F  
                             _processADCCommand 0F2E                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0070                                ?_TMR1_Initialize 0001  
                                  ___xxtofl@arg 0011                                    ___xxtofl@exp 0010  
                             _SYSTEM_Initialize 2DDC                                    ___xxtofl@val 0007  
                            ?_processADCCommand 0001                                      __accesstop 0060  
                       __end_of__initialization 2C86                              ?_SYSTEM_Initialize 0001  
                       __size_of_BLE2ClickSetup 00BA                       __size_of_ADCCSetSensorPin 0008  
                                 ___rparam_used 000001                                      ___fltol@f1 0047  
                __size_of_EUSART1_RxDataHandler 002C                       __end_of_ADCC_ThresholdISR 2C30  
                 __end_of_EUSART1_RxDataHandler 2CBC                             ??_processADCCommand 00DC  
                                __pcstackCOMRAM 0001                           __end_of_resp_conn_end FFBB  
                     _getADCCharacteristic$2136 000C                             ??_SYSTEM_Initialize 000C  
                                     ?_TMR0_ISR 0001                                       ?_TMR1_ISR 0001  
                   ??_CRC_SCAN_HasScanCompleted 0007                 fp__TMR1_DefaultInterruptHandler 0000  
                 ?_TMR1_DefaultInterruptHandler 0001                                _DATAEE_WriteByte 29A4  
                                 __end_of_fputc 1DA4                                   __end_of_fputs 291E  
                       _ADCCBurstModeInitialize 2FF2                            __size_of_readDataPtr 002A  
                       __end_of_BLE2_SendBuffer 29A4                                   __end_of_putch 3008  
                         fp__EUSART1_Initialize 0000                          __end_of_PMD_Initialize 2EC6  
                          __end_of_EUSART1_Read 2654                          __size_of_getADCCommand 0016  
                       __end_of_BLE2_SendString 2EAA                          ??_EUSART1_Transmit_ISR 0001  
                                 _BLE2_SendByte 2C30                                    _cmd_adc_read FF08  
                       __end_of_BLE2_WakeModule 3054                     __end_of_EUSART1_Receive_ISR 1F2C  
                                    _getADCMode 27F0                       __end_of_processADCCommand 1270  
                       ?_CRCInitializeBurstMode 0001                                _CRC_ReverseValue 2408  
                              ?_TMR0_StartTimer 0001                                         ??_fputc 000D  
                     __end_of_SYSTEM_Initialize 2E02                                         ??_fputs 0016  
                                       ??_putch 0008                                   _eusart1RxHead 0056  
                                 _eusart1TxHead 0058                                   _eusart1RxTail 0055  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                 _eusart1TxTail 0057               _EUSART1_TxDefaultInterruptHandler 00F7  
             CRC_SCAN_SetAddressLimit@startAddr 0007                 ??_EUSART1_SetRxInterruptHandler 000A  
                        BLE2_SendString@command 000E                     __end_of_cmd_serialized_name FEEF  
                                 _writeChecksum 2E28                            CRC_ReverseValue@mask 000C  
               __end_of_EUSART1_SetErrorHandler 2FD6                                      _crcValPeek 0082  
                                    _cmd_reboot FFE8                               ?_sendADCCValueBLE 00D6  
              __end_of_TMR0_SetInterruptHandler 2F90                         __size_of_TMR0_StopTimer 0004  
                                       ?___wmul 0007                                ?_TMR1_StartTimer 0001  
                                    ??_TMR0_ISR 0001                                      ??_TMR1_ISR 0003  
                       __end_of_ADCC_Initialize 24DA                            __end_of_InitialSetup 2082  
                              ?_TMR0_WriteTimer 0001                              ??_sendADCCValueBLE 00D8  
                                       _ADFLTRH 000F6E                                         _ADFLTRL 000F6D  
                                       _ADPREVH 000F5D                                         _ADPREVL 000F5C  
          __end_of_ADCC_SetADTIInterruptHandler 2FE4           __size_of_ADCC_SetADTIInterruptHandler 000E  
                  _ADCC_SetADTIInterruptHandler 2FD6                                         _ADSTPTH 000F64  
                                       _ADSTPTL 000F63                                         _CRCACCH 000F72  
                                       _CRCACCL 000F71                __end_of_CRC_SCAN_SetAddressLimit 2E8C  
                           getHexValue@hexvalue 0007                                 ?_PMD_Initialize 0001  
                                       _CRCDATH 000F70                                         _CRCDATL 000F6F  
                           _ADCC_GetFilterValue 2F60                                         _CRCCON0 000F77  
                                       _CRCCON1 000F78                                  _cmd_peripheral FFBB  
                                       ?_strcmp 0007                                  ?_BLE2_SendByte 0001  
                                       ?_strlen 0007          __end_of_EUSART1_SetFramingErrorHandler 2FC8  
       __size_of_EUSART1_SetFramingErrorHandler 000E                  _EUSART1_SetFramingErrorHandler 2FBA  
                       __size_of_TMR1_StopTimer 0004                                         _CRCXORH 000F76  
                                       _CRCXORL 000F75                                ?_DATAEE_ReadByte 0007  
                  __end_of_CRC_SCAN_StopScanner 3028                                  _FLASH_ReadWord 2D3A  
                                     ?___xxtofl 0007                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9B                                         _SP1BRGL 000F9A  
                __end_of_CRCInitializeBurstMode 2F60                                         _OSCCON1 000ED3  
                                       _OSCCON3 000ED5                              __size_of_vfpfcnvrt 03AC  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7A  
                                       _NVMADRL 000F79                                         _NVMADRU 000F7B  
                                       _NVMDATH 000F7D                                         _OSCTUNE 000ED8  
                                       _NVMDATL 000F7C                                         _NVMCON0 000F7F  
                                       _NVMCON2 000F81                           __size_of_CRCBurstMode 0042  
                                       _SLRCONA 000F09                                         _SLRCONB 000F11  
                                       _SLRCONC 000F19                                         _SLRCOND 000F1E  
                                       _SLRCONE 000F26                            __end_of_readChecksum 2D10  
                     _CRC_SCAN_HasScanCompleted 26A8                       __size_of_StartCRCPeekMode 002A  
                             _tmr0InterruptFlag 0085                                ?_TMR1_WriteTimer 0007  
                       ??_CRC_SCAN_StartScanner 0007                                _FLASH_EraseBlock 2A6A  
                          DATAEE_WriteByte@bAdd 0007                              _currentAdcValuePtr 0053  
                          ?_ADCC_GetFilterValue 0007                                   _getADCCommand 2F0C  
                FLASHWriteWordSingle@data_check 0013                                  ?_writeChecksum 000B  
                                       __Hparam 0000                      __size_of_ADCC_ThresholdISR 0036  
                          LogDataToPFM@adcValue 0016                                         __Lparam 0000  
                 __size_of_getADCCharacteristic 0050                       ??_ADCCBurstModeInitialize 0007  
                                       ___fldiv 0B94                                         ___flmul 0000  
                                       ___fltol 1A06                                 __size_of___wmul 0026  
                                     ?_vfprintf 00C0                          __end_of_cmd_peripheral FFC9  
                       _cmd_cleanprivateservice FFEE                    fp__TMR0_UserInterruptHandler 0000  
                           _EUSART1_is_rx_ready 2EDE                                ?_BLE2_SendBuffer 000B  
                          __size_of_TMR1_Reload 000E                         getADCCharacteristic@num 000B  
                        __end_of_FLASH_ReadWord 2D64                                         __pcinit 2C62  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready 000000  
                                       __ptext0 2AE4                                         __ptext1 2DDC  
                                       __ptext2 2890                                    _CRCBurstMode 29E6  
                                       __ptext3 2F74                                         __ptext4 2D64  
                                       __ptext5 2F82                                         __ptext6 2EAA  
                                       __ptext7 2224                                         __ptext8 2EC6  
                                       __ptext9 304C                           __size_of_LogDataToPFM 006E  
                ??_TMR1_DefaultInterruptHandler 0001                   ?_ADCC_SetADTIInterruptHandler 0007  
                               __size_of_strcmp 0078                                 __size_of_strlen 0050  
                                     _T1CONbits 000FCE                                ?_BLE2_SendString 000E  
                         _OSCILLATOR_Initialize 2EC6                                    __size_of_pad 00C6  
                                       _isalpha 2AA8                                         _isdigit 2B8C  
                                    ??___xxtofl 000B               __size_of_TMR1_SetInterruptHandler 000E  
                              ?_BLE2_WakeModule 0001                              _EUSART1_Initialize 2082  
                                       _islower 2B1C                        ??_PIN_MANAGER_Initialize 0007  
                                       _isspace 274E                       ?_TMR1_SetInterruptHandler 0007  
                                   ?_getADCMode 0001                                         _isupper 2B54  
                 __size_of_FLASHWriteWordSingle 008A                      __size_of_processADCCommand 0342  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0014  
                    __size_of_SYSTEM_Initialize 0026                                         _sprintf 26FC  
                                       _strncmp 1BF8                                         _toupper 2540  
                          end_of_initialization 2C86                                       _SCANHADRH 000F48  
                                     _SCANHADRL 000F47                                       _SCANHADRU 000F49  
                          ?_EUSART1_is_rx_ready 0001                                       _SCANLADRH 000F45  
                                     _SCANLADRL 000F44                                       _SCANLADRU 000F46  
                           ?_EUSART1_Initialize 0001                           ??_ADCC_GetFilterValue 0009  
                                ?_getADCCommand 000F                                         fputc@fp 000B  
                   _EUSART1_OverrunErrorHandler 00EE                                         fputs@fp 0014  
                   CRC_CalculatedResultGet@mask 0013                                  _BLE2ClickSetup 1F2C  
                             __end_of_resp_conn FFE1                                _ADCCSetSensorPin 3008  
         __end_of_EUSART1_SetRxInterruptHandler 2FAC          __size_of_EUSART1_SetRxInterruptHandler 000E  
                 _EUSART1_SetRxInterruptHandler 2F9E                               __end_of_vfpfcnvrt 0B94  
                                  _LogDataToPFM 239A                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                                 ??_getHexValue 0007                                ?_ADCC_Initialize 0001  
                                    ??_vfprintf 0051                            ??_EUSART1_Initialize 000A  
                                       strcmp@l 0007                                         strcmp@r 0009  
                               ??_BLE2_SendByte 0008                                  _resp_conn_data FFF3  
                                       strlen@a 0009                                         strlen@s 0007  
                         writeChecksum@checksum 000B                                 ?_FLASH_ReadWord 0007  
                      ?_CRC_CalculatedResultGet 000E                        _TMR0_SetInterruptHandler 2F82  
                                     _PORTAbits 000F8C                                   ___xxtofl@sign 000F  
                      _CRC_SCAN_SetAddressLimit 2E6C                         fp__EUSART1_Transmit_ISR 0000  
                                   ___fldiv@grs 0028                                     ___fldiv@rem 0021  
              __size_of_EUSART1_SetErrorHandler 000E                        __size_of_BLE2ClickGetstr 0088  
                           EUSART1_Write@txData 0007                           ??_EUSART1_is_rx_ready 0007  
                      __end_of_DATAEE_WriteByte 29E6                          __end_of_BLE2ClickSetup 1FE6  
                      ?_ADCCBasicModeInitialize 0001                                     ___flmul@grs 003C  
                               ??_writeChecksum 000D                                    _EUSART1_Read 25FC  
                         _CRCInitializePeekMode 2F38                            _CRC_SCAN_StopScanner 3020  
                                  getADCMode@ch 000E                           __size_of_InitialSetup 009C  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  _TMR0_StopTimer 305C  
                           __size_of_getADCMode 0050                          __end_of_resp_conn_data FFF6  
                      __end_of_CRC_ReverseValue 2474                          _resp_conn_notification FF05  
                  __end_of_INTERRUPT_Initialize 3050                  ??_ADCC_DefaultInterruptHandler 0001  
                  fp__ADCC_UserInterruptHandler 0000                       i2TMR1_WriteTimer@timerVal 0001  
                                   vfpfcnvrt@ap 004F                                     vfpfcnvrt@fp 004B  
                                __end_of___wmul 2E28                               __size_of_TMR0_ISR 0036  
                             __size_of_TMR1_ISR 0042                                 _getADCMode$2132 000C  
                                _TMR1_StopTimer 3054                          ?_OSCILLATOR_Initialize 0001  
             __size_of_ADCC_GetConversionResult 0016                       ?_ADCC_GetConversionResult 0007  
                         __size_of_readChecksum 002A                             __end_of_getHexValue 1A06  
                                __end_of_strcmp 2322                                  __end_of_strlen 27F0  
                           start_initialization 2C62                                    _SCANCON0bits 000F4A  
                      __size_of_TMR0_Initialize 0028                 __size_of_PIN_MANAGER_Initialize 0086  
                                   __end_of_pad 1E6A                        __size_of_ApplicationTask 03BE  
                       __size_of_CRC_Initialize 0054                                _StartCRCPeekMode 2D10  
 EUSART1_SetRxInterruptHandler@interruptHandler 0007   EUSART1_SetTxInterruptHandler@interruptHandler 0007  
                                   putch@txData 0008                                 ??_getADCCommand 0011  
                 __end_of_cmd_userdefineprofile FFD7                                    _InitialSetup 1FE6  
                         __end_of_EUSART1_Write 25FC                                 ?_BLE2ClickSetup 0001  
                        fp__EUSART1_Receive_ISR 0000                           ?_CRC_SCAN_StopScanner 0001  
                           DATAEE_ReadByte@bAdd 0007                                   _cmd_adc_write FF34  
                        __end_of_TMR0_StopTimer 3060                                   ??_readDataPtr 000B  
                      __size_of_TMR1_Initialize 004A                                     vfprintf@fmt 00C2  
               __end_of_CRC_CalculatedResultGet 1BF8                                ??_PMD_Initialize 0007  
                                      ??___wmul 000B                                    _readChecksum 2CE6  
               CRC_CalculatedResultGet@xorValue 000E                           _EUSART1_RxDataHandler 2C90  
              fp__EUSART1_SetRxInterruptHandler 0000                  ?_EUSART1_SetRxInterruptHandler 0007  
                        __end_of_TMR1_StopTimer 3058                      __end_of_cmd_adc_value_send FF86  
                   FLASH_EraseBlock@GIEBitValue 000B                                   _cmd_advertise FF01  
                      __end_of_FLASH_EraseBlock 2AA8                                        ??_strcmp 000B  
                                      ??_strlen 0009                                  _eusart1RxCount 008B  
                                     ___fldiv@a 0019                                       ___fldiv@b 0015  
                             BLE2_SendByte@byte 0008                                       ___flmul@a 0032  
                                     ___flmul@b 002E                                     __pbssCOMRAM 0053  
             _EUSART1_RxDefaultInterruptHandler 00F4              __size_of_TMR0_UserInterruptHandler 0008  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 00AF  
                                 __pcstackBANK1 0140                 __end_of_cmd_cleanprivateservice FFF3  
                    ?_TMR0_UserInterruptHandler 0001                       __size_of_sendADCCValueBLE 0078  
                                   _CRCCON0bits 000F77                                     _CRCCON1bits 000F78  
               __end_of_ADCCBasicModeInitialize 3018                               __size_of___xxtofl 01B4  
                       CRC_ReverseValue@reverse 000A                 ??_EUSART1_SetTxInterruptHandler 000A  
                        ADCCSetSensorPin@adcPin 0007                ??_EUSART1_SetFramingErrorHandler 000A  
               ?_EUSART1_SetFramingErrorHandler 0007                    __size_of_EUSART1_Receive_ISR 00C2  
                __size_of_CRC_SCAN_StartScanner 0008                   __end_of_CRC_SCAN_StartScanner 3030  
                        ?_CRCInitializePeekMode 0001                                       _atoi$2816 0016  
                                     _atoi$2817 001A                                       _atoi$2818 0018  
                         _TMR0_InterruptHandler 00E5                               ??_BLE2ClickGetstr 0008  
                                     __pnvBANK0 00E2                       FLASH_EraseBlock@flashAddr 0007  
                      __size_of_TMR0_StartTimer 0004                                 ?_TMR0_StopTimer 0001  
                        _PIN_MANAGER_Initialize 2224                        sendADCCValueBLE@adcValue 00D6  
                                   _crcValBurst 0080                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 2F82                                   __pmediumconst FEB2  
                                      ?___fldiv 0015                                       __ptext100 3040  
                                     __ptext101 3068                                       __ptext102 3046  
                                     __ptext103 2C90                                       __ptext104 2BFA  
                                     __ptext105 306A                                       __ptext106 3038  
                                     __ptext107 0000                                        ?___flmul 002E  
                                      ?___fltol 0047                                     _getHexValue 18A0  
                               ?_TMR1_StopTimer 0001                    ??_INTERRUPT_InterruptManager 0003  
                           __end_of_readDataPtr 2CE6                               __size_of_vfprintf 0066  
                                      _BAUD1CON 000F9E                        __end_of_ADCCSetSensorPin 3010  
                  readChecksum@checkSumHighByte 000D                        __size_of_TMR1_StartTimer 0004  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 3046  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 3040  
                                      ?_isalpha 0007                                        ?_isdigit 0007  
                  __end_of_getADCCharacteristic 2890                                   ?_writeDataPtr 000B  
                      __size_of_TMR0_WriteTimer 0008                            _EUSART1_ErrorHandler 00EB  
                                      ?_islower 0007                                        ?_isspace 0007  
                                  ??_getADCMode 0009                                        ?_isupper 0007  
                       _EUSART1_SetErrorHandler 2FC8                                       _burstMode 0087  
             __end_of_TMR0_UserInterruptHandler 3038                                        ?_sprintf 00C6  
                            _EUSART1_is_tx_done 000000                                  __size_of_fputc 00CA  
                                __size_of_fputs 0044                        __size_of_DATAEE_ReadByte 0016  
                                      ?_strncmp 0007                                        ?_toupper 000D  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 304C  
                 FLASHWriteWordSingle@flashAddr 000D                               ??_TMR0_Initialize 000A  
                        ??_CRC_SCAN_StopScanner 0007                                  ___wmul@product 000B  
                                      _LATAbits 000F82         EUSART1_SetErrorHandler@interruptHandler 0007  
                                      _LATDbits 000F85                               ??_ApplicationTask 0053  
                                      _SCANCON0 000F4A                                        _PIE0bits 000EBD  
                                      _PIE1bits 000EBE                                        _SCANTRIG 000F4B  
                                     _sectorRAM 000D00                                        _PIE3bits 000EC0  
                                      _PIE4bits 000EC1                               getADCCommand@data 0011  
                  __end_of_FLASHWriteWordSingle 219C                        __size_of_TMR1_WriteTimer 0028  
           __size_of_INTERRUPT_InterruptManager 011A                      ??_TMR0_SetInterruptHandler 000A  
                                      _PIR0bits 000EC5                                        _PIR1bits 000EC6  
                                      i2u346_40 2CB2                                        i2u346_41 2CAE  
                                      i2u451_40 1F06                                        i2u450_48 1ED6  
                                      i2u451_41 1F02                                        i2u450_49 1EEA  
                                      i2u444_40 2DC2                                        i2u444_41 2DBE  
                                      i2u452_48 1F0C                                        i2u445_40 2930  
                                      i2u453_40 2BDE                                        i2u452_49 1F22  
                                      i2u445_41 292C                                        i2u453_41 2BDA  
                                      _PIR3bits 000EC8                                        i2u446_40 2952  
                                      i2u446_41 294E                                        i2u455_40 2C14  
                                      i2u447_40 1E88                                        i2u454_48 2BE4  
                                      i2u455_41 2C10                                        i2u447_41 1E84  
                                      i2u454_49 2BF8                                        _PIR4bits 000EC9  
                                      i2u456_48 2C1A                                        i2u449_40 1EC0  
                                      i2u448_48 1E9E                                        i2u457_40 2A4E  
                                      i2u456_49 2C2E                                        i2u449_41 1EBC  
                                      i2u448_49 1EB2                                        i2u457_41 2A4A  
                                      i2u490_40 005C                                        i2u490_41 0058  
                                      i2u458_48 2A54                                        i2u491_40 006A  
                                      i2u458_49 2A68                                        i2u491_41 0066  
                                      i2u493_40 0098                                        i2u492_48 0070  
                                      i2u493_41 0094                                        i2u492_49 0086  
                                      _PIR7bits 000ECC                                       _resp_conn FFD7  
                                      i2u494_40 00A6                                        i2u494_41 00A2  
                                      i2u487_40 002A                                        i2u487_41 0026  
                                      i2u496_40 00D4                                        i2u495_48 00AC  
                                      i2u488_40 0038                                        i2u496_41 00D0  
                                      i2u495_49 00C2                                        i2u488_41 0034  
                                      i2u497_40 00E2                                        i2u489_40 004E  
                                      i2u497_41 00DE                                        i2u489_41 004A  
                                      i2u498_40 00F8                                        i2u498_41 00F4  
                              ??_FLASH_ReadWord 000B                                        i2u499_40 0106  
                                      i2u499_41 0102                          ?_EUSART1_RxDataHandler 0001  
                                 ??_TMR1_Reload 0009                                   _resp_conn_end FFAC  
                                      _TMR0_ISR 2BC4                              __end_of_getADCMode 2840  
                                      _TMR1_ISR 2A28                      ??_CRC_SCAN_SetAddressLimit 000F  
                                     _vfpfcnvrt 07E8                                       _xtoa$2782 0037  
                                     _xtoa$2783 0039                               ??_TMR1_Initialize 000A  
                                    _ADCON0bits 000F5B                                      _ADCON1bits 000F54  
                                    _ADCON2bits 000F55                                      _ADCON3bits 000F56  
                             ___wmul@multiplier 0007                                  ??_writeDataPtr 000D  
            __size_of_ADCC_UserInterruptHandler 0008                      ?_ADCC_UserInterruptHandler 0001  
                   __end_of_ADCC_GetFilterValue 2F74                        __size_of_BLE2_SendBuffer 0042  
                         DATAEE_WriteByte@bData 0009                                BLE2ClickGetstr@i 000A  
                                  _isspace$2843 000D                                  _CRC_Initialize 2654  
                                    vfpfcnvrt@c 00BB                              __end_of_cmd_reboot FFEE  
                         ?_INTERRUPT_Initialize 0001                __size_of_CRC_CalculatedResultGet 00EC  
                      __size_of_BLE2_SendString 001E                               ?_DATAEE_WriteByte 0007  
                      __size_of_BLE2_WakeModule 0004                           EUSART1_Read@readValue 0007  
                            ??_DATAEE_WriteByte 000A                        ?_ADCCBurstModeInitialize 0001  
                    readDataPtr@addressHighByte 000D                                      _ADSTATbits 000F60  
         __end_of_EUSART1_SetTxInterruptHandler 2F9E          __size_of_EUSART1_SetTxInterruptHandler 000E  
                 _EUSART1_SetTxInterruptHandler 2F90                                        __Hrparam 0000  
              __end_of_ADCC_GetConversionResult 2F38                           BLE2_SendBuffer@buffer 000B  
                             i2_TMR1_WriteTimer 2DB4                                      vfprintf@ap 00C4  
                                      __Lrparam 0000                                      vfprintf@fp 00C0  
                         BLE2_SendBuffer@length 000D                                     _readDataPtr 2CBC  
               CRC_SCAN_SetAddressLimit@endAddr 000B                        __end_of_StartCRCPeekMode 2D3A  
                            ?i2_TMR1_WriteTimer 0001                         ??_OSCILLATOR_Initialize 0007  
                             ?_CRC_ReverseValue 0007                               ??_TMR0_StartTimer 0007  
              __size_of_ADCCBasicModeInitialize 0008                                __size_of___fldiv 039A  
                              __size_of___flmul 042A                                __size_of___fltol 0106  
                   __size_of_EUSART1_Initialize 0090                                      ?_vfpfcnvrt 004B  
                      ??_CRCInitializeBurstMode 0007                              ??_CRC_ReverseValue 0009  
                      _TMR1_SetInterruptHandler 2F74                           __end_of_BLE2_SendByte 2C62  
                           __end_of_TMR1_Reload 2FF2                             ??i2_TMR1_WriteTimer 0003  
                         _TMR1_InterruptHandler 00E2                       ??_EUSART1_SetErrorHandler 000A  
           __end_of_EUSART1_DefaultErrorHandler 304C                     _EUSART1_DefaultErrorHandler 3046  
                                    sprintf@fmt 00C8                                        _cmd_UUID FF86  
                   __end_of_EUSART1_is_rx_ready 2EF6                                        ___xxtofl 1548  
                        __end_of_CRC_Initialize 26A8                                      _T0CON0bits 000FD4  
                      __size_of_ADCC_Initialize 0066                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                                ??_BLE2ClickSetup 0010  
                                      _cmd_name FED1                                _sendADCCValueBLE 2322  
               FLASHWriteWordSingle@GIEBitValue 0015                                __size_of_islower 0038  
                              __size_of_isspace 0052               __end_of_ADCC_UserInterruptHandler 3040  
                                      __ptext10 2082                                        __ptext11 2F90  
                                      __ptext20 2CBC                                        __ptext12 2F9E  
                                      __ptext21 2CE6                                        __ptext13 2FAC  
                                    _T1GCONbits 000FCF                                        __ptext30 0F2E  
                                      __ptext22 2EF6                                        __ptext14 2FBA  
                                      __ptext31 2322                                        __ptext23 1F2C  
                                      __ptext15 2FC8                                        __ptext40 1CDA  
                                      __ptext32 26FC                                        __ptext24 3050  
                                      __ptext16 2654                                        __ptext41 2FFE  
                                      __ptext33 24DA                                        __ptext25 3008  
                                      __ptext17 2474                                        __ptext50 2962  
                                      __ptext42 2B54                                        __ptext34 07E8  
                                      __ptext26 042A                                        __ptext18 2FD6  
                                      __ptext51 2C30                                        __ptext43 2AA8  
                                      __ptext35 1270                                        __ptext27 2E28  
                                      __ptext19 1FE6                                        __ptext60 0B94  
                                      __ptext52 259E                                        __ptext44 16FC  
                                      __ptext36 2540                                        __ptext28 1BF8  
                                      __ptext61 3054                                        __ptext53 2F0C  
                                      __ptext45 274E                                        __ptext37 2B1C  
                                      __ptext29 22AA                                        __ptext70 2D10  
                                      __ptext62 3058                                        __ptext54 27F0  
                                      __ptext46 2B8C                                        __ptext38 1DA4  
                                      __ptext71 239A                                        __ptext63 2FE4  
                                      __ptext55 2840                                        __ptext47 2E02  
                                      __ptext39 28DA                                        __ptext80 2F38  
                                      __ptext72 2E4A                                        __ptext64 2D8C  
                                      __ptext56 18A0                                        __ptext48 2E8C  
                                      __ptext81 2F4C                                        __ptext73 29A4  
                                      __ptext65 2FF2                                        __ptext57 1548  
                                      __ptext49 27A0                                        __ptext90 2F22  
                                      __ptext82 29E6                                        __ptext74 2A6A  
                                      __ptext66 3010                                        __ptext58 1A06  
                                      __ptext83 3020                                        __ptext75 2112  
                                      __ptext67 3018                                        __ptext59 0000  
                                      __ptext92 2A28                                        __ptext84 3028  
                                      __ptext76 2D3A                                        __ptext68 305C  
                                      __ptext93 2DB4                                        __ptext85 2E6C  
                                      __ptext77 2EDE                                        __ptext69 3060  
                                      __ptext94 3064                                        __ptext86 26A8  
                                      __ptext78 1B0C                                        __ptext95 2BC4  
                                      __ptext87 219C                                        __ptext79 2408  
                                      __ptext96 3066                                        __ptext88 25FC  
                                      __ptext97 3030                                        __ptext89 2F60  
                                      __ptext98 291E                                        __ptext99 1E6A  
                              __size_of_isupper 0038                               ??_TMR1_StartTimer 0007  
                              __size_of_sprintf 0052                         TMR0_WriteTimer@timerVal 0007  
                   DATAEE_WriteByte@GIEBitValue 000A                               ??_TMR0_WriteTimer 0007  
                                  getHexValue@x 0008                                __size_of_strncmp 00E2  
                              __size_of_toupper 005E                                   __size_of_atoi 01A4  
                                 __size_of_main 0038                  __end_of_resp_conn_notification FF08  
                                 __size_of_xtoa 02D8                       __end_ofi2_TMR1_WriteTimer 2DDC  
                         __end_of_writeChecksum 2E4A            __end_of_TMR0_DefaultInterruptHandler 3068  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 3066  
                             ??_DATAEE_ReadByte 0009                                        _resp_AOK FEF9  
                          _getADCCharacteristic 2840                                      _RC1STAbits 000F9C  
                                      _resp_cmd FEFD  EUSART1_SetOverrunErrorHandler@interruptHandler 0007  
                             _connection_status 0089                                        int$flags 0059  
                                      _vfprintf 24DA              __end_of_INTERRUPT_InterruptManager 0122  
                    _INTERRUPT_InterruptManager 0008                   _CRC_SCAN_HasScanCompleted$852 0007  
                             ??_TMR1_WriteTimer 0009                                _isCRCPeekEnabled 0086  
                   _EUSART1_FramingErrorHandler 00F1                             _EUSART1_Receive_ISR 1E6A  
                             ?_FLASH_EraseBlock 0007                                  _vfpfcnvrt$2798 00BE  
                            ??_FLASH_EraseBlock 000B                                      _INTCONbits 000FF2  
                               ?_CRC_Initialize 0001                                     _NVMCON0bits 000F7F  
                                   _NVMCON1bits 000F80                           processADCCommand@data 0144  
                          _FLASHWriteWordSingle 2112                                 _BLE2ClickGetstr 219C  
                   ??_TMR0_UserInterruptHandler 0001                                        isalpha@c 0007  
                                      isdigit@c 0007                          ??_INTERRUPT_Initialize 0007  
                            _cmd_adc_value_send FF60                         ??_CRCInitializePeekMode 0007  
               __end_of_ADCCBurstModeInitialize 2FFE                             _cmd_serialized_name FEE0  
          __end_of_ADCC_DefaultInterruptHandler 306C           __size_of_ADCC_DefaultInterruptHandler 0002  
                  _ADCC_DefaultInterruptHandler 306A                                        intlevel2 0000  
                                     sprintf@ap 00CE                                ??_TMR0_StopTimer 0007  
                          ?_EUSART1_Receive_ISR 0001                           __end_of_getADCCommand 2F22  
                             ??_BLE2_SendBuffer 000E                                        islower@c 0007  
                                      isspace@c 0007                           _cmd_userdefineprofile FFC9  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 2FBA  
       __size_of_EUSART1_SetOverrunErrorHandler 000E                  _EUSART1_SetOverrunErrorHandler 2FAC  
                                      isupper@c 0007                    __end_of_EUSART1_Transmit_ISR 2962  
                             ??_BLE2_SendString 0010                            __end_of_writeDataPtr 2E6C  
                                     strncmp@_l 0007                                       strncmp@_r 0009  
                         ?_getADCCharacteristic 0001                          sendADCCValueBLE@result 00DA  
                              ??_TMR1_StopTimer 0007                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                               ??_BLE2_WakeModule 0007  
                                   _TMR1_Reload 2FE4  EUSART1_SetFramingErrorHandler@interruptHandler 0007  
              fp__EUSART1_SetTxInterruptHandler 0000                  ?_EUSART1_SetTxInterruptHandler 0007  
                      FLASHWriteWordSingle@word 0011                                    ?_getHexValue 0001  
                              _cmd_factoryreset FFE1                        _ADCC_GetConversionResult 2F22  
                                   ??_vfpfcnvrt 00AF                          __size_of_EUSART1_Write 005E  
                            _eusart1RxLastError 008A                                fp__EUSART1_Write 0000  
                                 ?_CRCBurstMode 0001                 __size_of_CRCInitializeBurstMode 0014  
                     processADCCommand@dataRead 0140                                        sprintf@f 00D0  
                                      sprintf@s 00C6                               ?_ADCCSetSensorPin 0001  
                               _TMR0_Initialize 2D64                                 _resp_conn_param FEEF  
                                      strncmp@l 000E                                        strncmp@n 000B  
                                      strncmp@r 0010                           ?_FLASHWriteWordSingle 000D  
                                      toupper@c 000D                                 _ApplicationTask 042A  
                            ??_ADCCSetSensorPin 0007                         _CRC_CalculatedResultGet 1B0C  
                                    _TX1STAbits 000F9D                                 fp__EUSART1_Read 0000  
                ??_ADCC_SetADTIInterruptHandler 000A                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 22AA                               ??_ADCC_Initialize 000A  
               fp__ADCC_DefaultInterruptHandler 0000                   ?_ADCC_DefaultInterruptHandler 0001  
          processADCCommand@lcurrentAdcValuePtr 0146                      __size_ofi2_TMR1_WriteTimer 0028  
                       ??_EUSART1_RxDataHandler 0001                           _CRC_SCAN_StartScanner 3028  
                               _TMR1_Initialize 2890                       _TMR0_UserInterruptHandler 3030  
                CRC_CalculatedResultGet@reverse 0015                   CRC_CalculatedResultGet@result 0016  
